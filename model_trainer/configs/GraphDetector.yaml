base:
  graph: GraphDetector
  event: BSM4Tops
  project-name: GraphDetector
  output-path: ./
  sample-path: /pscratch/sd/<usr>/mc16-dilepton/
  campaign: mc16
  tree: nominal
  training-set: ./dataset.h5
  training-size: 80
  kfolds: 10
  epochs: 200
  kfold: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  continue-training: true
  plot_targets: ["top_edge"]
  evaluation: false
  validation: true
  training: true
  samples:
    sm_tttt:         -1
    sm_ttt:          -1
    bsm_ttttH_400:   -1
    bsm_ttttH_500:   -1
    bsm_ttttH_600:   -1
    bsm_ttttH_700:   -1
    bsm_ttttH_800:   -1
    bsm_ttttH_900:   -1
    bsm_ttttH_1000:  -1
    sm_ttbar:        -1
    sm_ttV:          -1
    sm_tt_Vll:       -1
    sm_Vll:          -1
    sm_llgammagamma: -1
    sm_ttH:          -1
    sm_t:            -1
    sm_wh:           -1
    sm_VVll:         -1
    sm_llll:         -1

MRK-1:
  model: RecursiveGraphNeuralNetwork
  device: cuda:0
  o_edge:
    top_edge: CrossEntropyLoss
    res_edge: CrossEntropyLoss

  o_graph:
    signal: CrossEntropyLoss
    ntops: CrossEntropyLoss

  i_node:
    - pt
    - eta
    - phi
    - energy
    - is_lep
    - is_b 

  i_graph: 
    - met
    - phi
  
  extra-flags:
    is_mc: true
    NuR: true
    rep: 1024
    drop_out: 0.01

  optimizer:
    Optimizer: adam
    lr: 0.000001

MRK-2:
  model: RecursiveGraphNeuralNetwork
  device: cuda:0
  o_edge:
    top_edge: CrossEntropyLoss
    res_edge: CrossEntropyLoss

  o_graph:
    signal: CrossEntropyLoss
    ntops: CrossEntropyLoss

  i_node:
    - pt
    - eta
    - phi
    - energy
    - is_lep
    - is_b 

  i_graph: 
    - met
    - phi
  
  extra-flags:
    is_mc: true
    NuR: true
    rep: 1024
    drop_out: 0.01

  optimizer:
    Optimizer: adam
    lr: 0.00000001

MRK-3:
  model: RecursiveGraphNeuralNetwork
  device: cuda:0
  o_edge:
    top_edge: CrossEntropyLoss
    res_edge: CrossEntropyLoss

  o_graph:
    signal: CrossEntropyLoss
    ntops: CrossEntropyLoss

  i_node:
    - pt
    - eta
    - phi
    - energy
    - is_lep
    - is_b 

  i_graph: 
    - met
    - phi
  
  extra-flags:
    is_mc: true
    NuR: true
    rep: 1024
    drop_out: 0.01

  optimizer:
    Optimizer: adam
    lr: 0.00000001
    amsgrad: true

MRK-4:
  model: RecursiveGraphNeuralNetwork
  device: cuda:0
  o_edge:
    top_edge: CrossEntropyLoss
    res_edge: CrossEntropyLoss

  o_graph:
    signal: CrossEntropyLoss
    ntops: CrossEntropyLoss

  i_node:
    - pt
    - eta
    - phi
    - energy
    - is_lep
    - is_b 

  i_graph: 
    - met
    - phi
  
  extra-flags:
    is_mc: true
    NuR: true
    rep: 1024
    drop_out: 0.01

  optimizer:
    Optimizer: sgd
    lr: 0.000001


MRK-5:
  model: RecursiveGraphNeuralNetwork
  device: cuda:0
  o_edge:
    top_edge: CrossEntropyLoss
    res_edge: CrossEntropyLoss

  o_graph:
    signal: CrossEntropyLoss
    ntops: CrossEntropyLoss

  i_node:
    - pt
    - eta
    - phi
    - energy
    - is_lep
    - is_b 

  i_graph: 
    - met
    - phi
  
  extra-flags:
    is_mc: true
    NuR: true
    rep: 1024
    drop_out: 0.01

  optimizer:
    Optimizer: sgd
    lr: 0.00000001

MRK-6:
  model: RecursiveGraphNeuralNetwork
  device: cuda:0
  o_edge:
    top_edge: CrossEntropyLoss
    res_edge: CrossEntropyLoss

  o_graph:
    signal: CrossEntropyLoss
    ntops: CrossEntropyLoss

  i_node:
    - pt
    - eta
    - phi
    - energy
    - is_lep
    - is_b 

  i_graph: 
    - met
    - phi
  
  extra-flags:
    is_mc: true
    NuR: true
    rep: 1024
    drop_out: 0.01

  optimizer:
    Optimizer: sgd
    lr: 0.00000001
    momentum: 0.1


MRK-7:
  model: RecursiveGraphNeuralNetwork
  device: cuda:0
  o_edge:
    top_edge: CrossEntropyLoss
    res_edge: CrossEntropyLoss

  o_graph:
    signal: CrossEntropyLoss
    ntops: CrossEntropyLoss

  i_node:
    - pt
    - eta
    - phi
    - energy
    - is_lep
    - is_b 

  i_graph: 
    - met
    - phi
  
  extra-flags:
    is_mc: true
    NuR: true
    rep: 1024
    drop_out: 0.01

  optimizer:
    Optimizer: sgd
    lr: 0.00000001
    momentum: 0.1
    dampening: 0.01


      #  inference:
      #    checkpoint_path: ./example/RecursiveGraphNeuralNetwork/MRK-1/state/epoch-31/kfold-1_model.pt

