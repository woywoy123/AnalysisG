name: Building AnalysisG
on:
  pull_request:
      branches:
        - "master"

      paths-ignore:
        - '**.md'
        - 'docs'
        - 'scripts'

  push:
      branches:
        - "master"

      paths-ignore:
        - '**.md'
        - 'docs'
        - 'scripts'

defaults:
  run:
    shell: bash 

jobs:
    build:
        name: "Python ${{ matrix.python-version }} on ${{ matrix.os }} with ${{ matrix.cuda }}"
        runs-on: "${{ matrix.os }}"
        strategy: 
                fail-fast: false
                matrix:
                    os:
                        - ubuntu-22.04
                        - ubuntu-latest

                    python-version:
                        - "3.12"

                    cuda:
                        - '12.5.0'
                        #- '11.7.1'
                        #- '11.7.0'
        steps:      
            - name: "Checkout the repo"
              uses: "actions/checkout@v3"

            - name: "Config-CUDA"
              if: ${{ matrix.cuda != 'cpu' }}
              uses: Jimver/cuda-toolkit@v0.2.16
              id: cuda-toolkit
              with:
                cuda: ${{ matrix.cuda }}
                method: 'network'

            - name: "Configuring Python - ${{ matrix.python-version }}"
              uses: "actions/setup-python@v4"
              with: 
                python-version: "${{ matrix.python-version }}"
           
            - name: "Purge ubuntu image"
              run: |
                sudo apt autoremove -y 
                sudo apt clean
                sudo rm -rf "/usr/local/share/boost"
                sudo rm -rf "$AGENT_TOOLSDIRECTORY"

            - name: "Building ROOT from source"
              run: |
                sudo apt-get install -y git wget
                sudo apt-get install -y build-essential
                sudo apt-get install -y curl 
                sudo apt-get install -y llvm 
                sudo apt-get install -y libhdf5-dev 
                sudo apt-get install -y cmake  
                sudo apt-get install -y libsqlite3-dev
                sudo apt-get install -y build-essential
                sudo apt-get install -y zlib1g-dev
                sudo apt-get install -y libbz2-dev
                sudo apt-get install -y libreadline-dev 
                sudo apt-get install -y liblzma-dev

                wget https://root.cern/download/root_v6.32.02.Linux-almalinux9.4-x86_64-gcc11.4.tar.gz
                tar -xzvf root_v6.32.02.Linux-almalinux9.4-x86_64-gcc11.4.tar.gz
                rm root_v6.32.02.Linux-almalinux9.4-x86_64-gcc11.4.tar.gz
                export HOME=$PWD
                export ROOTSYS=$HOME/root
                export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib
                export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$ROOTSYS/cmake
                export TORCH_CUDA_ARCH_LIST="8.0 8.6 8.9 9.0+PTX"
                export PATH=$ROOTSYS/bin:$PATH

                pip install cython 
                pip install pyyaml 

                mkdir build && cd build 
                cmake .. 
                make -j12
                

