/**
 * @file toptruthjets.h
 * @brief Defines the toptruthjets class for analyzing truth-level top quarks and their associated truth jets.
 *
 * This class inherits from selection_template and implements specific strategies
 * to study the relationship between truth tops and truth jets, including matching,
 * kinematic properties, parton content, and energy contributions.
 */

#ifndef TOPTRUTHJETS_H
#define TOPTRUTHJETS_H

#include <bsm_4tops/event.h> // Provides event data structures like bsm_4tops
#include <templates/selection_template.h> // Base class for analysis selections
#include <vector> // Standard vector container
#include <map> // Standard map container
#include <string> // Standard string class

/**
 * @class toptruthjets
 * @brief An analysis selection class focused on studying truth-level top quarks and truth jets.
 *
 * This class performs several studies:
 * 1. Matches truth tops to the truth jets they decay into.
 * 2. Calculates the invariant mass of truth jets associated with a top.
 * 3. Investigates kinematic distributions (DeltaR, pT, E) between truth jets associated with the same top.
 * 4. Studies the properties of partons within truth jets, including their origin and contribution to the jet kinematics.
 * 5. Analyzes the energy contribution of ghost partons to truth jets.
 * 6. Collects statistics on tops that are not matched to any truth jets.
 */
class toptruthjets: public selection_template
{
    public:
        /**
         * @brief Default constructor for the toptruthjets class.
         * Initializes the selection name.
         */
        toptruthjets();

        /**
         * @brief Destructor for the toptruthjets class.
         * Overrides the base class destructor.
         */
        ~toptruthjets() override;

        /**
         * @brief Creates a new instance of the toptruthjets class.
         * This is used for cloning the selection object, typically in a parallel processing environment.
         * @return A pointer to a new toptruthjets object, cast to selection_template*.
         */
        selection_template* clone() override;

        /**
         * @brief Merges data from another toptruthjets instance into this one.
         * This is essential for combining results from parallel processing or different data chunks.
         * It aggregates the statistics collected in the various maps and vectors.
         * @param sl A pointer to another selection_template object, which will be dynamically cast to toptruthjets*.
         */
        void merge(selection_template* sl) override;

        /**
         * @brief Defines the event selection criteria.
         * Currently, this selection always returns true, meaning all events pass this initial cut.
         * Specific analysis logic is implemented in the strategy method.
         * @param ev A pointer to the event_template object representing the current event.
         * @return Always returns true in this implementation.
         */
        bool selection(event_template* ev) override;

        /**
         * @brief Implements the core analysis strategy for studying truth tops and truth jets.
         * This method is called for each event that passes the `selection` method. It performs the following steps:
         *
         * 1.  **Truth Top - Truth Jet Matching:**
         *     - Iterates through each truth top (`top`) in the event (`bsm_4tops* evn`).
         *     - Retrieves the truth jets (`particle_template*`) associated with the current top.
         *     - Includes leptonic decay products if present.
         *     - Counts tops that have no associated truth jets (`lost`).
         *
         * 2.  **Top Mass Reconstruction & Kinematics:**
         *     - Calculates the invariant mass (`top_mass`) of the unique set of associated truth jets.
         *     - Counts the number of truth jets (`n_tru_j`) associated with the top.
         *     - Determines how many distinct tops (`n_tops`) share any of the associated truth jets (jet merging).
         *     - Stores the calculated `top_mass` categorized by the top's decay mode (`leptonic`/`hadronic`), the number of associated truth jets (`ntruthjets`), and the number of merged tops (`merged_tops`).
         *
         * 3.  **Kinematic Studies:**
         *     - Iterates through pairs of truth jets associated with the same top.
         *     - Calculates and stores the DeltaR (`dr`) between these pairs.
         *     - Stores the top's energy (`energy`) and transverse momentum (`pt`).
         *     - Categorizes these kinematic variables by the top's origin (`resonant`/`spectator`) and decay mode (`leptonic`/`hadronic`).
         *     - Calculates and stores the DeltaR between a top's truth jet and other truth jets in the event *not* associated with that top (background study).
         *
         * 4.  **Parton Studies:**
         *     - Iterates through each truth jet associated with a top.
         *     - Iterates through the constituent partons (`truthjetparton*`) of the truth jet.
         *     - Calculates and stores the DeltaR (`dr`) between the parton and its parent truth jet.
         *     - Stores the kinematics (pt, energy) of the top, the parton, and the truth jet.
         *     - Stores the parton symbol (`sym`).
         *     - Categorizes these by the associated top's origin and decay mode.
         *     - Performs a similar study for partons in truth jets *not* associated with any top (background study), storing kinematics and DeltaR.
         *
         * 5.  **Ghost Parton Energy Contribution:**
         *     - Iterates through all truth jets in the event.
         *     - Calculates the sum of the four-vectors of the unique constituent partons.
         *     - Stores the ratio of the truth jet's pT/energy to the summed partons' pT/energy (`truthjets_contribute`).
         *     - Stores the number of constituent partons (`n-partons`).
         *     - Stores the truth jet's mass (`truthjet_mass`).
         *     - Stores the number of tops associated with the truth jet (`n-tops`).
         *     - For truth jets associated with tops, calculates the energy contribution of partons originating from specific tops relative to the total parton energy sum within the jet. Stores this ratio (`energy_r`) categorized by the number of tops associated with the jet (`n-tops`).
         *
         * @param ev A pointer to the event_template object (dynamically cast to bsm_4tops*).
         * @return Always returns true, indicating the strategy execution was successful (though the logic might skip parts based on event content).
         */
        bool strategy(event_template* ev) override;

        /**
         * @brief Stores the reconstructed top mass based on associated truth jets.
         * Structure: { decay_mode/category : { sub_category : { value : [masses] } } }
         * - Top Level Keys: "leptonic", "hadronic", "ntruthjets", "merged_tops"
         * - Second Level Keys:
         *   - For "leptonic"/"hadronic": "" (empty string)
         *   - For "ntruthjets": "leptonic", "hadronic"
         *   - For "merged_tops": "leptonic", "hadronic"
         * - Third Level Keys:
         *   - For "leptonic"/"hadronic": "" (empty string)
         *   - For "ntruthjets": Number of truth jets (as string)
         *   - For "merged_tops": Number of merged tops (as string)
         * - Value: Vector of reconstructed top masses (float).
         */
        std::map<std::string, std::map<std::string, std::map<std::string, std::vector<float>>>> top_mass;

        /**
         * @brief Stores kinematic information about partons within truth jets.
         * Structure: { top_category : { parton_symbol : { variable : [values] } } }
         * - Top Level Keys: Top origin and decay ("resonant-leptonic", "resonant-hadronic", "spectator-leptonic", "spectator-hadronic", "background")
         * - Second Level Keys: Parton symbol ("b", "q", "g", "l", "nu", "null", etc.)
         * - Third Level Keys: Kinematic variable ("dr", "top-pt", "top-energy", "parton-pt", "parton-energy", "truthjet-pt", "truthjet-energy")
         * - Value: Vector of kinematic values (float).
         */
        std::map<std::string, std::map<std::string, std::map<std::string, std::vector<float>>>> truthjet_partons;

        /**
         * @brief Stores information about the energy contribution of partons to truth jets.
         * Structure: { category : { sub_category : { variable : [values] } } }
         * - Top Level Keys: "", "n-tops"
         * - Second Level Keys:
         *   - For "": "all"
         *   - For "n-tops": Number of associated tops (as string)
         * - Third Level Keys:
         *   - For "all": "pt" (ratio), "energy" (ratio), "n-partons"
         *   - For n-tops: "energy_r" (relative energy contribution)
         * - Value: Vector of calculated values (float).
         */
        std::map<std::string, std::map<std::string, std::map<std::string, std::vector<float>>>> truthjets_contribute;

        /**
         * @brief Stores kinematic information comparing truth jets associated with the same top or background jets.
         * Structure: { category : { variable : [values] } }
         * - Top Level Keys: Top origin and decay ("resonant-leptonic", etc.), "background"
         * - Second Level Keys: Kinematic variable ("dr", "energy", "pt")
         * - Value: Vector of kinematic values (float).
         */
        std::map<std::string, std::map<std::string, std::vector<float>>> truthjet_top;

        /**
         * @brief Stores mass-related information for all truth jets.
         * Structure: { variable : [values] }
         * - Keys: "all" (mass in GeV), "n-tops" (number of associated tops)
         * - Value: Vector of values (float).
         */
        std::map<std::string, std::vector<float>> truthjet_mass;

        /**
         * @brief Stores the count of truth tops lost (not matched to any truth jets) per event.
         */
        std::vector<int> ntops_lost;

};

#endif // TOPTRUTHJETS_H
