digraph "tools::ends_with"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="tools::ends_with",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Checks if a string ends with a specific substring."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="plotting::build_path",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classplotting.html#ae528701faff0a6f14e970d3a920f6081",tooltip="Builds a complete path for output files based on configured settings."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="io::check_root_file\l_paths",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classio.html#ad9ed4dbed35a168511c44b38f8e8269b",tooltip="Checks the validity or accessibility of ROOT file paths defined in settings or configurations."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="tools::ls",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classtools.html#a5ab0f2cc351dd97951358ebe19e9c18d",tooltip="Lists files in a directory, optionally filtered by extension."];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="analysis::analysis",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classanalysis.html#a1391073bb18c75cdad4132e90992fcd3",tooltip="< Public access specifier for the following members."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="dataloader::restore\l_graphs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdataloader.html#ae3bba702555507d8b6e5567c34d19142",tooltip=" "];
  Node4 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="io::trigger_pcm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classio.html#a38cda1cf4b0ad6920e19780ad985d374",tooltip="Triggers the generation of a ROOT PCM (Precompiled Module) if needed for dictionary generation."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="meta::parse_json",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmeta.html#aaed15ab5be8f7a86c79373f24abfc952",tooltip="Parses a JSON string to extract metadata."];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="meta::scan_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmeta.html#ac20aa6b655d77e02eb08aabe78b6af7e",tooltip="Scans data from a generic ROOT object (e.g., TTree, TH1)."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="io::scan_keys",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classio.html#aacb050c4cb6c10038d6bf8edb7244a28",tooltip="Scans for keys (e.g., TTree names, TBranch names) in the open ROOT files."];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="io::root_begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classio.html#a65c36380ef79524e8235f792abe9625c",tooltip="Initializes ROOT file processing, potentially opening files specified in settings."];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="io::get_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classio.html#ae346e23a45d73c24f844827495912941",tooltip="Retrieves the data read from ROOT files, likely structured as a map of data_t objects."];
  Node10 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="io::root_size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classio.html#a66a6d354d07e8aa4f9fdadc8f74a314b",tooltip="Retrieves the sizes (number of entries) of TTrees in the open ROOT files."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="analysis::start",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classanalysis.html#a401745bb4bcae03160ffa0b5df2887e7",tooltip="Starts the analysis execution."];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="dataloader::dump_dataset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdataloader.html#a6a829ac2b88dd9655a52bdf3e3701259",tooltip=" "];
  Node14 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="dataloader::restore\l_dataset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdataloader.html#a5fddffa25c532953896e2d1646ca1dc4",tooltip=" "];
}
