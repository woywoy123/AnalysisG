<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classregions" kind="class" language="C++" prot="public">
    <compoundname>regions</compoundname>
    <basecompoundref refid="classselection__template" prot="public" virt="non-virtual">selection_template</basecompoundref>
    <includes refid="regions_8h" local="no">regions.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classregions_1a37f387de5a8e8f3770c70e53f3a3adfb" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structpackage__t" kindref="compound">package_t</ref> &gt;</type>
        <definition>std::vector&lt;package_t&gt; regions::output</definition>
        <argsstring></argsstring>
        <name>output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/analysis/regions/regions.h" line="53" column="21" bodyfile="selections/analysis/regions/regions.h" bodystart="53" bodyend="-1"/>
        <referencedby refid="classregions_1aefc0916bc31bfb139b311846a0e33c3a" compoundref="regions_8cxx" startline="10" endline="45">merge</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classregions_1a4a0380db42ea24ddd9734890e648103c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>regions::regions</definition>
        <argsstring>()</argsstring>
        <name>regions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/analysis/regions/regions.h" line="45" column="9" bodyfile="selections/analysis/regions/regions.cxx" bodystart="3" bodyend="3"/>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">selection_template::name</references>
        <referencedby refid="classregions_1a0a3e2cf8a1ec99674183facc05169e4b" compoundref="regions_8cxx" startline="6" endline="8">clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classregions_1ad1843f78890f7baa7b4698efaecfa8da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>regions::~regions</definition>
        <argsstring>() override</argsstring>
        <name>~regions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/analysis/regions/regions.h" line="46" column="9" bodyfile="selections/analysis/regions/regions.cxx" bodystart="4" bodyend="4"/>
      </memberdef>
      <memberdef kind="function" id="classregions_1a0a3e2cf8a1ec99674183facc05169e4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
        <definition>selection_template * regions::clone</definition>
        <argsstring>() override</argsstring>
        <name>clone</name>
        <reimplements refid="classselection__template_1a094ce1eb2b6463f88a8ad5f7dfd8e4b6">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/analysis/regions/regions.h" line="47" column="28" bodyfile="selections/analysis/regions/regions.cxx" bodystart="6" bodyend="8"/>
        <references refid="classregions_1a4a0380db42ea24ddd9734890e648103c" compoundref="regions_8cxx" startline="3" endline="3">regions</references>
      </memberdef>
      <memberdef kind="function" id="classregions_1a2791d92040332ab142ed3733117de6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool regions::selection</definition>
        <argsstring>(event_template *ev) override</argsstring>
        <name>selection</name>
        <reimplements refid="classselection__template_1a906e3f695a675e5a545fa4eab867cfd7">selection</reimplements>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/analysis/regions/regions.h" line="49" column="14" bodyfile="selections/analysis/regions/regions.cxx" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classregions_1a238dd04a8c824c8db401e41d36cd428b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool regions::strategy</definition>
        <argsstring>(event_template *ev) override</argsstring>
        <name>strategy</name>
        <reimplements refid="classselection__template_1a01a81c84699bb054a8c320fc5575e17b">strategy</reimplements>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/analysis/regions/regions.h" line="50" column="14" bodyfile="selections/analysis/regions/regions.cxx" bodystart="51" bodyend="824"/>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" compoundref="test__normalization_8py" startline="9">test_normalization.evn</references>
        <references refid="classselection__template_1a82f14833e404fbe0399a2a539eef75b1" compoundref="selection__template_8h" startline="143" endline="146">selection_template::upcast</references>
      </memberdef>
      <memberdef kind="function" id="classregions_1aefc0916bc31bfb139b311846a0e33c3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void regions::merge</definition>
        <argsstring>(selection_template *sl) override</argsstring>
        <name>merge</name>
        <reimplements refid="classselection__template_1ad04ca3679a943defbd47c05a88448aba">merge</reimplements>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <declname>sl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/analysis/regions/regions.h" line="51" column="14" bodyfile="selections/analysis/regions/regions.cxx" bodystart="10" bodyend="45"/>
        <references refid="namespacefigures_1aee12770fcae74aea334a4e7b2b7774e1" compoundref="analysis_2figures_8py" startline="52" endline="56">figures.CR1b3le</references>
        <references refid="namespacefigures_1a1098026204eae17b921065ceebb72be7" compoundref="analysis_2figures_8py" startline="47" endline="51">figures.CR1b3lem</references>
        <references refid="namespacefigures_1a05183b2d7b13db1d146846c1607f395a" compoundref="analysis_2figures_8py" startline="57" endline="61">figures.CR1b3lm</references>
        <references refid="namespacefigures_1ac4f134cc0b8b3dc3dd83427e5557c443" compoundref="analysis_2figures_8py" startline="77" endline="81">figures.CR1bminus</references>
        <references refid="namespacefigures_1a1f85cef3f3b44885f07d963ab8050bf9" compoundref="analysis_2figures_8py" startline="72" endline="76">figures.CR1bplus</references>
        <references refid="namespacefigures_1a2934a7660cf3785301e503ab34a1d7f9" compoundref="analysis_2figures_8py" startline="27" endline="31">figures.CRttbarCO2l_CO</references>
        <references refid="namespacefigures_1a529d6c0b5be4f794e93de3e30413809a" compoundref="analysis_2figures_8py" startline="32" endline="36">figures.CRttbarCO2l_CO_2b</references>
        <references refid="namespacefigures_1a032a8e7126679a3da7099a66f43a0b70" compoundref="analysis_2figures_8py" startline="37" endline="41">figures.CRttbarCO2l_gstr</references>
        <references refid="namespacefigures_1ae807c2b73621981ae598033f8aa880a3" compoundref="analysis_2figures_8py" startline="42" endline="46">figures.CRttbarCO2l_gstr_2b</references>
        <references refid="namespacefigures_1a4e34cbdff38177e3c192ff4439407749" compoundref="analysis_2figures_8py" startline="82" endline="86">figures.CRttW2l</references>
        <references refid="namespacefigures_1ac53318ad1fde76d5250b3a930dae2246" compoundref="analysis_2figures_8py" startline="67" endline="71">figures.CRttW2l_minus</references>
        <references refid="namespacefigures_1a66037dc90f56b62709c8003c43172c34" compoundref="analysis_2figures_8py" startline="62" endline="66">figures.CRttW2l_plus</references>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">selection_template::data</references>
        <references refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" compoundref="merge__cast_8h" startline="9" endline="11">merge_data</references>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">selection_template::name</references>
        <references refid="classregions_1a37f387de5a8e8f3770c70e53f3a3adfb" compoundref="regions_8h" startline="53">output</references>
        <references refid="namespacesample__consistency_1abbc834de0dcfdeb31411d76395e4dc46" compoundref="sample__consistency_8py" startline="99">sample_consistency.passed</references>
        <references refid="namespacemain_1a80457db91bd1110a9e4a8515839a2a4b" compoundref="metrics_2main_8py" startline="4">main.sl</references>
        <references refid="namespacefigures_1a2985a2cf0d3069d5da5c86ec0e564c4f" compoundref="analysis_2figures_8py" startline="123" endline="125">figures.SR</references>
        <references refid="namespacefigures_1a27e7689e5fd8ca547d2b245e8b20065e" compoundref="analysis_2figures_8py" startline="96" endline="98">figures.SR2b</references>
        <references refid="namespacefigures_1a01a262135408ef112caab6089b6d2153" compoundref="analysis_2figures_8py" startline="102" endline="104">figures.SR2b2l</references>
        <references refid="namespacefigures_1acd1f9fbbf1d411bd84a0d8fdc58d32d4" compoundref="analysis_2figures_8py" startline="105" endline="107">figures.SR2b3l4l</references>
        <references refid="namespacefigures_1ad967e15d608b2336d830455d6b2cd2f0" compoundref="analysis_2figures_8py" startline="108" endline="110">figures.SR2b4l</references>
        <references refid="namespacefigures_1a0e9582fa49bfccb8613d558076e59326" compoundref="analysis_2figures_8py" startline="99" endline="101">figures.SR3b</references>
        <references refid="namespacefigures_1ac254c035535dd6ffeea655c156ad88fe" compoundref="analysis_2figures_8py" startline="111" endline="113">figures.SR3b2l</references>
        <references refid="namespacefigures_1a0a0571e315f1b3b6842a4cc08ff03f30" compoundref="analysis_2figures_8py" startline="114" endline="116">figures.SR3b3l4l</references>
        <references refid="namespacefigures_1acd400bdf8261f3f759cf0bdb45024227" compoundref="analysis_2figures_8py" startline="117" endline="119">figures.SR3b4l</references>
        <references refid="namespacefigures_1a90279eaf2304f52d1bc8ce1ff7436c69" compoundref="analysis_2figures_8py" startline="93" endline="95">figures.SR4b</references>
        <references refid="namespacefigures_1a41fbeb64408c27ef0998366eb501a390" compoundref="analysis_2figures_8py" startline="120" endline="122">figures.SR4b4l</references>
        <references refid="namespacefigures_1a61ccb5db4a6741f71aa9449bd2ff183f" compoundref="analysis_2figures_8py" startline="90" endline="92">figures.VRttWCRSR</references>
        <references refid="namespacefigures_1a17abcf146f7542dbbd8f7cd0fcb905a4" compoundref="analysis_2figures_8py" startline="87" endline="89">figures.VRttZ3l</references>
        <references refid="classselection__template_1a03816f18e6ce9351cd099525862c7c64" compoundref="selection__template_8h" startline="35">selection_template::weight</references>
        <references refid="classselection__template_1ae5606e994231fae57abe42e4f0ec6202" compoundref="selection__template_8cxx" startline="10" endline="55">selection_template::write</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>selection_template</label>
        <link refid="classselection__template"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>regions</label>
        <link refid="classregions"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>cproperty&lt; std::vector&lt; int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>meta</label>
        <link refid="classmeta"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>dsid</edgelabel>
          <edgelabel>nFiles</edgelabel>
          <edgelabel>datasetNumber</edgelabel>
          <edgelabel>totalEvents</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>cross_section_nb</edgelabel>
          <edgelabel>completion</edgelabel>
          <edgelabel>cross_section_fb</edgelabel>
          <edgelabel>ecmEnergy</edgelabel>
          <edgelabel>event_index</edgelabel>
          <edgelabel>sum_of_weights</edgelabel>
          <edgelabel>beam_energy</edgelabel>
          <edgelabel>cross_section_pb</edgelabel>
          <edgelabel>genFiltEff</edgelabel>
          <edgelabel>eventNumber</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>isMC</edgelabel>
          <edgelabel>found</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>std::map&lt; std::string, meta_t &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, meta_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>K</label>
      </node>
      <node id="27">
        <label>T</label>
      </node>
      <node id="12">
        <label>cproperty&lt; unsigned int, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; unsigned int, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>weights_t</label>
        <link refid="structweights__t"/>
        <childnode refid="30" relation="usage">
          <edgelabel>hist_data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>generator</edgelabel>
          <edgelabel>ami_tag</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::vector&lt; double &gt;</label>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>cproperty&lt; long, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; long, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>regions_t</label>
        <link refid="structregions__t"/>
      </node>
      <node id="17">
        <label>cproperty&lt; std::string, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::string, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>std::map&lt; std::string, weights_t &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, weights_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>cproperty&lt; double, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::map&lt; int, std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; int, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>cproperty&lt; std::vector&lt; double &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; double &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>cproperty&lt; std::map&lt; int, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>std::map&lt; int, int &gt;</label>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; int, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>selection_template</label>
        <link refid="classselection__template"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>meta_data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>matched_meta</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>passed_weights</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>index</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>weight</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>cproperty&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>cproperty&lt; T, G &gt;</label>
        <link refid="classcproperty"/>
      </node>
      <node id="43">
        <label>package_t</label>
        <link refid="structpackage__t"/>
        <childnode refid="44" relation="usage">
          <edgelabel>SR3b4l</edgelabel>
          <edgelabel>VRttZ3l</edgelabel>
          <edgelabel>SR2b4l</edgelabel>
          <edgelabel>CRttbarCO2l_gstr_2b</edgelabel>
          <edgelabel>SR3b2l</edgelabel>
          <edgelabel>SR2b2l</edgelabel>
          <edgelabel>CRttbarCO2l_CO</edgelabel>
          <edgelabel>CR1b3lm</edgelabel>
          <edgelabel>CR1bplus</edgelabel>
          <edgelabel>CRttbarCO2l_gstr</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>cproperty&lt; std::string, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::string, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>cproperty&lt; std::map&lt; int, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="23">
        <label>meta_t</label>
        <link refid="structmeta__t"/>
        <childnode refid="24" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::map&lt; std::string, std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>std::map&lt; std::string, std::map&lt; std::string, float &gt; &gt;</label>
        <childnode refid="30" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, std::map&lt; std::string, float &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>std::map&lt; std::string, float &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, float &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>cproperty&lt; bool, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; bool, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>event_t</label>
        <link refid="structevent__t"/>
        <childnode refid="5" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>cproperty&lt; std::map&lt; std::string, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>regions</label>
        <link refid="classregions"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>output</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>cproperty&lt; double, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>std::map&lt; std::string, int &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="5" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::vector&lt; int &gt;</label>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="42">
        <label>std::vector&lt; package_t &gt;</label>
        <childnode refid="43" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; package_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>cproperty&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="selections/analysis/regions/regions.h" line="43" column="1" bodyfile="selections/analysis/regions/regions.h" bodystart="42" bodyend="54"/>
    <listofallmembers>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>regions</scope><name>absolute_path</name></member>
      <member refid="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" prot="public" virt="non-virtual"><scope>regions</scope><name>build</name></member>
      <member refid="classselection__template_1a6a9f6df015c9f8e48c65cacc249c4fdf" prot="public" virt="virtual"><scope>regions</scope><name>bulk_write</name></member>
      <member refid="classregions_1a0a3e2cf8a1ec99674183facc05169e4b" prot="public" virt="virtual"><scope>regions</scope><name>clone</name></member>
      <member refid="classselection__template_1a9deff703f50fdff72bd1edf3664a9d75" prot="public" virt="non-virtual"><scope>regions</scope><name>CompileEvent</name></member>
      <member refid="classselection__template_1a3009dc4bb45c47d96a5bdc4096bd6870" prot="public" virt="non-virtual"><scope>regions</scope><name>contains</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>regions</scope><name>create_path</name></member>
      <member refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" prot="public" virt="non-virtual"><scope>regions</scope><name>data</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>regions</scope><name>delete_path</name></member>
      <member refid="classselection__template_1ab32b926ee893cf56dc27913271658d1e" prot="public" virt="non-virtual"><scope>regions</scope><name>downcast</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>regions</scope><name>ends_with</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>regions</scope><name>extract</name></member>
      <member refid="classselection__template_1ad220a2da4b57303d8a5b162b6733024f" prot="public" virt="non-virtual"><scope>regions</scope><name>filename</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>regions</scope><name>flush</name></member>
      <member refid="classselection__template_1a2f6cd45079e1fab94a163a38fbe005cd" prot="public" virt="non-virtual"><scope>regions</scope><name>get_hash</name></member>
      <member refid="classselection__template_1ad27d2cd85c19147b85b1e96ce73bdade" prot="public" virt="non-virtual"><scope>regions</scope><name>get_leptonics</name></member>
      <member refid="classselection__template_1ad0d6fa60bf0da8796a718532c0288d04" prot="public" virt="non-virtual"><scope>regions</scope><name>get_name</name></member>
      <member refid="classselection__template_1a4e61c1d63afdff7a6428fbf4c6297166" prot="public" virt="non-virtual"><scope>regions</scope><name>get_tree</name></member>
      <member refid="classselection__template_1ae04fb8767d15273f80c5343e2f73384b" prot="public" virt="non-virtual"><scope>regions</scope><name>get_weight</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>regions</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>regions</scope><name>has_value</name></member>
      <member refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" prot="public" virt="non-virtual"><scope>regions</scope><name>hash</name></member>
      <member refid="classselection__template_1a2e1c4a9239afbfea9cd510b774c9c1fe" prot="public" virt="non-virtual"><scope>regions</scope><name>index</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>regions</scope><name>is_file</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>regions</scope><name>ls</name></member>
      <member refid="classselection__template_1ab760e9d895d74e62a9d4bfe436568a86" prot="public" virt="non-virtual"><scope>regions</scope><name>make_unique</name></member>
      <member refid="classselection__template_1a50e7d1939618dcb8b6386f5e7a247e12" prot="public" virt="non-virtual"><scope>regions</scope><name>matched_meta</name></member>
      <member refid="classregions_1aefc0916bc31bfb139b311846a0e33c3a" prot="public" virt="virtual"><scope>regions</scope><name>merge</name></member>
      <member refid="classselection__template_1a15113e43e1451e9e65b9f327fcfc7e15" prot="public" virt="non-virtual"><scope>regions</scope><name>meta_data</name></member>
      <member refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" prot="public" virt="non-virtual"><scope>regions</scope><name>name</name></member>
      <member refid="classselection__template_1a0e423716b1439b853d39904998074ecd" prot="public" virt="non-virtual"><scope>regions</scope><name>operator==</name></member>
      <member refid="classregions_1a37f387de5a8e8f3770c70e53f3a3adfb" prot="public" virt="non-virtual"><scope>regions</scope><name>output</name></member>
      <member refid="classselection__template_1ad472a18c63b8b1d6e41fbe626b13fc40" prot="public" virt="non-virtual"><scope>regions</scope><name>passed_weights</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>regions</scope><name>put</name></member>
      <member refid="classregions_1a4a0380db42ea24ddd9734890e648103c" prot="public" virt="non-virtual"><scope>regions</scope><name>regions</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>regions</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>regions</scope><name>replace</name></member>
      <member refid="classselection__template_1a2c99ad97301a85fc7c7257930d990cfd" prot="public" virt="non-virtual"><scope>regions</scope><name>reverse_hash</name></member>
      <member refid="classselection__template_1a4faf71140920bc4cf0fc06072cecad07" prot="public" virt="non-virtual"><scope>regions</scope><name>safe_delete</name></member>
      <member refid="classregions_1a2791d92040332ab142ed3733117de6ac" prot="public" virt="virtual"><scope>regions</scope><name>selection</name></member>
      <member refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" prot="public" virt="non-virtual"><scope>regions</scope><name>selection_template</name></member>
      <member refid="classselection__template_1acd31f17488bcf97dd8a5f1b3a7da1cdd" prot="public" virt="non-virtual"><scope>regions</scope><name>set_hash</name></member>
      <member refid="classselection__template_1a8951c34758d3410f9d931b6011c3cca2" prot="public" virt="non-virtual"><scope>regions</scope><name>set_index</name></member>
      <member refid="classselection__template_1a19244d585754db14326c126a98000899" prot="public" virt="non-virtual"><scope>regions</scope><name>set_name</name></member>
      <member refid="classselection__template_1aa95e812106c1a933f1b65e82557939d3" prot="public" virt="non-virtual"><scope>regions</scope><name>set_weight</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>regions</scope><name>split</name></member>
      <member refid="classregions_1a238dd04a8c824c8db401e41d36cd428b" prot="public" virt="virtual"><scope>regions</scope><name>strategy</name></member>
      <member refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" prot="public" virt="non-virtual"><scope>regions</scope><name>sum</name></member>
      <member refid="classselection__template_1af639e8d3a86f1fa5cdfd2fe58e2e5dfb" prot="public" virt="non-virtual"><scope>regions</scope><name>sum</name></member>
      <member refid="classselection__template_1aefb54851b728057af466bf7a78caeda8" prot="public" virt="non-virtual"><scope>regions</scope><name>sum</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual" ambiguityscope="tools::"><scope>regions</scope><name>sum</name></member>
      <member refid="classselection__template_1a41a437aca3bb2a7f854a66ff92942d46" prot="public" virt="non-virtual"><scope>regions</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a74558331b11dd6822a975a32203286ac" prot="public" virt="non-virtual"><scope>regions</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a3bde46eb8ab3699d6f3eab6077d9716c" prot="public" virt="non-virtual"><scope>regions</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a572f52e2758979cda89605e207e57c87" prot="public" virt="non-virtual"><scope>regions</scope><name>switch_board</name></member>
      <member refid="classselection__template_1ac565e3beb94b557fc947a6f8afebfc4d" prot="public" virt="non-virtual"><scope>regions</scope><name>threadIdx</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>regions</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>regions</scope><name>to_string</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>regions</scope><name>tools</name></member>
      <member refid="classselection__template_1a57ff66ff6c5ff5af5e81298faf6bf521" prot="public" virt="non-virtual"><scope>regions</scope><name>tree</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>regions</scope><name>trim</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>regions</scope><name>type_name</name></member>
      <member refid="classselection__template_1a82f14833e404fbe0399a2a539eef75b1" prot="public" virt="non-virtual"><scope>regions</scope><name>upcast</name></member>
      <member refid="classselection__template_1ae5ce6c75d19fdbb2ab18ba05b3ea4c58" prot="public" virt="non-virtual"><scope>regions</scope><name>upcast</name></member>
      <member refid="classselection__template_1a7e1560964237cf7b4846e24b300d7b9e" prot="public" virt="non-virtual"><scope>regions</scope><name>vectorize</name></member>
      <member refid="classselection__template_1a03816f18e6ce9351cd099525862c7c64" prot="public" virt="non-virtual"><scope>regions</scope><name>weight</name></member>
      <member refid="classselection__template_1ae5606e994231fae57abe42e4f0ec6202" prot="public" virt="virtual"><scope>regions</scope><name>write</name></member>
      <member refid="classselection__template_1a67768227c6c6a8e69edd0dc618a70eb9" prot="public" virt="non-virtual"><scope>regions</scope><name>write</name></member>
      <member refid="classselection__template_1a0983bf7c4582968c8c3b1a970fb3689e" prot="public" virt="non-virtual"><scope>regions</scope><name>write</name></member>
      <member refid="classregions_1ad1843f78890f7baa7b4698efaecfa8da" prot="public" virt="non-virtual"><scope>regions</scope><name>~regions</name></member>
      <member refid="classselection__template_1af0b32265d850bfcd861a7f4744426856" prot="public" virt="virtual"><scope>regions</scope><name>~selection_template</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>regions</scope><name>~tools</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
