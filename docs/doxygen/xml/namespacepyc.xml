<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacepyc" kind="namespace" language="C++">
    <compoundname>pyc</compoundname>
    <innernamespace refid="namespacepyc_1_1graph">pyc::graph</innernamespace>
    <innernamespace refid="namespacepyc_1_1nusol">pyc::nusol</innernamespace>
    <innernamespace refid="namespacepyc_1_1operators">pyc::operators</innernamespace>
    <innernamespace refid="namespacepyc_1_1physics">pyc::physics</innernamespace>
    <innernamespace refid="namespacepyc_1_1transform">pyc::transform</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepyc_1ab174cc51f6efef06bdb0ba47ec3fe3bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Dict&lt; std::string, torch::Tensor &gt;</type>
        <definition>torch::Dict&lt; std::string, torch::Tensor &gt; pyc::std_to_dict</definition>
        <argsstring>(std::map&lt; std::string, torch::Tensor &gt; *inpt)</argsstring>
        <name>std_to_dict</name>
        <param>
          <type>std::map&lt; std::string, torch::Tensor &gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="23" column="17" bodyfile="pyc/interface/interface.cxx" bodystart="20" bodyend="25" declfile="pyc/interface/include/pyc/pyc.h" declline="23" declcolumn="17"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <referencedby refid="namespacepyc_1_1nusol_1a66ad18c125df47cd81fd3043ab4cc2f3" compoundref="interface_2nusol_8cxx" startline="11" endline="14">pyc::nusol::BaseMatrix</referencedby>
        <referencedby refid="namespacepyc_1_1nusol_1a0b618f866aa33e16c704d828744335e1" compoundref="interface_2nusol_8cxx" startline="47" endline="55">pyc::nusol::combinatorial</referencedby>
        <referencedby refid="namespacepyc_1_1graph_1aa28a4253050413ec67a3313635a699ad" compoundref="interface_2graph_8cxx" startline="75" endline="82">pyc::graph::edge_aggregation</referencedby>
        <referencedby refid="namespacepyc_1_1graph_1_1polar_1ab00a9b5d4070afc2aac6fd639d82c46b" compoundref="interface_2graph_8cxx" startline="102" endline="110">pyc::graph::polar::edge_aggregation</referencedby>
        <referencedby refid="namespacepyc_1_1graph_1_1cartesian_1a0c4efe06c06429b730d408323dcaf302" compoundref="interface_2graph_8cxx" startline="144" endline="151">pyc::graph::cartesian::edge_aggregation</referencedby>
        <referencedby refid="namespacepyc_1_1graph_1a122f7af31a0d3d53790f3389ffef5073" compoundref="interface_2graph_8cxx" startline="84" endline="91">pyc::graph::node_aggregation</referencedby>
        <referencedby refid="namespacepyc_1_1graph_1_1polar_1a4b8251423b7ede00df4fbda3ab664485" compoundref="interface_2graph_8cxx" startline="112" endline="120">pyc::graph::polar::node_aggregation</referencedby>
        <referencedby refid="namespacepyc_1_1graph_1_1cartesian_1a876b2614216840138fb428e66f4938b8" compoundref="interface_2graph_8cxx" startline="153" endline="160">pyc::graph::cartesian::node_aggregation</referencedby>
        <referencedby refid="namespacepyc_1_1nusol_1a991cfa801400211ccf412bd1a85b7b69" compoundref="interface_2nusol_8cxx" startline="16" endline="23">pyc::nusol::Nu</referencedby>
        <referencedby refid="namespacepyc_1_1nusol_1a9650527ae538fa27121bedfb79a1fbe6" compoundref="interface_2nusol_8cxx" startline="25" endline="34">pyc::nusol::NuNu</referencedby>
        <referencedby refid="namespacepyc_1_1graph_1a2f6c4c8a0a97cb02e98e17a22345ba95" compoundref="interface_2graph_8cxx" startline="14" endline="32">pyc::graph::PageRank</referencedby>
        <referencedby refid="namespacepyc_1_1graph_1a509b4a1583be203ff16f22594194655b" compoundref="interface_2graph_8cxx" startline="35" endline="56">pyc::graph::PageRankReconstruction</referencedby>
        <referencedby refid="namespacepyc_1a28f5ffe47cca2a3cbaffaf73dbd0993c" compoundref="interface_8cxx" startline="27" endline="29">std_to_dict</referencedby>
        <referencedby refid="namespacepyc_1_1graph_1a6b142e7f996e314f3c8a971e471d6d95" compoundref="interface_2graph_8cxx" startline="93" endline="100">pyc::graph::unique_aggregation</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1a28f5ffe47cca2a3cbaffaf73dbd0993c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Dict&lt; std::string, torch::Tensor &gt;</type>
        <definition>torch::Dict&lt; std::string, torch::Tensor &gt; pyc::std_to_dict</definition>
        <argsstring>(std::map&lt; std::string, torch::Tensor &gt; inpt)</argsstring>
        <name>std_to_dict</name>
        <param>
          <type>std::map&lt; std::string, torch::Tensor &gt;</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="24" column="17" bodyfile="pyc/interface/interface.cxx" bodystart="27" bodyend="29" declfile="pyc/interface/include/pyc/pyc.h" declline="24" declcolumn="17"/>
        <references refid="namespacepyc_1ab174cc51f6efef06bdb0ba47ec3fe3bf" compoundref="interface_8cxx" startline="20" endline="25">std_to_dict</references>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1aed2996264099d57c7d42ac156c54981d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Tensor</type>
        <definition>torch::Tensor pyc::tensorize</definition>
        <argsstring>(std::vector&lt; std::vector&lt; double &gt;&gt; *inpt)</argsstring>
        <name>tensorize</name>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="25" column="19" bodyfile="pyc/interface/interface.cxx" bodystart="41" bodyend="45" declfile="pyc/interface/include/pyc/pyc.h" declline="25" declcolumn="19"/>
        <references refid="namespacehelper_1a60d07b59d3989fec2a0b9944156184a7" compoundref="mc20__experimental_2helper_8py" startline="6" endline="13">helper.mrg</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="namespacepyc_1_1nusol_1ae7700849ae562ae11fd360bf94fe154d" compoundref="interface_8cxx" startline="123" endline="177">pyc::nusol::combinatorial</referencedby>
        <referencedby refid="namespacepyc_1_1nusol_1adb902ce7bc71e3a4cf26f2f1e88e856c" compoundref="interface_8cxx" startline="82" endline="121">pyc::nusol::NuNu</referencedby>
        <referencedby refid="namespacepyc_1a62843610f791246167e83e780cda22d8" compoundref="interface_8cxx" startline="47" endline="51">tensorize</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1a62843610f791246167e83e780cda22d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Tensor</type>
        <definition>torch::Tensor pyc::tensorize</definition>
        <argsstring>(std::vector&lt; std::vector&lt; long &gt;&gt; *inpt)</argsstring>
        <name>tensorize</name>
        <param>
          <type>std::vector&lt; std::vector&lt; long &gt;&gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="26" column="19" bodyfile="pyc/interface/interface.cxx" bodystart="47" bodyend="51" declfile="pyc/interface/include/pyc/pyc.h" declline="26" declcolumn="19"/>
        <references refid="namespacehelper_1a60d07b59d3989fec2a0b9944156184a7" compoundref="mc20__experimental_2helper_8py" startline="6" endline="13">helper.mrg</references>
        <references refid="namespacepyc_1aed2996264099d57c7d42ac156c54981d" compoundref="interface_8cxx" startline="41" endline="45">tensorize</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1a805d5f639681452081ee6778d6f7a1ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Tensor</type>
        <definition>torch::Tensor pyc::tensorize</definition>
        <argsstring>(std::vector&lt; double &gt; *inpt)</argsstring>
        <name>tensorize</name>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="27" column="19" bodyfile="pyc/interface/interface.cxx" bodystart="31" bodyend="34" declfile="pyc/interface/include/pyc/pyc.h" declline="27" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1a28e3b0ea1f06859dbe8416d54214f973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Tensor</type>
        <definition>torch::Tensor pyc::tensorize</definition>
        <argsstring>(std::vector&lt; long &gt; *inpt)</argsstring>
        <name>tensorize</name>
        <param>
          <type>std::vector&lt; long &gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="28" column="19" bodyfile="pyc/interface/interface.cxx" bodystart="36" bodyend="39" declfile="pyc/interface/include/pyc/pyc.h" declline="28" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1ab7196e93df1b00235cd13aee5b3d8835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; pyc::as_pmc</definition>
        <argsstring>(g *p)</argsstring>
        <name>as_pmc</name>
        <param>
          <type>g *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="31" column="17" bodyfile="pyc/interface/include/pyc/pyc.h" bodystart="31" bodyend="31"/>
        <references refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" compoundref="test__particles_8py" startline="166">test_particles.e</references>
        <references refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" compoundref="rnn__model_8py" startline="35">rnn_model.p</references>
        <referencedby refid="namespacepyc_1_1nusol_1aae65d0a6b6e1953b0bbbeabdbc344b8d" compoundref="interface_2nusol_8cxx" startline="57" endline="113">pyc::nusol::combinatorial</referencedby>
        <referencedby refid="namespacepyc_1a9ca17d556b0537faaec85b0c39efb347" compoundref="pyc_8h" startline="34" endline="38">to_pmc</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1a9ca17d556b0537faaec85b0c39efb347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;double&gt; &gt; pyc::to_pmc</definition>
        <argsstring>(std::vector&lt; g * &gt; *p)</argsstring>
        <name>to_pmc</name>
        <param>
          <type>std::vector&lt; g * &gt; *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="34" column="17" bodyfile="pyc/interface/include/pyc/pyc.h" bodystart="34" bodyend="38"/>
        <references refid="namespacepyc_1ab7196e93df1b00235cd13aee5b3d8835" compoundref="pyc_8h" startline="31" endline="31">as_pmc</references>
        <references refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" compoundref="rnn__model_8py" startline="35">rnn_model.p</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="namespacepyc_1_1nusol_1a83b904aa477736c34bac502e42032971" compoundref="pyc_8h" startline="170" endline="196">pyc::nusol::NuNu</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pyc/interface/include/pyc/pyc.h" line="22" column="13"/>
  </compounddef>
</doxygen>
