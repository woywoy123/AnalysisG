<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="model__template_8cxx" kind="file" language="C++">
    <compoundname>model_template.cxx</compoundname>
    <includes refid="model__template_8h" local="no">templates/model_template.h</includes>
    <incdepgraph>
      <node id="16">
        <label>lossfx/lossfx.h</label>
      </node>
      <node id="12">
        <label>functional</label>
      </node>
      <node id="14">
        <label>structs/model.h</label>
        <link refid="model_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cstdint</label>
      </node>
      <node id="13">
        <label>structs/graph.h</label>
      </node>
      <node id="15">
        <label>structs/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="1">
        <label>model_template.cxx</label>
        <link refid="model__template_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="7">
        <label>notification/notification.h</label>
        <link refid="notification_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>tools/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>torch/torch.h</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>templates/model_template.h</label>
        <link refid="model__template_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>structs/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implementation of the <ref refid="classmodel__template" kindref="compound">model_template</ref> class methods. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the implementation of methods declared in <ref refid="model__template_8h" kindref="compound">model_template.h</ref>, providing functionality for model initialization, module management, feature assignment, and forward propagation in the <ref refid="namespace_analysis_g" kindref="compound">AnalysisG</ref> framework&apos;s machine learning component. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/>model_template.cxx</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>the<sp/>model_template<sp/>class<sp/>methods.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>implementation<sp/>of<sp/>methods<sp/>declared<sp/>in<sp/>model_template.h,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>providing<sp/>functionality<sp/>for<sp/>model<sp/>initialization,<sp/>module<sp/>management,<sp/>feature<sp/>assignment,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>and<sp/>forward<sp/>propagation<sp/>in<sp/>the<sp/>AnalysisG<sp/>framework&apos;s<sp/>machine<sp/>learning<sp/>component.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="model__template_8h" kindref="compound">templates/model_template.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Constructor<sp/>for<sp/>the<sp/>`model_template`<sp/>class.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Sets<sp/>up<sp/>property<sp/>bindings<sp/>for<sp/>input<sp/>and<sp/>output<sp/>features,<sp/>device<sp/>settings,<sp/>and<sp/>initializes</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>the<sp/>loss<sp/>function<sp/>manager.<sp/>Each<sp/>property<sp/>is<sp/>bound<sp/>to<sp/>its<sp/>appropriate<sp/>setter<sp/>and<sp/>getter<sp/>methods.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" refkind="member"><highlight class="normal"><ref refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" kindref="member">model_template::model_template</ref>(){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>input<sp/>feature<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aed99e1a8ff065523a63a0b816cfa2b65" kindref="member">i_graph</ref>.<ref refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" kindref="member">set_setter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a042ce754045343eade6e54d556854859" kindref="member">set_input_features</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aed99e1a8ff065523a63a0b816cfa2b65" kindref="member">i_graph</ref>.<ref refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" kindref="member">set_object</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" kindref="member">m_i_graph</ref>);<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a08760c35dc8eff882f9b0d4e39c84ead" kindref="member">i_node</ref>.<ref refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" kindref="member">set_setter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a042ce754045343eade6e54d556854859" kindref="member">set_input_features</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a08760c35dc8eff882f9b0d4e39c84ead" kindref="member">i_node</ref>.<ref refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" kindref="member">set_object</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" kindref="member">m_i_node</ref>);<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a7bcc136fa8a82e33800a2cef7b5f1dea" kindref="member">i_edge</ref>.<ref refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" kindref="member">set_setter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a042ce754045343eade6e54d556854859" kindref="member">set_input_features</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a7bcc136fa8a82e33800a2cef7b5f1dea" kindref="member">i_edge</ref>.<ref refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" kindref="member">set_object</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" kindref="member">m_i_edge</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>output<sp/>feature<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4d890527f81e130c4882941619e0008b" kindref="member">o_graph</ref>.<ref refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" kindref="member">set_setter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a977402549135f0f763157b1282b44173" kindref="member">set_output_features</ref>);<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4d890527f81e130c4882941619e0008b" kindref="member">o_graph</ref>.<ref refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" kindref="member">set_object</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" kindref="member">m_o_graph</ref>);<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a11d6087907ddd31994bfad5f98583761" kindref="member">o_node</ref>.<ref refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" kindref="member">set_setter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a977402549135f0f763157b1282b44173" kindref="member">set_output_features</ref>);<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a11d6087907ddd31994bfad5f98583761" kindref="member">o_node</ref>.<ref refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" kindref="member">set_object</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" kindref="member">m_o_node</ref>);<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4afc692af0708c956868caddf4645b13" kindref="member">o_edge</ref>.<ref refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" kindref="member">set_setter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a977402549135f0f763157b1282b44173" kindref="member">set_output_features</ref>);<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4afc692af0708c956868caddf4645b13" kindref="member">o_edge</ref>.<ref refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" kindref="member">set_object</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" kindref="member">m_o_edge</ref>);<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>device<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" kindref="member">device</ref>.<ref refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" kindref="member">set_setter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad6ea8f7ffac83bd49123286ed4cd9fda" kindref="member">set_device</ref>);<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" kindref="member">device</ref>.<ref refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" kindref="member">set_object</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>name<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" kindref="member">name</ref>.<ref refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" kindref="member">set_setter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad1a321ec8ca5e79c79322c83ef70b7c5" kindref="member">set_name</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" kindref="member">name</ref>.<ref refid="classcproperty_1a31b26b5ffb20bbf8d8ee38e0755a9819" kindref="member">set_getter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a3e2ae9bb1ff5cb88411fa35d04fbaf8b" kindref="member">get_name</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" kindref="member">name</ref>.<ref refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" kindref="member">set_object</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>device<sp/>index<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a72d13c3d3b7444e8d6a2a5e8d9b7969e" kindref="member">device_index</ref>.<ref refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" kindref="member">set_setter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac4b5cf9bc73437cd847dc80cc5c1c75b" kindref="member">set_dev_index</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a72d13c3d3b7444e8d6a2a5e8d9b7969e" kindref="member">device_index</ref>.<ref refid="classcproperty_1a31b26b5ffb20bbf8d8ee38e0755a9819" kindref="member">set_getter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a1ccf58b3ee8f6daa0e032fb316934cbd" kindref="member">get_dev_index</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a72d13c3d3b7444e8d6a2a5e8d9b7969e" kindref="member">device_index</ref>.<ref refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" kindref="member">set_object</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>loss<sp/>function<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" kindref="member">m_loss</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classlossfx" kindref="compound">lossfx</ref>();<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Creates<sp/>and<sp/>returns<sp/>a<sp/>clone<sp/>of<sp/>this<sp/>model<sp/>template.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>new<sp/>model_template<sp/>instance.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="classmodel__template" kindref="compound">model_template</ref>*<sp/><ref refid="classmodel__template_1aa4342444b93659e670d921fcba9bd689" kindref="member">model_template::clone</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" kindref="member">model_template</ref>();}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Registers<sp/>a<sp/>PyTorch<sp/>sequential<sp/>module<sp/>with<sp/>the<sp/>model.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>sequential<sp/>module<sp/>to<sp/>register.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>If<sp/>a<sp/>device<sp/>option<sp/>is<sp/>set,<sp/>the<sp/>module<sp/>is<sp/>transferred<sp/>to<sp/>that<sp/>device<sp/>before<sp/>registration.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" kindref="member">model_template::register_module</ref>(torch::nn::Sequential*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" kindref="member">m_option</ref>){(*data)<sp/>-&gt;<sp/>to(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" kindref="member">m_option</ref><sp/>-&gt;<sp/><ref refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" kindref="member">device</ref>());}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" kindref="member">m_data</ref>.push_back(<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Registers<sp/>a<sp/>PyTorch<sp/>sequential<sp/>module<sp/>with<sp/>the<sp/>model<sp/>and<sp/>initializes<sp/>its<sp/>weights.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>sequential<sp/>module<sp/>to<sp/>register.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>@param<sp/>method<sp/>The<sp/>initialization<sp/>method<sp/>to<sp/>use<sp/>for<sp/>the<sp/>module&apos;s<sp/>weights.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>If<sp/>a<sp/>device<sp/>option<sp/>is<sp/>set,<sp/>the<sp/>module<sp/>is<sp/>transferred<sp/>to<sp/>that<sp/>device<sp/>before<sp/>registration.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>The<sp/>module&apos;s<sp/>weights<sp/>are<sp/>initialized<sp/>according<sp/>to<sp/>the<sp/>specified<sp/>method.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classmodel__template_1a8929bec347c8d7a7cb3b6c355d6139d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" kindref="member">model_template::register_module</ref>(torch::nn::Sequential*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/><ref refid="model__template_8h_1a04569a45296869bf184d4b79d10487dd" kindref="member">mlp_init</ref><sp/><ref refid="namespacemain_1aa7f7a57dd94ac214b133aba964145812" kindref="member">method</ref>){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" kindref="member">m_option</ref>){(*data)<sp/>-&gt;<sp/>to(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" kindref="member">m_option</ref><sp/>-&gt;<sp/><ref refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" kindref="member">device</ref>());}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" kindref="member">m_loss</ref><sp/>-&gt;<sp/>weight_init(<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/><ref refid="namespacemain_1aa7f7a57dd94ac214b133aba964145812" kindref="member">method</ref>);<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" kindref="member">m_data</ref>.push_back(<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Default<sp/>implementation<sp/>of<sp/>the<sp/>forward<sp/>pass<sp/>for<sp/>a<sp/>single<sp/>graph.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>graph_t<sp/>structure<sp/>containing<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>a<sp/>placeholder<sp/>that<sp/>derived<sp/>classes<sp/>should<sp/>override<sp/>with<sp/>their<sp/>specific<sp/>implementation.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" kindref="member">model_template::forward</ref>(<ref refid="structgraph__t" kindref="compound">graph_t</ref>*){}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Destructor<sp/>for<sp/>the<sp/>model_template<sp/>class.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>Cleans<sp/>up<sp/>all<sp/>resources<sp/>used<sp/>by<sp/>the<sp/>model,<sp/>including<sp/>registered<sp/>modules,</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>output<sp/>tensors,<sp/>and<sp/>the<sp/>loss<sp/>function<sp/>manager.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classmodel__template_1ab6ce719a1c6262912927d4fc33e8842a" refkind="member"><highlight class="normal"><ref refid="classmodel__template_1ab6ce719a1c6262912927d4fc33e8842a" kindref="member">model_template::~model_template</ref>(){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" kindref="member">m_data</ref>.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" kindref="member">m_data</ref>[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" kindref="member">flush_outputs</ref>();<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" kindref="member">m_data</ref>.clear();<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" kindref="member">m_loss</ref>;<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Assigns<sp/>features<sp/>from<sp/>a<sp/>graph<sp/>to<sp/>tensors<sp/>based<sp/>on<sp/>feature<sp/>name<sp/>and<sp/>type.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>@param<sp/>inpt<sp/>Feature<sp/>name<sp/>to<sp/>assign.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>@param<sp/>type<sp/>Type<sp/>of<sp/>graph<sp/>component<sp/>(node,<sp/>edge,<sp/>or<sp/>graph).</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>graph_t<sp/>structure<sp/>containing<sp/>the<sp/>features.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>resulting<sp/>tensor<sp/>containing<sp/>the<sp/>assigned<sp/>features.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>Extracts<sp/>specified<sp/>features<sp/>from<sp/>the<sp/>graph<sp/>and<sp/>converts<sp/>them<sp/>to<sp/>PyTorch<sp/>tensors.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" refkind="member"><highlight class="normal">torch::Tensor*<sp/><ref refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" kindref="member">model_template::assign_features</ref>(std::string<sp/>inpt,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref><sp/>type,<sp/><ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor*<sp/>tn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a05e49555101f3239adff74b7ab84b12b" kindref="member">graph_enum::data_graph</ref>:<sp/><sp/>tn<sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_data_graph(<sp/>inpt,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" kindref="member">m_i_graph</ref>[inpt]<sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a552cd5bfd507d39d3351ee8b6bc95445" kindref="member">graph_enum::data_node</ref>:<sp/><sp/><sp/>tn<sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_data_node(<sp/><sp/>inpt,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" kindref="member">m_i_node</ref>[inpt]<sp/><sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe" kindref="member">graph_enum::data_edge</ref>:<sp/><sp/><sp/>tn<sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_data_edge(<sp/><sp/>inpt,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" kindref="member">m_i_edge</ref>[inpt]<sp/><sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587" kindref="member">graph_enum::truth_graph</ref>:<sp/>tn<sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_truth_graph(inpt,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>std::get&lt;0&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" kindref="member">m_o_graph</ref>[inpt])<sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5" kindref="member">graph_enum::truth_node</ref>:<sp/><sp/>tn<sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_truth_node(<sp/>inpt,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>std::get&lt;0&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" kindref="member">m_o_node</ref>[inpt])<sp/><sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00" kindref="member">graph_enum::truth_edge</ref>:<sp/><sp/>tn<sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_truth_edge(<sp/>inpt,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>std::get&lt;0&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" kindref="member">m_o_edge</ref>[inpt])<sp/><sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Assigns<sp/>features<sp/>from<sp/>multiple<sp/>graphs<sp/>to<sp/>tensors<sp/>based<sp/>on<sp/>feature<sp/>name<sp/>and<sp/>type.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>@param<sp/>inpt<sp/>Feature<sp/>name<sp/>to<sp/>assign.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>@param<sp/>type<sp/>Type<sp/>of<sp/>graph<sp/>component<sp/>(node,<sp/>edge,<sp/>or<sp/>graph).</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>graph_t<sp/>structures<sp/>containing<sp/>the<sp/>features.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>resulting<sp/>tensor<sp/>containing<sp/>the<sp/>assigned<sp/>features.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>Extracts<sp/>specified<sp/>features<sp/>from<sp/>multiple<sp/>graphs<sp/>and<sp/>converts<sp/>them<sp/>to<sp/>batched<sp/>PyTorch<sp/>tensors.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classmodel__template_1ad443a513269e2a5f95d6063c840bc324" refkind="member"><highlight class="normal">torch::Tensor*<sp/><ref refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" kindref="member">model_template::assign_features</ref>(std::string<sp/>inpt,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref><sp/>type,<sp/>std::vector&lt;graph_t*&gt;*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_data<sp/><sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref>,<sp/>std::string<sp/>key)<sp/>-&gt;<sp/>torch::Tensor*<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref><sp/>-&gt;<sp/>get_data_graph(key,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);};<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_data<sp/><sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref>,<sp/>std::string<sp/>key)<sp/>-&gt;<sp/>torch::Tensor*<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref><sp/>-&gt;<sp/>get_data_node(key,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);};<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e_data<sp/><sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref>,<sp/>std::string<sp/>key)<sp/>-&gt;<sp/>torch::Tensor*<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref><sp/>-&gt;<sp/>get_data_edge(key,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);};<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_truth<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref>,<sp/>std::string<sp/>key)<sp/>-&gt;<sp/>torch::Tensor*<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref><sp/>-&gt;<sp/>get_truth_graph(key,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);};<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_truth<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref>,<sp/>std::string<sp/>key)<sp/>-&gt;<sp/>torch::Tensor*<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref><sp/>-&gt;<sp/>get_truth_node(key,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);};<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e_truth<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref>,<sp/>std::string<sp/>key)<sp/>-&gt;<sp/>torch::Tensor*<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref><sp/>-&gt;<sp/>get_truth_edge(key,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);};<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lamb_d<sp/><sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;torch::Tensor*(<ref refid="structgraph__t" kindref="compound">graph_t</ref>*,<sp/>std::string)&gt;<sp/><ref refid="namespacemain_1a1eba0669b3d0fd1cef430ae99c82cc59" kindref="member">fx</ref>,<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;graph_t*&gt;*<sp/><ref refid="_3selection-name_4_8h_1aacdcf64980359329e5e8442cb72446a9" kindref="member">merge</ref>,<sp/>std::string<sp/>key)<sp/>-&gt;<sp/>torch::Tensor*<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;torch::Tensor&gt;<sp/>arr;<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/><ref refid="_3selection-name_4_8h_1aacdcf64980359329e5e8442cb72446a9" kindref="member">merge</ref><sp/>-&gt;<sp/>size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor*<sp/>val<sp/>=<sp/><ref refid="namespacemain_1a1eba0669b3d0fd1cef430ae99c82cc59" kindref="member">fx</ref>((*<ref refid="_3selection-name_4_8h_1aacdcf64980359329e5e8442cb72446a9" kindref="member">merge</ref>)[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>],<sp/>key);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!val){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr.push_back(*val);<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arr.size()){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>torch::Tensor(torch::cat(arr,<sp/>{0}));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor*<sp/>tn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a05e49555101f3239adff74b7ab84b12b" kindref="member">graph_enum::data_graph</ref>:<sp/><sp/>tn<sp/>=<sp/>lamb_d(g_data,<sp/><sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/>inpt);<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" kindref="member">m_i_graph</ref>[inpt]<sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a552cd5bfd507d39d3351ee8b6bc95445" kindref="member">graph_enum::data_node</ref>:<sp/><sp/><sp/>tn<sp/>=<sp/>lamb_d(n_data,<sp/><sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/>inpt);<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" kindref="member">m_i_node</ref>[inpt]<sp/><sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe" kindref="member">graph_enum::data_edge</ref>:<sp/><sp/><sp/>tn<sp/>=<sp/>lamb_d(e_data,<sp/><sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/>inpt);<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" kindref="member">m_i_edge</ref>[inpt]<sp/><sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587" kindref="member">graph_enum::truth_graph</ref>:<sp/>tn<sp/>=<sp/>lamb_d(g_truth,<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/>inpt);<sp/>std::get&lt;0&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" kindref="member">m_o_graph</ref>[inpt])<sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5" kindref="member">graph_enum::truth_node</ref>:<sp/><sp/>tn<sp/>=<sp/>lamb_d(n_truth,<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/>inpt);<sp/>std::get&lt;0&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" kindref="member">m_o_node</ref>[inpt])<sp/><sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00" kindref="member">graph_enum::truth_edge</ref>:<sp/><sp/>tn<sp/>=<sp/>lamb_d(e_truth,<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/>inpt);<sp/>std::get&lt;0&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" kindref="member">m_o_edge</ref>[inpt])<sp/><sp/>=<sp/>tn;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tn;<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Performs<sp/>forward<sp/>pass<sp/>on<sp/>a<sp/>single<sp/>graph,<sp/>with<sp/>optional<sp/>training<sp/>mode.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>graph_t<sp/>structure<sp/>containing<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>@param<sp/>train<sp/>Flag<sp/>indicating<sp/>if<sp/>the<sp/>model<sp/>is<sp/>in<sp/>training<sp/>mode<sp/>(true)<sp/>or<sp/>evaluation<sp/>mode<sp/>(false).</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>Sets<sp/>the<sp/>model&apos;s<sp/>modules<sp/>to<sp/>training<sp/>or<sp/>evaluation<sp/>mode<sp/>as<sp/>specified,<sp/>then<sp/>performs<sp/>the<sp/>forward<sp/>pass.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" kindref="member">model_template::forward</ref>(<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>train){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" kindref="member">flush_outputs</ref>();<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>m_batched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_edge_index(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" kindref="member">m_i_graph</ref>.size()){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" kindref="member">m_i_graph</ref>,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a05e49555101f3239adff74b7ab84b12b" kindref="member">graph_enum::data_graph</ref>,<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" kindref="member">m_i_node</ref>.size()){<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" kindref="member">m_i_node</ref>,<sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a552cd5bfd507d39d3351ee8b6bc95445" kindref="member">graph_enum::data_node</ref>,<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" kindref="member">m_i_edge</ref>.size()){<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" kindref="member">m_i_edge</ref>,<sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe" kindref="member">graph_enum::data_edge</ref>,<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" kindref="member">m_o_graph</ref>.size()){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" kindref="member">m_o_graph</ref>,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587" kindref="member">graph_enum::truth_graph</ref>,<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}<sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" kindref="member">m_o_node</ref>.size()){<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" kindref="member">m_o_node</ref>,<sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5" kindref="member">graph_enum::truth_node</ref>,<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" kindref="member">m_o_edge</ref>.size()){<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" kindref="member">m_o_edge</ref>,<sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00" kindref="member">graph_enum::truth_edge</ref>,<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" kindref="member">forward</ref>(<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>train_sequence(train);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Performs<sp/>forward<sp/>pass<sp/>on<sp/>multiple<sp/>graphs,<sp/>with<sp/>optional<sp/>training<sp/>mode.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@param<sp/>data<sp/>Vector<sp/>of<sp/>pointers<sp/>to<sp/>graph_t<sp/>structures<sp/>containing<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@param<sp/>train<sp/>Flag<sp/>indicating<sp/>if<sp/>the<sp/>model<sp/>is<sp/>in<sp/>training<sp/>mode<sp/>(true)<sp/>or<sp/>evaluation<sp/>mode<sp/>(false).</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>Sets<sp/>the<sp/>model&apos;s<sp/>modules<sp/>to<sp/>training<sp/>or<sp/>evaluation<sp/>mode<sp/>as<sp/>specified,<sp/>then<sp/>performs<sp/>the<sp/>forward<sp/>pass</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>on<sp/>each<sp/>graph<sp/>in<sp/>the<sp/>input<sp/>vector.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classmodel__template_1a3f4085b3bae7b25b1dfc6f94fa509f94" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" kindref="member">model_template::forward</ref>(std::vector&lt;graph_t*&gt;<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>train){</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" kindref="member">flush_outputs</ref>();<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>m_batched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" kindref="member">m_i_graph</ref>.size()){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" kindref="member">m_i_graph</ref>,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a05e49555101f3239adff74b7ab84b12b" kindref="member">graph_enum::data_graph</ref>,<sp/>&amp;<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" kindref="member">m_i_node</ref>.size()){<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" kindref="member">m_i_node</ref>,<sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a552cd5bfd507d39d3351ee8b6bc95445" kindref="member">graph_enum::data_node</ref>,<sp/>&amp;<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" kindref="member">m_i_edge</ref>.size()){<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" kindref="member">m_i_edge</ref>,<sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe" kindref="member">graph_enum::data_edge</ref>,<sp/>&amp;<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" kindref="member">m_o_graph</ref>.size()){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" kindref="member">m_o_graph</ref>,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587" kindref="member">graph_enum::truth_graph</ref>,<sp/>&amp;<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}<sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" kindref="member">m_o_node</ref>.size()){<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" kindref="member">m_o_node</ref>,<sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5" kindref="member">graph_enum::truth_node</ref>,<sp/>&amp;<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" kindref="member">m_o_edge</ref>.size()){<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>assign(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" kindref="member">m_o_edge</ref>,<sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00" kindref="member">graph_enum::truth_edge</ref>,<sp/>&amp;<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_nodes<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;torch::Tensor&gt;<sp/>_edge_index;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref><sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_edge_index.size()){_edge_index.push_back(*<ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref><sp/>-&gt;<sp/>get_edge_index(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{_edge_index.push_back((*<ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref><sp/>-&gt;<sp/>get_edge_index(</highlight><highlight class="keyword">this</highlight><highlight class="normal">))<sp/>+<sp/>offset_nodes);}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" kindref="member">forward</ref>(<ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref>);<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_nodes<sp/>+=<sp/><ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref><sp/>-&gt;<sp/>num_nodes;<sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>torch::Tensor(torch::cat(_edge_index,<sp/>{-1}));<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>train_sequence(train);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="232"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Sets<sp/>input<sp/>features<sp/>for<sp/>a<sp/>specific<sp/>feature<sp/>map.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@param<sp/>inpt<sp/>Pointer<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>strings<sp/>containing<sp/>feature<sp/>names.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>@param<sp/>in_fx<sp/>Pointer<sp/>to<sp/>the<sp/>feature<sp/>map<sp/>to<sp/>set.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>Initializes<sp/>map<sp/>entries<sp/>for<sp/>each<sp/>feature<sp/>name<sp/>in<sp/>the<sp/>input<sp/>vector.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classmodel__template_1a042ce754045343eade6e54d556854859" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1a042ce754045343eade6e54d556854859" kindref="member">model_template::set_input_features</ref>(std::vector&lt;std::string&gt;*<sp/>inpt,<sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;*<sp/>in_fx){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>inpt<sp/>-&gt;<sp/>size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){(*in_fx)[inpt<sp/>-&gt;<sp/>at(<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>)]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Clears<sp/>all<sp/>output<sp/>tensors,<sp/>freeing<sp/>memory.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>Iterates<sp/>through<sp/>all<sp/>output<sp/>feature<sp/>maps<sp/>and<sp/>deletes<sp/>their<sp/>tensor<sp/>contents.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" kindref="member">model_template::flush_outputs</ref>(){</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/>[](std::map&lt;std::string,<sp/>torch::Tensor*&gt;*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>){</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;::iterator<sp/>itr<sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>begin();<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++itr){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itr<sp/>-&gt;<sp/>second){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>itr<sp/>-&gt;<sp/>second;<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>-&gt;<sp/>second<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lamb<sp/>=<sp/>[](std::map&lt;std::string,<sp/>std::tuple&lt;torch::Tensor*,<sp/>loss_enum&gt;&gt;*<sp/>inpx){</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::tuple&lt;torch::Tensor*,<sp/>loss_enum&gt;&gt;::iterator<sp/>itx<sp/>=<sp/>inpx<sp/>-&gt;<sp/>begin();<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itx<sp/>!=<sp/>inpx<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++itx){</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(itx<sp/>-&gt;<sp/>second);<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(itx<sp/>-&gt;<sp/>second)<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>lambda(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>m_p_graph);<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>lambda(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>m_p_node);<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>lambda(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>m_p_edge);<sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>lambda(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>m_p_undef);<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>m_p_loss.clear();<sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>m_batched){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref>;<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>lambda(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" kindref="member">m_i_graph</ref>);<sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>lambda(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" kindref="member">m_i_node</ref>);<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>lambda(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" kindref="member">m_i_edge</ref>);<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>lamb(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" kindref="member">m_o_graph</ref>);<sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>lamb(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" kindref="member">m_o_node</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>lamb(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" kindref="member">m_o_edge</ref>);<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="modules/model/cxx/model_template.cxx"/>
  </compounddef>
</doxygen>
