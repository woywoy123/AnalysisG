<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="mass__plots_8cxx" kind="file" language="C++">
    <compoundname>mass_plots.cxx</compoundname>
    <includes refid="metrics_8h" local="no">metrics/metrics.h</includes>
    <includes local="no">TRatioPlot.h</includes>
    <includes local="no">THStack.h</includes>
    <incdepgraph>
      <node id="27">
        <label>c10/core/DeviceType.h</label>
      </node>
      <node id="44">
        <label>lossfx/lossfx.h</label>
      </node>
      <node id="18">
        <label>functional</label>
      </node>
      <node id="45">
        <label>TRatioPlot.h</label>
      </node>
      <node id="38">
        <label>structs/report.h</label>
        <link refid="report_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>structs/model.h</label>
        <link refid="model_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>TTreeReader.h</label>
      </node>
      <node id="19">
        <label>structs/element.h</label>
        <link refid="element_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tools/vector_cast.h</label>
        <link refid="vector__cast_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>TTreeReaderArray.h</label>
      </node>
      <node id="34">
        <label>cstdint</label>
      </node>
      <node id="42">
        <label>structs/graph.h</label>
      </node>
      <node id="12">
        <label>templates/particle_template.h</label>
        <link refid="particle__template_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>TMultiGraph.h</label>
      </node>
      <node id="2">
        <label>metrics/metrics.h</label>
        <link refid="metrics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>cmath</label>
      </node>
      <node id="31">
        <label>structs/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="11">
        <label>torch/all.h</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="39">
        <label>structs/settings.h</label>
        <link refid="settings_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pyc/pyc.h</label>
        <link refid="pyc_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>structs/meta.h</label>
        <link refid="structs_2include_2structs_2meta_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>mass_plots.cxx</label>
        <link refid="mass__plots_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>TStyle.h</label>
      </node>
      <node id="10">
        <label>tuple</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
      <node id="41">
        <label>notification/notification.h</label>
        <link refid="notification_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>TFile.h</label>
      </node>
      <node id="5">
        <label>TCanvas.h</label>
      </node>
      <node id="35">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>structs/particles.h</label>
        <link refid="modules_2structs_2include_2structs_2particles_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>tools/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>cstdlib</label>
      </node>
      <node id="32">
        <label>torch/torch.h</label>
      </node>
      <node id="3">
        <label>TH1F.h</label>
      </node>
      <node id="23">
        <label>TLeaf.h</label>
      </node>
      <node id="29">
        <label>iostream</label>
      </node>
      <node id="40">
        <label>templates/model_template.h</label>
        <link refid="model__template_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>structs/base.h</label>
        <link refid="modules_2structs_2include_2structs_2base_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>TLegend.h</label>
      </node>
      <node id="22">
        <label>TBranch.h</label>
      </node>
      <node id="17">
        <label>structs/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>TTree.h</label>
      </node>
      <node id="46">
        <label>THStack.h</label>
      </node>
      <node id="4">
        <label>TGraph.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implements mass plot generation and related utilities. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains functions for creating and managing mass plots, including histogram generation and ratio plots. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**<sp/>\file<sp/>mass_plots.cxx</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>\brief<sp/>Implements<sp/>mass<sp/>plot<sp/>generation<sp/>and<sp/>related<sp/>utilities.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>contains<sp/>functions<sp/>for<sp/>creating<sp/>and<sp/>managing<sp/>mass<sp/>plots,<sp/>including</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>histogram<sp/>generation<sp/>and<sp/>ratio<sp/>plots.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="metrics_8h" kindref="compound">metrics/metrics.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TRatioPlot.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;THStack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">/**<sp/>\brief<sp/>Dumps<sp/>mass<sp/>plots<sp/>for<sp/>a<sp/>given<sp/>k-fold.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classmetrics_1a60ff488f6951bae8d98bc7a03bc6e464" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmetrics_1a60ff488f6951bae8d98bc7a03bc6e464" kindref="member">metrics::dump_mass_plots</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k){</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TH1F*&gt;&gt;<sp/>hists_pred<sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>pred_tr<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>pred_mass_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>];<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>pred_va<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>pred_mass_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>];<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>pred_ev<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>pred_mass_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>];<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;::iterator<sp/>ith;<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ith<sp/>=<sp/>pred_tr<sp/>-&gt;<sp/>begin();<sp/>ith<sp/>!=<sp/>pred_tr<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++ith){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ith<sp/>-&gt;<sp/>second<sp/>-&gt;<sp/>SetTitle(</highlight><highlight class="stringliteral">&quot;training&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists_pred[ith<sp/>-&gt;<sp/>first].push_back(ith<sp/>-&gt;<sp/>second);<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ith<sp/>=<sp/>pred_va<sp/>-&gt;<sp/>begin();<sp/>ith<sp/>!=<sp/>pred_va<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++ith){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ith<sp/>-&gt;<sp/>second<sp/>-&gt;<sp/>SetTitle(</highlight><highlight class="stringliteral">&quot;validation&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists_pred[ith<sp/>-&gt;<sp/>first].push_back(ith<sp/>-&gt;<sp/>second);<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ith<sp/>=<sp/>pred_ev<sp/>-&gt;<sp/>begin();<sp/>ith<sp/>!=<sp/>pred_ev<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++ith){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ith<sp/>-&gt;<sp/>second<sp/>-&gt;<sp/>SetTitle(</highlight><highlight class="stringliteral">&quot;evaluation&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists_pred[ith<sp/>-&gt;<sp/>first].push_back(ith<sp/>-&gt;<sp/>second);<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>tru_tr<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>truth_mass_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>];<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>tru_va<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>truth_mass_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>];<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>tru_ev<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>truth_mass_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>];<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1a1c59290b131395e78ca09ee55829bc91" kindref="member">nbins</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mxr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1a1bb7bcd7803eafb1da81844bb1c99b59" kindref="member">max_range</ref>;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;<sp/>merged<sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ith<sp/>=<sp/>tru_tr<sp/>-&gt;<sp/>begin();<sp/>ith<sp/>!=<sp/>tru_tr<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++ith){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged[ith<sp/>-&gt;<sp/>first]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F((</highlight><highlight class="stringliteral">&quot;truth-&quot;</highlight><highlight class="normal"><sp/>+<sp/>ith<sp/>-&gt;<sp/>first).c_str(),<sp/></highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">,<sp/>nb,<sp/>0,<sp/>mxr);<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged[ith<sp/>-&gt;<sp/>first]<sp/>-&gt;<sp/>Add(ith<sp/>-&gt;<sp/>second);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ith<sp/>-&gt;<sp/>second<sp/>-&gt;<sp/>Reset();<sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ith<sp/>=<sp/>tru_va<sp/>-&gt;<sp/>begin();<sp/>ith<sp/>!=<sp/>tru_va<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++ith){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged[ith<sp/>-&gt;<sp/>first]<sp/>-&gt;<sp/>Add(ith<sp/>-&gt;<sp/>second);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ith<sp/>-&gt;<sp/>second<sp/>-&gt;<sp/>Reset();<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ith<sp/>=<sp/>tru_ev<sp/>-&gt;<sp/>begin();<sp/>ith<sp/>!=<sp/>tru_ev<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++ith){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged[ith<sp/>-&gt;<sp/>first]<sp/>-&gt;<sp/>Add(ith<sp/>-&gt;<sp/>second);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ith<sp/>-&gt;<sp/>second<sp/>-&gt;<sp/>Reset();<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ith<sp/>=<sp/>merged.begin();<sp/>ith<sp/>!=<sp/>merged.end();<sp/>++ith){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>THStack*<sp/>h_sum<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THStack((</highlight><highlight class="stringliteral">&quot;THStack&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/>ith<sp/>-&gt;<sp/>first).c_str(),<sp/>(</highlight><highlight class="stringliteral">&quot;Mass<sp/>Reconstruction<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>ith<sp/>-&gt;<sp/>first).c_str());<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLegend*<sp/>legend<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TLegend(0.6,0.6,0.9,0.9);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legend<sp/>-&gt;<sp/>SetHeader(</highlight><highlight class="stringliteral">&quot;MVA<sp/>Mass<sp/>Reconstruction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>hists_pred[ith<sp/>-&gt;<sp/>first].size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists_pred[ith<sp/>-&gt;<sp/>first][<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>-&gt;<sp/>SetLineColor(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1a528312b29510c40a161d3046d151498c" kindref="member">colors_h</ref>[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]);<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists_pred[ith<sp/>-&gt;<sp/>first][<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>-&gt;<sp/>SetFillColor(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1a528312b29510c40a161d3046d151498c" kindref="member">colors_h</ref>[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]);<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_sum<sp/>-&gt;<sp/>Add(hists_pred[ith<sp/>-&gt;<sp/>first][<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legend<sp/>-&gt;<sp/>AddEntry(hists_pred[ith<sp/>-&gt;<sp/>first][<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>truth<sp/>histogram<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1F*<sp/>truth_<sp/>=<sp/>ith<sp/>-&gt;<sp/>second;<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truth_<sp/>-&gt;<sp/>SetLineColor(kBlack);<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legend<sp/>-&gt;<sp/>AddEntry(truth_);<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCanvas*<sp/>can<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCanvas();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetOptStat(0);<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetImageScaling(3);<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>SetTopMargin(0.1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetTitleOffset(1.25);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetTitleSize(0.025);<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetLabelSize(0.025,<sp/></highlight><highlight class="stringliteral">&quot;XY&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRatioPlot*<sp/>rp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TRatioPlot(h_sum,<sp/>truth_,<sp/></highlight><highlight class="stringliteral">&quot;diffsig&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp<sp/>-&gt;<sp/>Draw();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_sum<sp/>-&gt;<sp/>GetXaxis()<sp/>-&gt;<sp/>SetTitle(</highlight><highlight class="stringliteral">&quot;Invariant<sp/>Mass<sp/>(GeV)&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_sum<sp/>-&gt;<sp/>GetXaxis()<sp/>-&gt;<sp/>CenterTitle(</highlight><highlight class="stringliteral">&quot;Invariant<sp/>Mass<sp/>(GeV)&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp<sp/>-&gt;<sp/>GetLowerRefYaxis()<sp/>-&gt;<sp/>SetTitle(</highlight><highlight class="stringliteral">&quot;Ratio&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp<sp/>-&gt;<sp/>GetUpperRefYaxis()<sp/>-&gt;<sp/>SetTitle(</highlight><highlight class="stringliteral">&quot;Entries<sp/>(Arb.)&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp<sp/>-&gt;<sp/>GetUpperPad()<sp/>-&gt;<sp/>cd();<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legend<sp/>-&gt;<sp/>Draw();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gPad<sp/>-&gt;<sp/>SetLogy();<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gPad<sp/>-&gt;<sp/>Modified();<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>Modified();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>Update();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>path_<sp/>=<sp/>out_pth<sp/>+<sp/>ith<sp/>-&gt;<sp/>first;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/fold_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;epoch_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(an<sp/>-&gt;<sp/>this_epoch+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" kindref="member">create_path</ref>(path_);<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>SaveAs(path_.c_str());<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>Close();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rp;<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>h_sum;<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>truth_;<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>legend;<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>can;<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>hists_pred[ith<sp/>-&gt;<sp/>first].size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists_pred[ith<sp/>-&gt;<sp/>first][<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>-&gt;<sp/>Reset();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metrics::build_th1f_mass(std::string<sp/>var_name,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref><sp/>typ,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structanalytics__t" kindref="compound">analytics_t</ref>*<sp/>an<sp/>=<sp/>&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry[<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>];<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;mode_enum,<sp/>std::map&lt;std::string,<sp/>TH1F*&gt;&gt;*<sp/>type_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(typ){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00" kindref="member">graph_enum::truth_edge</ref>:<sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>truth_mass_edge;<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe" kindref="member">graph_enum::data_edge</ref>:<sp/><sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>pred_mass_edge;<sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;predicted&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1a1c59290b131395e78ca09ee55829bc91" kindref="member">nbins</ref>;<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mxr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1a1bb7bcd7803eafb1da81844bb1c99b59" kindref="member">max_range</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>base_name<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1a48599c1af0e6a91c4ded28d191f17981" kindref="member">run_name</ref><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>title;<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tr<sp/>=<sp/>base_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(training)<sp/>Mass<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-fold&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>(*type_)[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>][var_name]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(tr.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;training&quot;</highlight><highlight class="normal">,<sp/>nb,<sp/>0,<sp/>mxr);<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>va<sp/>=<sp/>base_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(validation)<sp/>Mass&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-fold&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>(*type_)[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>][var_name]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(va.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;validation&quot;</highlight><highlight class="normal">,<sp/>nb,<sp/>0,<sp/>mxr);<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref><sp/>=<sp/>base_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(evaluation)<sp/>Mass&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-fold&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>(*type_)[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>][var_name]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(<ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;evaluation&quot;</highlight><highlight class="normal">,<sp/>nb,<sp/>0,<sp/>mxr);<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metrics::add_th1f_mass(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor*<sp/>pmc,<sp/>torch::Tensor*<sp/>edge_index,<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor*<sp/>truth,<sp/>torch::Tensor*<sp/>pred,<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>,<sp/><ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref><sp/>mode,<sp/>std::string<sp/>var_name</highlight></codeline>
<codeline lineno="147"><highlight class="normal">){</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structanalytics__t" kindref="compound">analytics_t</ref>*<sp/>an<sp/>=<sp/>&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry[<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>];<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;mode_enum,<sp/>std::map&lt;std::string,<sp/>TH1F*&gt;&gt;*<sp/>type_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>edge_index_<sp/>=<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>-&gt;<sp/>to(torch::kLong);<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Dict&lt;std::string,<sp/>torch::Tensor&gt;<sp/>pred_mass<sp/>=<sp/><ref refid="namespacepyc_1_1graph_1aa28a4253050413ec67a3313635a699ad" kindref="member">pyc::graph::edge_aggregation</ref>(edge_index_,<sp/>*pred,<sp/>*pmc);<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pred_mass_cu<sp/>=<sp/><ref refid="namespacepyc_1_1physics_1_1cartesian_1_1combined_1adc80247c6622f7cb166a81fa45b7b51d" kindref="member">pyc::physics::cartesian::combined::M</ref>(pred_mass.at(</highlight><highlight class="stringliteral">&quot;cls::1::node-sum&quot;</highlight><highlight class="normal">));<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>truth_t<sp/>=<sp/>truth<sp/>-&gt;<sp/>view({-1});<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>truth_<sp/>=<sp/>torch::zeros_like(*pred);<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>pred<sp/>-&gt;<sp/>size({-1});<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){truth_.index_put_({truth_t<sp/>==<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>,<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>},<sp/>1);}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Dict&lt;std::string,<sp/>torch::Tensor&gt;<sp/>truth_mass<sp/>=<sp/><ref refid="namespacepyc_1_1graph_1aa28a4253050413ec67a3313635a699ad" kindref="member">pyc::graph::edge_aggregation</ref>(edge_index_,<sp/>truth_,<sp/>*pmc);<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>truth_mass_cu<sp/>=<sp/><ref refid="namespacepyc_1_1physics_1_1cartesian_1_1combined_1adc80247c6622f7cb166a81fa45b7b51d" kindref="member">pyc::physics::cartesian::combined::M</ref>(truth_mass.at(</highlight><highlight class="stringliteral">&quot;cls::1::node-sum&quot;</highlight><highlight class="normal">));<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_mass_cu.index_put_({((truth_mass.at(</highlight><highlight class="stringliteral">&quot;cls::1::node-indices&quot;</highlight><highlight class="normal">)<sp/>&gt;<sp/>-1).sum({-1})<sp/>==<sp/>1),<sp/>0},<sp/>0);<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>PYC_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev_x<sp/>=<sp/>pred_mass_cu.device().index();<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>pred_mass_cu<sp/><sp/>=<sp/>pred_mass_cu.index({(pred_mass_cu<sp/>&gt;<sp/>0).view({-1})});<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_mass_cu<sp/>=<sp/>truth_mass_cu.index({(truth_mass_cu<sp/>&gt;<sp/>0).view({-1})});<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>pred_mass_cu<sp/><sp/>=<sp/>pred_mass_cu.view({-1}).to(torch::kCPU,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_mass_cu<sp/>=<sp/>truth_mass_cu.view({-1}).to(torch::kCPU,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>PYC_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::cuda::synchronize(dev_x);<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>v(pred_mass_cu.data_ptr&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(),<sp/>pred_mass_cu.data_ptr&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;()<sp/>+<sp/>pred_mass_cu.numel());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="namespacetest__experimental__mc20_1a7f7159e9d580b1c745290260dc63e0c3" kindref="member">t</ref>(truth_mass_cu.data_ptr&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(),<sp/>truth_mass_cu.data_ptr&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;()<sp/>+<sp/>truth_mass_cu.numel());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>pred_mass_edge;<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>v.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){(*type_)[mode][var_name]<sp/>-&gt;<sp/>Fill(v[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]);}<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>truth_mass_edge;<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/><ref refid="namespacetest__experimental__mc20_1a7f7159e9d580b1c745290260dc63e0c3" kindref="member">t</ref>.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){(*type_)[mode][var_name]<sp/>-&gt;<sp/>Fill(<ref refid="namespacetest__experimental__mc20_1a7f7159e9d580b1c745290260dc63e0c3" kindref="member">t</ref>[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]);}<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="modules/metrics/cxx/mass_plots.cxx"/>
  </compounddef>
</doxygen>
