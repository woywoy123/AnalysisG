<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="childrenkinematics_8pyx" kind="file" language="C++">
    <compoundname>childrenkinematics.pyx</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>distutils:<sp/>language=c++</highlight></codeline>
<codeline><highlight class="normal">#<sp/>cython:<sp/>language_level=3</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">from<sp/>libcpp<sp/>cimport<sp/>string</highlight></codeline>
<codeline><highlight class="normal">from<sp/>AnalysisG.core.tools<sp/>cimport<sp/>*</highlight></codeline>
<codeline><highlight class="normal">from<sp/>AnalysisG.core.selection_template<sp/>cimport<sp/>*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">cdef<sp/>str<sp/>pdgid(int<sp/>ipt):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>1<sp/>:<sp/>return<sp/>&quot;d&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>2<sp/>:<sp/>return<sp/>&quot;u&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>3<sp/>:<sp/>return<sp/>&quot;s&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>4<sp/>:<sp/>return<sp/>&quot;c&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>5<sp/>:<sp/>return<sp/>&quot;b&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>6<sp/>:<sp/>return<sp/>&quot;t&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>11:<sp/>return<sp/>&quot;e&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>12:<sp/>return<sp/>&quot;$\\nu_{e}$&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>13:<sp/>return<sp/>&quot;$\\mu$&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>14:<sp/>return<sp/>&quot;$\\nu_{\\mu}$&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>15:<sp/>return<sp/>&quot;$\\tau$&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>16:<sp/>return<sp/>&quot;$\\nu_{\\tau}$&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>21:<sp/>return<sp/>&quot;g&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>abs(ipt)<sp/>==<sp/>22:<sp/>return<sp/>&quot;$\\gamma$&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>&quot;n/a&quot;</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">cdef<sp/>void<sp/>merge(vector[float]*<sp/>ix,<sp/>vector[float]*<sp/>iy):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>int<sp/>i</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(iy.size()):<sp/>ix.push_back(iy.at(i))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">def<sp/>res(ck,<sp/>data):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>string<sp/>name<sp/>=<sp/>enc(data[0].split(&quot;_&quot;)[-1])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>vector[float]<sp/>vx<sp/>=<sp/>&lt;vector[float]&gt;(data[1])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>ChildrenKinematics<sp/>px<sp/>=<sp/>ck</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>merge(&amp;px.r_data[name],<sp/>&amp;vx)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">def<sp/>spc(ck,<sp/>data):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>string<sp/>name<sp/>=<sp/>enc(data[0].split(&quot;_&quot;)[-1])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>vector[float]<sp/>vx<sp/>=<sp/>&lt;vector[float]&gt;(data[1])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>ChildrenKinematics<sp/>px<sp/>=<sp/>ck</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>merge(&amp;px.s_data[name],<sp/>&amp;vx)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">def<sp/>rdcy(ck,<sp/>data):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>str<sp/>xd<sp/>=<sp/>&quot;frc.&quot;<sp/>if<sp/>&quot;frc&quot;<sp/>in<sp/>data[0]<sp/>else<sp/>&quot;&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>string<sp/>name<sp/>=<sp/>enc(xd<sp/>+<sp/>data[0].split(&quot;_&quot;)[-1])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>vector[float]<sp/>vx<sp/>=<sp/>&lt;vector[float]&gt;(data[1])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>ChildrenKinematics<sp/>px<sp/>=<sp/>ck</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>merge(&amp;px.r_decay[name],<sp/>&amp;vx)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">def<sp/>sdcy(ck,<sp/>data):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>str<sp/>xd<sp/>=<sp/>&quot;frc.&quot;<sp/>if<sp/>&quot;frc&quot;<sp/>in<sp/>data[0]<sp/>else<sp/>&quot;&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>string<sp/>name<sp/>=<sp/>enc(xd<sp/>+<sp/>data[0].split(&quot;_&quot;)[-1])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>vector[float]<sp/>vx<sp/>=<sp/>&lt;vector[float]&gt;(data[1])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>ChildrenKinematics<sp/>px<sp/>=<sp/>ck</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>merge(&amp;px.s_decay[name],<sp/>&amp;vx)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">def<sp/>tpm(ck,<sp/>data):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_name,<sp/>val<sp/>=<sp/>data</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>string<sp/>name<sp/>=<sp/>enc(_name.split(&quot;_&quot;)[-1])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>vector[float]<sp/>vx<sp/>=<sp/>&lt;vector[float]&gt;(val)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>ChildrenKinematics<sp/>px<sp/>=<sp/>ck</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>merge(&amp;px.top_pem[name],<sp/>&amp;vx)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">cdef<sp/>class<sp/>ChildrenKinematics(SelectionTemplate):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.root_leaves<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_pt&quot;<sp/><sp/><sp/><sp/><sp/>:<sp/>res,<sp/>&quot;spec_pt&quot;<sp/><sp/><sp/><sp/><sp/>:<sp/>spc,<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_energy&quot;<sp/>:<sp/>res,<sp/>&quot;spec_energy&quot;<sp/>:<sp/>spc,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_eta&quot;<sp/><sp/><sp/><sp/>:<sp/>res,<sp/>&quot;spec_eta&quot;<sp/><sp/><sp/><sp/>:<sp/>spc,<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_phi&quot;<sp/><sp/><sp/><sp/>:<sp/>res,<sp/>&quot;spec_phi&quot;<sp/><sp/><sp/><sp/>:<sp/>spc,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_pdgid&quot;<sp/><sp/><sp/>:<sp/>res,<sp/>&quot;spec_pdgid&quot;<sp/><sp/><sp/>:<sp/>spc,<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_pt&quot;<sp/><sp/><sp/><sp/><sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_pt&quot;<sp/><sp/><sp/><sp/><sp/>:<sp/>sdcy,<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_energy&quot;<sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_energy&quot;<sp/>:<sp/>sdcy,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_eta&quot;<sp/><sp/><sp/><sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_eta&quot;<sp/><sp/><sp/><sp/>:<sp/>sdcy,<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_phi&quot;<sp/><sp/><sp/><sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_phi&quot;<sp/><sp/><sp/><sp/>:<sp/>sdcy,<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_pdgid&quot;<sp/><sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_pdgid&quot;<sp/><sp/>:<sp/>sdcy,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_islep&quot;<sp/><sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_islep&quot;<sp/><sp/>:<sp/>sdcy,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_mass&quot;<sp/><sp/><sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_mass&quot;<sp/><sp/><sp/>:<sp/>sdcy,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_dR&quot;<sp/><sp/><sp/><sp/><sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_dR&quot;<sp/><sp/><sp/><sp/><sp/>:<sp/>sdcy,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_frc_e&quot;<sp/><sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_frc_e&quot;<sp/><sp/>:<sp/>sdcy,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;res_decay_frc_pt&quot;<sp/>:<sp/>rdcy,<sp/>&quot;spec_decay_frc_pt&quot;<sp/>:<sp/>sdcy,<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;top_perm_pt&quot;<sp/><sp/><sp/>:<sp/>tpm,<sp/>&quot;top_perm_energy&quot;<sp/>:<sp/>tpm,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;top_perm_mass&quot;<sp/>:<sp/>tpm,<sp/>&quot;top_perm_dR&quot;<sp/><sp/><sp/><sp/><sp/>:<sp/>tpm,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;top_perm_RR&quot;<sp/><sp/><sp/>:<sp/>tpm,<sp/>&quot;top_perm_SS&quot;<sp/><sp/><sp/><sp/><sp/>:<sp/>tpm,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;top_perm_RS&quot;<sp/><sp/><sp/>:<sp/>tpm,<sp/>&quot;top_perm_CT&quot;<sp/><sp/><sp/><sp/><sp/>:<sp/>tpm,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;top_perm_FT&quot;<sp/><sp/><sp/>:<sp/>tpm</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res_kinematics<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.spec_kinematics<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res_pdgid_kinematics<sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.spec_pdgid_kinematics<sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.res_decay_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.spec_decay_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fractional<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dr_clustering<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.top_children_dr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ptr<sp/>=<sp/>new<sp/>childrenkinematics()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.tt<sp/>=<sp/>&lt;childrenkinematics*&gt;self.ptr</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/>del<sp/>self.tt</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>Postprocessing(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>int<sp/>i</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>str<sp/>p,<sp/>k,<sp/>lx</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>vector[float]<sp/>pdg,<sp/>dxm</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>list<sp/>kx<sp/>=<sp/>[&quot;pt&quot;,<sp/>&quot;eta&quot;,<sp/>&quot;phi&quot;,<sp/>&quot;energy&quot;]<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>p<sp/>in<sp/>kx:<sp/>self.res_kinematics[p]<sp/><sp/>=<sp/>self.r_data[enc(p)]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>p<sp/>in<sp/>kx:<sp/>self.spec_kinematics[p]<sp/><sp/>=<sp/>self.s_data[enc(p)]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdg<sp/>=<sp/>self.r_data[b&quot;pdgid&quot;]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(pdg.size()):<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>pdg[i]<sp/>==<sp/>0:<sp/>continue</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pdgid(int(pdg[i]))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>p<sp/>not<sp/>in<sp/>self.res_pdgid_kinematics:<sp/>self.res_pdgid_kinematics[p]<sp/>=<sp/>{k<sp/>:<sp/>[]<sp/>for<sp/>k<sp/>in<sp/>kx}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>k<sp/>in<sp/>kx:<sp/>self.res_pdgid_kinematics[p][k]<sp/>+=<sp/>[self.r_data[enc(k)][i]]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.r_data.clear()<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdg<sp/>=<sp/>self.s_data[b&quot;pdgid&quot;]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(pdg.size()):<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>pdg[i]<sp/>==<sp/>0:<sp/>continue</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pdgid(int(pdg[i]))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>p<sp/>not<sp/>in<sp/>self.spec_pdgid_kinematics:<sp/>self.spec_pdgid_kinematics[p]<sp/>=<sp/>{k<sp/>:<sp/>[]<sp/>for<sp/>k<sp/>in<sp/>kx}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>k<sp/>in<sp/>kx:<sp/>self.spec_pdgid_kinematics[p][k]<sp/>+=<sp/>[self.s_data[enc(k)][i]]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.s_data.clear()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxm<sp/>=<sp/>self.r_decay[b&quot;islep&quot;]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(dxm.size()):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lx<sp/>=<sp/>&quot;lep&quot;<sp/>if<sp/>dxm[i]<sp/>else<sp/>&quot;had&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>lx<sp/>not<sp/>in<sp/>self.res_decay_mode:<sp/>self.res_decay_mode[lx]<sp/>=<sp/>{k<sp/>:<sp/>[]<sp/>for<sp/>k<sp/>in<sp/>kx}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>k<sp/>in<sp/>kx:<sp/>self.res_decay_mode[lx][k]<sp/>+=<sp/>[self.r_decay[enc(k)][i]]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pdgid(int(self.r_decay[b&quot;pdgid&quot;][i]))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lx<sp/>=<sp/>&quot;r&quot;<sp/>+<sp/>lx</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>lx<sp/>not<sp/>in<sp/>self.top_children_dr:<sp/>self.top_children_dr[lx]<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.top_children_dr[lx]<sp/>+=<sp/>[self.r_decay[b&quot;dR&quot;][i]]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>lx<sp/>+<sp/>&quot;-pt&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>k<sp/>not<sp/>in<sp/>self.fractional:<sp/>self.fractional[k]<sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>p<sp/>not<sp/>in<sp/>self.fractional[k]:<sp/>self.fractional[k][p]<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fractional[k][p]<sp/>+=<sp/>[self.r_decay[b&quot;frc.pt&quot;][i]]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>lx<sp/>+<sp/>&quot;-energy&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>k<sp/>not<sp/>in<sp/>self.fractional:<sp/>self.fractional[k]<sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>p<sp/>not<sp/>in<sp/>self.fractional[k]:<sp/>self.fractional[k][p]<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fractional[k][p]<sp/>+=<sp/>[self.r_decay[b&quot;frc.e&quot;][i]]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.r_decay.clear()</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxm<sp/>=<sp/>self.s_decay[b&quot;islep&quot;]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(dxm.size()):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lx<sp/>=<sp/>&quot;lep&quot;<sp/>if<sp/>dxm[i]<sp/>else<sp/>&quot;had&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>lx<sp/>not<sp/>in<sp/>self.spec_decay_mode:<sp/>self.spec_decay_mode[lx]<sp/>=<sp/>{k<sp/>:<sp/>[]<sp/>for<sp/>k<sp/>in<sp/>kx}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>k<sp/>in<sp/>kx:<sp/>self.spec_decay_mode[lx][k]<sp/>+=<sp/>[self.s_decay[enc(k)][i]]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pdgid(int(self.s_decay[b&quot;pdgid&quot;][i]))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lx<sp/>=<sp/>&quot;s&quot;<sp/>+<sp/>lx</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>lx<sp/>not<sp/>in<sp/>self.top_children_dr:<sp/>self.top_children_dr[lx]<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.top_children_dr[lx]<sp/>+=<sp/>[self.s_decay[b&quot;dR&quot;][i]]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>lx<sp/>+<sp/>&quot;-pt&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>k<sp/>not<sp/>in<sp/>self.fractional:<sp/>self.fractional[k]<sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>p<sp/>not<sp/>in<sp/>self.fractional[k]:<sp/>self.fractional[k][p]<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fractional[k][p]<sp/>+=<sp/>[self.s_decay[b&quot;frc.pt&quot;][i]]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>lx<sp/>+<sp/>&quot;-energy&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>k<sp/>not<sp/>in<sp/>self.fractional:<sp/>self.fractional[k]<sp/>=<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>p<sp/>not<sp/>in<sp/>self.fractional[k]:<sp/>self.fractional[k][p]<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fractional[k][p]<sp/>+=<sp/>[self.s_decay[b&quot;frc.e&quot;][i]]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.s_decay.clear()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxm<sp/>=<sp/>self.top_pem[b&quot;mass&quot;]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(dxm.size()):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/>=<sp/>&quot;CT&quot;*int(self.top_pem[b&quot;CT&quot;][i])<sp/>+<sp/>&quot;FT&quot;*int(self.top_pem[b&quot;FT&quot;][i])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>&quot;RR&quot;*int(self.top_pem[b&quot;RR&quot;][i])<sp/>+<sp/>&quot;SS&quot;*int(self.top_pem[b&quot;SS&quot;][i])<sp/>+<sp/>&quot;RS&quot;*int(self.top_pem[b&quot;RS&quot;][i])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>p<sp/>not<sp/>in<sp/>self.dr_clustering:<sp/>self.dr_clustering[p]<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dr_clustering[p]<sp/>+=<sp/>[self.top_pem[b&quot;dR&quot;][i]]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.top_pem.clear()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>void<sp/>transform_dict_keys(self):<sp/>pass</highlight></codeline>
<codeline></codeline>
    </programlisting>
    <location file="selections/mc16/childrenkinematics/childrenkinematics.pyx"/>
  </compounddef>
</doxygen>
