<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacepyc_1_1nusol" kind="namespace" language="C++">
    <compoundname>pyc::nusol</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepyc_1_1nusol_1a66ad18c125df47cd81fd3043ab4cc2f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Dict&lt; std::string, torch::Tensor &gt;</type>
        <definition>torch::Dict&lt; std::string, torch::Tensor &gt; pyc::nusol::BaseMatrix</definition>
        <argsstring>(torch::Tensor pmc_b, torch::Tensor pmc_mu, torch::Tensor masses)</argsstring>
        <name>BaseMatrix</name>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_b</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_mu</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>masses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="141" column="21" bodyfile="pyc/interface/nusol.cxx" bodystart="11" bodyend="14" declfile="pyc/interface/include/pyc/pyc.h" declline="141" declcolumn="21"/>
        <references refid="namespacenusol___1a526c0e4a558a1201624ea0b639bc747c" compoundref="nusol_2tensor_2nusol_8cxx" startline="198" endline="242">nusol_::BaseMatrix</references>
        <references refid="utils_8h_1a123aed6d73594e07c6401a7a6c587808" compoundref="utils_8cxx" startline="26" endline="26">changedev</references>
        <references refid="namespacemain_1ac9ec47d188b4a9306435147b589e3d03" compoundref="mc16__matching_2main_8py" startline="99">main.masses</references>
        <references refid="namespacepyc_1ab174cc51f6efef06bdb0ba47ec3fe3bf" compoundref="interface_8cxx" startline="20" endline="25">pyc::std_to_dict</references>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1_1nusol_1a991cfa801400211ccf412bd1a85b7b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Dict&lt; std::string, torch::Tensor &gt;</type>
        <definition>torch::Dict&lt; std::string, torch::Tensor &gt; pyc::nusol::Nu</definition>
        <argsstring>(torch::Tensor pmc_b, torch::Tensor pmc_mu, torch::Tensor met_xy, torch::Tensor masses, torch::Tensor sigma, double null=10e-10)</argsstring>
        <name>Nu</name>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_b</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_mu</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>met_xy</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>masses</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>null</declname>
          <defval>10e-10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="142" column="21" bodyfile="pyc/interface/nusol.cxx" bodystart="16" bodyend="23" declfile="pyc/interface/include/pyc/pyc.h" declline="142" declcolumn="21"/>
        <references refid="utils_8h_1a123aed6d73594e07c6401a7a6c587808" compoundref="utils_8cxx" startline="26" endline="26">changedev</references>
        <references refid="namespacemain_1ac9ec47d188b4a9306435147b589e3d03" compoundref="mc16__matching_2main_8py" startline="99">main.masses</references>
        <references refid="namespacenusol___1a6f05175e14627bd3c34ffa61686b7da4" compoundref="nusol_2tensor_2nusol_8cxx" startline="430" endline="471">nusol_::Nu</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="namespacepyc_1ab174cc51f6efef06bdb0ba47ec3fe3bf" compoundref="interface_8cxx" startline="20" endline="25">pyc::std_to_dict</references>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1_1nusol_1a9650527ae538fa27121bedfb79a1fbe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Dict&lt; std::string, torch::Tensor &gt;</type>
        <definition>torch::Dict&lt; std::string, torch::Tensor &gt; pyc::nusol::NuNu</definition>
        <argsstring>(torch::Tensor pmc_b1, torch::Tensor pmc_b2, torch::Tensor pmc_l1, torch::Tensor pmc_l2, torch::Tensor met_xy, torch::Tensor masses, double null=10e-10, const double step=1e-9, const double tolerance=1e-6, const unsigned int timeout=1000)</argsstring>
        <name>NuNu</name>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_b1</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_b2</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_l1</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_l2</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>met_xy</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>masses</declname>
        </param>
        <param>
          <type>double</type>
          <declname>null</declname>
          <defval>10e-10</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>step</declname>
          <defval>1e-9</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
          <defval>1e-6</defval>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>timeout</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="147" column="21" bodyfile="pyc/interface/nusol.cxx" bodystart="25" bodyend="34" declfile="pyc/interface/include/pyc/pyc.h" declline="147" declcolumn="21"/>
        <references refid="utils_8h_1a123aed6d73594e07c6401a7a6c587808" compoundref="utils_8cxx" startline="26" endline="26">changedev</references>
        <references refid="namespacemain_1ac9ec47d188b4a9306435147b589e3d03" compoundref="mc16__matching_2main_8py" startline="99">main.masses</references>
        <references refid="namespacenusol___1ac849ef3564c5ac968727dce36494fd0a" compoundref="nusol_2tensor_2nusol_8cxx" startline="473" endline="560">nusol_::NuNu</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="namespacepyc_1ab174cc51f6efef06bdb0ba47ec3fe3bf" compoundref="interface_8cxx" startline="20" endline="25">pyc::std_to_dict</references>
        <referencedby refid="namespacepyc_1_1nusol_1adb902ce7bc71e3a4cf26f2f1e88e856c" compoundref="interface_8cxx" startline="82" endline="121">NuNu</referencedby>
        <referencedby refid="classvalidation_1aa436b348c281a3d676910cf7b7d575eb" compoundref="validation_8cxx" startline="58" endline="116">validation::reconstruction</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1_1nusol_1af7bb509b120cb3314695cecd70bc5c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Dict&lt; std::string, torch::Tensor &gt;</type>
        <definition>torch::Dict&lt; std::string, torch::Tensor &gt; pyc::nusol::NuNu</definition>
        <argsstring>(torch::Tensor pmc_b1, torch::Tensor pmc_b2, torch::Tensor pmc_l1, torch::Tensor pmc_l2, torch::Tensor met_xy, double null, torch::Tensor mass1, torch::Tensor mass2, const double step=1e-9, const double tolerance=1e-6, const unsigned int timeout=1000)</argsstring>
        <name>NuNu</name>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_b1</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_b2</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_l1</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc_l2</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>met_xy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>null</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>mass1</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>mass2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>step</declname>
          <defval>1e-9</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
          <defval>1e-6</defval>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>timeout</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="154" column="21" bodyfile="pyc/interface/nusol.cxx" bodystart="36" bodyend="45" declfile="pyc/interface/include/pyc/pyc.h" declline="154" declcolumn="21"/>
        <references refid="utils_8h_1a123aed6d73594e07c6401a7a6c587808" compoundref="utils_8cxx" startline="26" endline="26">changedev</references>
        <references refid="namespacenusol___1ac849ef3564c5ac968727dce36494fd0a" compoundref="nusol_2tensor_2nusol_8cxx" startline="473" endline="560">nusol_::NuNu</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="namespacepyc_1ab174cc51f6efef06bdb0ba47ec3fe3bf" compoundref="interface_8cxx" startline="20" endline="25">pyc::std_to_dict</references>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1_1nusol_1adb902ce7bc71e3a4cf26f2f1e88e856c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; <ref refid="classneutrino" kindref="compound">neutrino</ref> *, <ref refid="classneutrino" kindref="compound">neutrino</ref> * &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt; neutrino *, neutrino * &gt; &gt; pyc::nusol::NuNu</definition>
        <argsstring>(std::vector&lt; std::vector&lt; double &gt;&gt; *pmc_b1, std::vector&lt; std::vector&lt; double &gt;&gt; *pmc_b2, std::vector&lt; std::vector&lt; double &gt;&gt; *pmc_l1, std::vector&lt; std::vector&lt; double &gt;&gt; *pmc_l2, std::vector&lt; double &gt; *met, std::vector&lt; double &gt; *phi, std::vector&lt; std::vector&lt; double &gt;&gt; *mass1, std::vector&lt; std::vector&lt; double &gt;&gt; *mass2, std::string dev, const double null, const double step, const double tolerance, const unsigned int timeout)</argsstring>
        <name>NuNu</name>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>pmc_b1</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>pmc_b2</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>pmc_l1</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>pmc_l2</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>met</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>mass1</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>mass2</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>null</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>step</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="161" column="21" bodyfile="pyc/interface/interface.cxx" bodystart="82" bodyend="121" declfile="pyc/interface/include/pyc/pyc.h" declline="161" declcolumn="21"/>
        <references refid="utils_8h_1a123aed6d73594e07c6401a7a6c587808" compoundref="utils_8cxx" startline="26" endline="26">changedev</references>
        <references refid="interface_8cxx_1a59ebbc78ff144f4bc1c28db0770a21d4" compoundref="interface_8cxx" startline="54" endline="80">construct_particle</references>
        <references refid="namespacemain_1a7036efb6f19b478d668e5ba8e23d215d" compoundref="performance_2main_8py" startline="142">main.dev</references>
        <references refid="enums_8h_1a2a4ec8e1c0c344aaecca227c72c2eeb4a377fd569971eedeba8fbea28434a390a">l1</references>
        <references refid="namespacernn__model_1a3d5657621f343e53150d482e59f6abed" compoundref="rnn__model_8py" startline="39">rnn_model.m1</references>
        <references refid="namespacepyc_1_1nusol_1a9650527ae538fa27121bedfb79a1fbe6" compoundref="interface_2nusol_8cxx" startline="25" endline="34">NuNu</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="namespacepyc_1_1transform_1_1separate_1a8707538e9073094f20ba7f80bf98757b" compoundref="interface_2transform_8cxx" startline="65" endline="68">pyc::transform::separate::Px</references>
        <references refid="namespacepyc_1_1transform_1_1separate_1a213b45f87684e873b719a628675b3382" compoundref="interface_2transform_8cxx" startline="77" endline="80">pyc::transform::separate::Py</references>
        <references refid="vector__cast_8h_1a9888ed684385b240692f6cb6e4c6b82e" compoundref="vector__cast_8h" startline="40" endline="51">tensor_to_vector</references>
        <references refid="namespacepyc_1aed2996264099d57c7d42ac156c54981d" compoundref="interface_8cxx" startline="41" endline="45">pyc::tensorize</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1_1nusol_1a83b904aa477736c34bac502e42032971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename b</type>
          </param>
          <param>
            <type>typename l</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::pair&lt; <ref refid="classneutrino" kindref="compound">neutrino</ref> *, <ref refid="classneutrino" kindref="compound">neutrino</ref> * &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;neutrino*, neutrino*&gt; &gt; pyc::nusol::NuNu</definition>
        <argsstring>(std::vector&lt; b * &gt; bquark1, std::vector&lt; b * &gt; bquark2, std::vector&lt; l * &gt; lepton1, std::vector&lt; l * &gt; lepton2, std::vector&lt; double &gt; met_, std::vector&lt; double &gt; phi_, std::vector&lt; std::vector&lt; double &gt;&gt; mass1, std::vector&lt; std::vector&lt; double &gt;&gt; mass2, std::string dev, double null, const double step, const double tolerance, const unsigned int timeout)</argsstring>
        <name>NuNu</name>
        <param>
          <type>std::vector&lt; b * &gt;</type>
          <declname>bquark1</declname>
        </param>
        <param>
          <type>std::vector&lt; b * &gt;</type>
          <declname>bquark2</declname>
        </param>
        <param>
          <type>std::vector&lt; l * &gt;</type>
          <declname>lepton1</declname>
        </param>
        <param>
          <type>std::vector&lt; l * &gt;</type>
          <declname>lepton2</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>met_</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>phi_</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt;</type>
          <declname>mass1</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt;</type>
          <declname>mass2</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>double</type>
          <declname>null</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>step</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="170" column="21" bodyfile="pyc/interface/include/pyc/pyc.h" bodystart="170" bodyend="196"/>
        <references refid="namespacemain_1a7036efb6f19b478d668e5ba8e23d215d" compoundref="performance_2main_8py" startline="142">main.dev</references>
        <references refid="enums_8h_1a2a4ec8e1c0c344aaecca227c72c2eeb4a377fd569971eedeba8fbea28434a390a">l1</references>
        <references refid="namespacepyc_1_1nusol_1a9650527ae538fa27121bedfb79a1fbe6" compoundref="interface_2nusol_8cxx" startline="25" endline="34">NuNu</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="namespacepyc_1a9ca17d556b0537faaec85b0c39efb347" compoundref="pyc_8h" startline="34" endline="38">pyc::to_pmc</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1_1nusol_1a0b618f866aa33e16c704d828744335e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Dict&lt; std::string, torch::Tensor &gt;</type>
        <definition>torch::Dict&lt; std::string, torch::Tensor &gt; pyc::nusol::combinatorial</definition>
        <argsstring>(torch::Tensor edge_index, torch::Tensor batch, torch::Tensor pmc, torch::Tensor pid, torch::Tensor met_xy, double mT=172.62 *1000, double mW=80.385 *1000, double null=1e-10, double perturb=1e-3, long steps=100, bool gev=false)</argsstring>
        <name>combinatorial</name>
        <param>
          <type>torch::Tensor</type>
          <declname>edge_index</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pmc</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>torch::Tensor</type>
          <declname>met_xy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mT</declname>
          <defval>172.62 *1000</defval>
        </param>
        <param>
          <type>double</type>
          <declname>mW</declname>
          <defval>80.385 *1000</defval>
        </param>
        <param>
          <type>double</type>
          <declname>null</declname>
          <defval>1e-10</defval>
        </param>
        <param>
          <type>double</type>
          <declname>perturb</declname>
          <defval>1e-3</defval>
        </param>
        <param>
          <type>long</type>
          <declname>steps</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>gev</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="199" column="21" bodyfile="pyc/interface/nusol.cxx" bodystart="47" bodyend="55" declfile="pyc/interface/include/pyc/pyc.h" declline="199" declcolumn="21"/>
        <references refid="_3name_4_8h_1a3d94067338cad267b90428afcc647e33">batch</references>
        <references refid="utils_8h_1a123aed6d73594e07c6401a7a6c587808" compoundref="utils_8cxx" startline="26" endline="26">changedev</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7">edge_index</references>
        <references refid="namespacenusol_1a1e559ea5155167464c23cac0cff8c6c6" compoundref="nusol_8py" startline="7">nusol.mT</references>
        <references refid="namespacenusol_1ab14e609dc13d5daf1dcf4d62089f666a" compoundref="nusol_8py" startline="6">nusol.mW</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56">pmc</references>
        <references refid="namespacepyc_1ab174cc51f6efef06bdb0ba47ec3fe3bf" compoundref="interface_8cxx" startline="20" endline="25">pyc::std_to_dict</references>
        <referencedby refid="namespacepyc_1_1nusol_1ae7700849ae562ae11fd360bf94fe154d" compoundref="interface_8cxx" startline="123" endline="177">combinatorial</referencedby>
        <referencedby refid="classcombinatorial_1a4f90aaf04154a0d1ca9d59e1ccb2c54e" compoundref="combinatorial_8cxx" startline="72" endline="136">combinatorial::reconstruction</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1_1nusol_1ae7700849ae562ae11fd360bf94fe154d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; <ref refid="classneutrino" kindref="compound">neutrino</ref> *, <ref refid="classneutrino" kindref="compound">neutrino</ref> * &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt; neutrino *, neutrino * &gt; &gt; pyc::nusol::combinatorial</definition>
        <argsstring>(std::vector&lt; double &gt; *met_, std::vector&lt; double &gt; *phi_, std::vector&lt; std::vector&lt; double &gt;&gt; *pmc, std::vector&lt; long &gt; *bth, std::vector&lt; long &gt; *is_b, std::vector&lt; long &gt; *is_l, std::string dev, double mT, double mW, double null, double perturb, long steps)</argsstring>
        <name>combinatorial</name>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>met_</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>phi_</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>pmc</declname>
        </param>
        <param>
          <type>std::vector&lt; long &gt; *</type>
          <declname>bth</declname>
        </param>
        <param>
          <type>std::vector&lt; long &gt; *</type>
          <declname>is_b</declname>
        </param>
        <param>
          <type>std::vector&lt; long &gt; *</type>
          <declname>is_l</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mT</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mW</declname>
        </param>
        <param>
          <type>double</type>
          <declname>null</declname>
        </param>
        <param>
          <type>double</type>
          <declname>perturb</declname>
        </param>
        <param>
          <type>long</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="205" column="21" bodyfile="pyc/interface/interface.cxx" bodystart="123" bodyend="177" declfile="pyc/interface/include/pyc/pyc.h" declline="205" declcolumn="21"/>
        <references refid="utils_8h_1a123aed6d73594e07c6401a7a6c587808" compoundref="utils_8cxx" startline="26" endline="26">changedev</references>
        <references refid="namespacepyc_1_1nusol_1a0b618f866aa33e16c704d828744335e1" compoundref="interface_2nusol_8cxx" startline="47" endline="55">combinatorial</references>
        <references refid="interface_8cxx_1a59ebbc78ff144f4bc1c28db0770a21d4" compoundref="interface_8cxx" startline="54" endline="80">construct_particle</references>
        <references refid="namespacemain_1a7036efb6f19b478d668e5ba8e23d215d" compoundref="performance_2main_8py" startline="142">main.dev</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7">edge_index</references>
        <references refid="enums_8h_1a2a4ec8e1c0c344aaecca227c72c2eeb4a377fd569971eedeba8fbea28434a390a">l1</references>
        <references refid="namespacenusol_1a1e559ea5155167464c23cac0cff8c6c6" compoundref="nusol_8py" startline="7">nusol.mT</references>
        <references refid="namespacenusol_1ab14e609dc13d5daf1dcf4d62089f666a" compoundref="nusol_8py" startline="6">nusol.mW</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56">pmc</references>
        <references refid="namespacepyc_1_1transform_1_1separate_1a8707538e9073094f20ba7f80bf98757b" compoundref="interface_2transform_8cxx" startline="65" endline="68">pyc::transform::separate::Px</references>
        <references refid="namespacepyc_1_1transform_1_1separate_1a213b45f87684e873b719a628675b3382" compoundref="interface_2transform_8cxx" startline="77" endline="80">pyc::transform::separate::Py</references>
        <references refid="vector__cast_8h_1a9888ed684385b240692f6cb6e4c6b82e" compoundref="vector__cast_8h" startline="40" endline="51">tensor_to_vector</references>
        <references refid="namespacepyc_1aed2996264099d57c7d42ac156c54981d" compoundref="interface_8cxx" startline="41" endline="45">pyc::tensorize</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="namespacepyc_1_1nusol_1aae65d0a6b6e1953b0bbbeabdbc344b8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; <ref refid="classneutrino" kindref="compound">neutrino</ref> *, <ref refid="classneutrino" kindref="compound">neutrino</ref> * &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt; neutrino *, neutrino * &gt; &gt; pyc::nusol::combinatorial</definition>
        <argsstring>(std::vector&lt; double &gt; met_, std::vector&lt; double &gt; phi_, std::vector&lt; std::vector&lt; particle_template * &gt;&gt; particles, std::string dev, double mT, double mW, double null, double perturb, long steps)</argsstring>
        <name>combinatorial</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>met_</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>phi_</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="classparticle__template" kindref="compound">particle_template</ref> * &gt;&gt;</type>
          <declname>particles</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mT</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mW</declname>
        </param>
        <param>
          <type>double</type>
          <declname>null</declname>
        </param>
        <param>
          <type>double</type>
          <declname>perturb</declname>
        </param>
        <param>
          <type>long</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pyc/interface/include/pyc/pyc.h" line="211" column="21" bodyfile="pyc/interface/nusol.cxx" bodystart="57" bodyend="113" declfile="pyc/interface/include/pyc/pyc.h" declline="211" declcolumn="21"/>
        <references refid="namespacepyc_1ab7196e93df1b00235cd13aee5b3d8835" compoundref="pyc_8h" startline="31" endline="31">pyc::as_pmc</references>
        <references refid="namespacepyc_1_1nusol_1a0b618f866aa33e16c704d828744335e1" compoundref="interface_2nusol_8cxx" startline="47" endline="55">combinatorial</references>
        <references refid="namespacemain_1a7036efb6f19b478d668e5ba8e23d215d" compoundref="performance_2main_8py" startline="142">main.dev</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ae0da17ca8558064e75c801fadc3537a4">is_b</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28acc9357767a613ec2e912943553e95778">is_lep</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ab09e705fe6108a37560c8173e04c822d">is_nu</references>
        <references refid="namespacenusol_1a1e559ea5155167464c23cac0cff8c6c6" compoundref="nusol_8py" startline="7">nusol.mT</references>
        <references refid="namespacenusol_1ab14e609dc13d5daf1dcf4d62089f666a" compoundref="nusol_8py" startline="6">nusol.mW</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56">pmc</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pyc/interface/include/pyc/pyc.h" line="140" column="19"/>
  </compounddef>
</doxygen>
