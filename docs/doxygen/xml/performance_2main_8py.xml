<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="performance_2main_8py" kind="file" language="Python">
    <compoundname>performance/main.py</compoundname>
    <innerclass refid="classmain_1_1_data_x" prot="public">main::DataX</innerclass>
    <innerclass refid="classmain_1_1_meta_x" prot="public">main::MetaX</innerclass>
    <innernamespace refid="namespacemain">main</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>AnalysisG<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Analysis</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespace_analysis_g_1_1core" kindref="compound">AnalysisG.core</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>IO,<sp/>MetaLookup,<sp/>Data</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacetopefficiency_1_1algorithms" kindref="compound">topefficiency.algorithms</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mapping</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pathlib</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classmain_1_1_data_x" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1_data_x" kindref="compound">DataX</ref>(Data):</highlight></codeline>
<codeline lineno="9" refid="classmain_1_1_data_x_1ada7ac4c639d5b6041ca38aa877000c7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1_data_x_1ada7ac4c639d5b6041ca38aa877000c7e" kindref="member">title</ref>(self,<sp/>val):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._meta(val).title</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classmain_1_1_meta_x" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1_meta_x" kindref="compound">MetaX</ref>(MetaLookup):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="14" refid="classmain_1_1_meta_x_1a485796f235267703afbef38cd9388014" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1_meta_x_1a485796f235267703afbef38cd9388014" kindref="member">title</ref>(self):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mapping(self.meta.DatasetName)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.meta<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="16" refid="classmain_1_1_meta_x_1acdd715e8b2babbe7018b11ac716ffdbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1_meta_x_1acdd715e8b2babbe7018b11ac716ffdbb" kindref="member">SumOfWeights</ref>(self):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.meta.SumOfWeights[b</highlight><highlight class="stringliteral">&quot;sumWeights&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;total_events_weighted&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="18" refid="classmain_1_1_meta_x_1a6b8969c84423b57d7bd2bf393f7d4e73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1_meta_x_1a6b8969c84423b57d7bd2bf393f7d4e73" kindref="member">GenerateData</ref>(self):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataX(self)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="namespacemain_1a3e2cdde40cc80f36163edfb03342181e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemain_1a3e2cdde40cc80f36163edfb03342181e" kindref="member">chunks</ref>(lst,<sp/>n):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>len(lst),<sp/>n):<sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>lst[i:i<sp/>+<sp/>n]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespacemain_1ad8134e36fc33811bbb1bc5b30626ab76" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemain_1ad8134e36fc33811bbb1bc5b30626ab76" kindref="member">build_samples</ref>(pth,<sp/>pattern,<sp/>chnks):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a3e2cdde40cc80f36163edfb03342181e" kindref="member">chunks</ref>([str(i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pathlib.Path(pth).glob(pattern)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>str(i).endswith(</highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">)],<sp/>chnks)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>model<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespace_analysis_g_1_1models" kindref="compound">AnalysisG.models</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="28" refid="namespacemain_1a2869e00ab30eb11e0a79a361aa80ee59" refkind="member"><highlight class="normal">model_method<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;RecursiveGraphNeuralNetwork&quot;</highlight><highlight class="normal"><sp/>:<sp/>RecursiveGraphNeuralNetwork,<sp/></highlight><highlight class="stringliteral">&quot;Grift&quot;</highlight><highlight class="normal"><sp/>:<sp/>Grift}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>selection<sp/>studies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>AnalysisG.selections.performance.topefficiency.topefficiency<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TopEfficiency</highlight></codeline>
<codeline lineno="32" refid="namespacemain_1a7eb8775106d5260c53db94776895ad93" refkind="member"><highlight class="normal">selection_method<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;TopEfficiency&quot;</highlight><highlight class="normal"><sp/>:<sp/>TopEfficiency}</highlight></codeline>
<codeline lineno="33" refid="namespacemain_1a221443bc6f27efacbf54bac67030572f" refkind="member"><highlight class="normal">selection_container<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#<sp/>event<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespace_analysis_g_1_1events_1_1gnn" kindref="compound">AnalysisG.events.gnn</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>EventGNN</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespace_analysis_g_1_1events_1_1bsm__4tops" kindref="compound">AnalysisG.events.bsm_4tops</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BSM4Tops</highlight></codeline>
<codeline lineno="38" refid="namespacemain_1a576febbdb42668b7e7fd77ad34706dfa" refkind="member"><highlight class="normal">event_method<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;BSM4Tops&quot;</highlight><highlight class="normal"><sp/>:<sp/>BSM4Tops,<sp/></highlight><highlight class="stringliteral">&quot;EventGNN&quot;</highlight><highlight class="normal"><sp/>:<sp/>EventGNN}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">#<sp/>graph<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespace_analysis_g_1_1graphs_1_1bsm__4tops" kindref="compound">AnalysisG.graphs.bsm_4tops</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="42" refid="namespacemain_1a1b297bc3a94c293c24f3450357882c3d" refkind="member"><highlight class="normal">graph_method<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GraphTruthJets&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>:<sp/>GraphTruthJets,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GraphTruthJetsNoNu&quot;</highlight><highlight class="normal"><sp/>:<sp/>GraphTruthJetsNoNu,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GraphJets&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>GraphJets,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GraphJetsNoNu&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>GraphJetsNoNu,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GraphDetectorLep&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>:<sp/>GraphDetectorLep,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GraphDetector&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>GraphDetector</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">#<sp/>figures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>topefficiency</highlight></codeline>
<codeline lineno="53"><highlight class="normal">plotting_method<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;topefficiency&quot;</highlight><highlight class="normal"><sp/>:<sp/>topefficiency}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">study<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;topefficiency&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespacemain_1af2a859d4730910c46691f179a6693f24" refkind="member"><highlight class="normal">graph_name<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GraphJets&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespacemain_1a1f913fdca3bbabffd46277324d1aaecb" refkind="member"><highlight class="normal">graph_prefix<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_bn_1_&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="namespacemain_1ab9bc6d691b605a742f37553e360bf09b" refkind="member"><highlight class="normal">inference_mode<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespacemain_1a8501feac7bfbe51a66d388e992226a7e" refkind="member"><highlight class="normal">plot_only<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="namespacemain_1a3dc21daf80e643442377875b43f3afd1" refkind="member"><highlight class="normal">fetch_meta<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespacemain_1a80f426fc77f04532ec33926093f403ec" refkind="member"><highlight class="normal">build_cache<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="namespacemain_1a80a24f910858581b24642a9a814be13d" refkind="member"><highlight class="normal">threads<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>12</highlight></codeline>
<codeline lineno="64" refid="namespacemain_1a7dc5dbc21cc2e35aa486b3630c861e9d" refkind="member"><highlight class="normal">bts<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>250</highlight></codeline>
<codeline lineno="65" refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" refkind="member"><highlight class="normal">kfold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;kfold-1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespacemain_1a39107d6c0b192041f7af5301ba6e467c" refkind="member"><highlight class="normal">epoch<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;epoch-10&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="namespacemain_1a568d30f25fe074a0c2ab2ab2246e4023" refkind="member"><highlight class="normal">mrk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MRK-1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">pth<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;./serialized-data/&quot;</highlight><highlight class="normal"><sp/>+<sp/>mrk<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>epoch<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>kfold<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" refkind="member"><highlight class="normal">out<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/import/wu1/tnom6927/TrainingOutput/mc16-inference/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">figure_path<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/import/wu1/tnom6927/TrainingOutput/Output/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="namespacemain_1a1749275def4d2b1ea075ae09d0349e92" refkind="member"><highlight class="normal">graph_cache<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/scratch/tnom6927/graph-data-mc16-full/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="namespacemain_1a75df701dd5b9e04e79e01ef715caa5d7" refkind="member"><highlight class="normal">root_model<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/import/wu1/tnom6927/TrainingOutput/training-sessions/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">#data_path<sp/><sp/><sp/>=<sp/>&quot;/import/wu1/tnom6927/TrainingOutput/grid-data/&quot;<sp/>#<sp/>&lt;-----<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">#data_path<sp/>=<sp/>&quot;/CERN/trainings/mc16-full-inference/ROOT/&quot;<sp/>+<sp/>graph_name<sp/>+<sp/>graph_prefix<sp/>+<sp/>&quot;Grift/&quot;<sp/>+<sp/>mrk<sp/>+<sp/>&quot;/&quot;<sp/>+<sp/>epoch<sp/>+<sp/>&quot;/&quot;<sp/>+<sp/>kfold<sp/>+<sp/>&quot;/&quot;<sp/>#<sp/>&lt;-----<sp/>local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="namespacemain_1a67d4b4ff403f27a1f243131bb5cadd8b" refkind="member"><highlight class="normal">data_path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/import/wu1/tnom6927/TrainingOutput/mc16-inference/ROOT/&quot;</highlight><highlight class="normal"><sp/>+<sp/>graph_name<sp/>+<sp/>graph_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Grift/&quot;</highlight><highlight class="normal"><sp/>+<sp/>mrk<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>epoch<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>kfold<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">#data_path<sp/>=<sp/>&quot;/CERN/Samples/mc16-full/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="namespacemain_1ad5f431cd5bc8ca320e68b73e9ddebba5" refkind="member"><highlight class="normal">epx<sp/>=<sp/>[i+1*(i==0)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>10,<sp/>1)]</highlight></codeline>
<codeline lineno="81" refid="namespacemain_1a2bb119724271d6fb1cb57b652851550b" refkind="member"><highlight class="normal">model_states<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MRK-1&quot;</highlight><highlight class="normal"><sp/>:<sp/>{</highlight><highlight class="stringliteral">&quot;epoch-&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(ep)<sp/>:<sp/>([</highlight><highlight class="stringliteral">&quot;kfold-&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(i+1)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>2)],<sp/>[</highlight><highlight class="stringliteral">&quot;cuda:1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cuda:0&quot;</highlight><highlight class="normal">])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>epx},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MRK-2&quot;</highlight><highlight class="normal"><sp/>:<sp/>{</highlight><highlight class="stringliteral">&quot;epoch-&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(ep)<sp/>:<sp/>([</highlight><highlight class="stringliteral">&quot;kfold-&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(i+1)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>2)],<sp/>[</highlight><highlight class="stringliteral">&quot;cuda:0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cuda:1&quot;</highlight><highlight class="normal">])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>epx},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>&quot;MRK-3&quot;<sp/>:<sp/>{&quot;epoch-&quot;<sp/>+<sp/>str(ep)<sp/>:<sp/>([&quot;kfold-&quot;<sp/>+<sp/>str(i+1)<sp/>for<sp/>i<sp/>in<sp/>range(0,<sp/>2)],<sp/>[&quot;cuda:1&quot;,<sp/>&quot;cuda:0&quot;])<sp/>for<sp/>ep<sp/>in<sp/>epx},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>&quot;MRK-4&quot;<sp/>:<sp/>{&quot;epoch-&quot;<sp/>+<sp/>str(ep)<sp/>:<sp/>([&quot;kfold-&quot;<sp/>+<sp/>str(i+1)<sp/>for<sp/>i<sp/>in<sp/>range(0,<sp/>2)],<sp/>[&quot;cuda:0&quot;,<sp/>&quot;cuda:1&quot;])<sp/>for<sp/>ep<sp/>in<sp/>epx},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">figure_path<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>mrk<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>epoch<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>kfold</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="namespacemain_1a9ca5af45af90e5c8d37857662993d6d7" refkind="member"><highlight class="normal">ls<sp/>=<sp/>list(<ref refid="namespacemain_1ad8134e36fc33811bbb1bc5b30626ab76" kindref="member">build_samples</ref>(data_path,<sp/></highlight><highlight class="stringliteral">&quot;**/*.root&quot;</highlight><highlight class="normal">,<sp/>12))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>fetch_meta:</highlight></codeline>
<codeline lineno="92" refid="namespacemain_1addad44088d98a1b128614b9004968ae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ls:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana<sp/>=<sp/>Analysis()</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>i:<sp/>ana.AddSamples(k,<sp/>k.split(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)[-1])</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana.FetchMeta<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana.SumOfWeightsTreeName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;sumWeights&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana.Start()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(x,<sp/>len(ls))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x+=1</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>exit()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="namespacemain_1aa05f7802eba5ab50656048b6bb5d20fb" refkind="member"><highlight class="normal">event_name<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BSM4Tops&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inference_mode<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>build_cache<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;EventGNN&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">graph_name<sp/><sp/><sp/><sp/><sp/>=<sp/>graph_name<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inference_mode<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>build_cache<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="namespacemain_1aa073abda253261a71ea168396e75d83b" refkind="member"><highlight class="normal">model_name<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Grift&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inference_mode<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>build_cache<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="namespacemain_1ab162c98354840d8900204ecd6f25ad42" refkind="member"><highlight class="normal">selection_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TopEfficiency&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>inference_mode<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>build_cache<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="namespacemain_1a3e005ce88b044c9bcd549a9f536a1e63" refkind="member"><highlight class="normal">i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ls:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>plot_only:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ana<sp/>=<sp/>Analysis()</highlight></codeline>
<codeline lineno="112" refid="namespacemain_1a7c4403435a3728fc6a31fab651f8edfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ana.BuildCache<sp/>=<sp/>build_cache</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ana.Threads<sp/>=<sp/>threads</highlight></codeline>
<codeline lineno="114" refid="namespacemain_1a03d04be39b67d37dceefed6c1fbe09c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ana.BatchSize<sp/>=<sp/>bts</highlight></codeline>
<codeline lineno="115" refid="namespacemain_1a1aceda3dd349820a84ee5133d54d459e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ana.OutputPath<sp/>=<sp/>out</highlight></codeline>
<codeline lineno="116" refid="namespacemain_1aa34a8183a906b30722e72030a0bed64a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ana.GraphCache<sp/>=<sp/>graph_cache</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(model_states):<sp/>ana.FetchMeta<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selection_container[selection_name]<sp/>=<sp/>selection_method[selection_name]()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/>open(pth<sp/>+<sp/>str(i),<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/>ana.AddSelection(selection_container[selection_name])</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>k:</highlight></codeline>
<codeline lineno="126" refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/>j.split(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)[-1]</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana.AddSamples(j,<sp/>label)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/>ana.AddEvent(event_method[event_name](),<sp/>label)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>NameError:<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/>ana.AddGraph(graph_method[graph_name](),<sp/>label)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>NameError:<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model_states:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>inference_mode:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model_states[j]:</highlight></codeline>
<codeline lineno="141" refid="namespacemain_1a6e037a1111374e9b39a470eb175616d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdl<sp/>=<sp/>root_model<sp/>+<sp/>graph_name<sp/>+<sp/>graph_prefix[:-1]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>j<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/state/&quot;</highlight><highlight class="normal"><sp/>+<sp/>ep<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="namespacemain_1a8f325d8d710f04311472b66587a6f2cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kf,<sp/>dev<sp/>=<sp/>model_states[j][ep]</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(kf)):</highlight></codeline>
<codeline lineno="144" refid="namespacemain_1aa7b4b9f440f9a9cd99899ad60f98a085" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnn<sp/>=<sp/>model_method[model_name]()</highlight></codeline>
<codeline lineno="145" refid="namespacemain_1acfa7382943ec2fc5d0d823d11b1c71da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnn.o_edge<sp/><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;top_edge&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;CrossEntropyLoss&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;res_edge&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;CrossEntropyLoss&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="146" refid="namespacemain_1aed4d57877e04ccacc49c4a380af34e0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnn.o_graph<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ntops&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;CrossEntropyLoss&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;signal&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;CrossEntropyLoss&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="147" refid="namespacemain_1a5df4ebbd331e7d9027813c07456e6636" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnn.i_node<sp/><sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;energy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;charge&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="148" refid="namespacemain_1ab388b357db67e96c484092faa8103f32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnn.i_graph<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;met&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="149" refid="namespacemain_1aa13220b81a6693a30ef1862bd1846aa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnn.device<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(x%2)</highlight></codeline>
<codeline lineno="150" refid="namespacemain_1aba3953166eeede02b11f44fa3d140a74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnn.checkpoint_path<sp/>=<sp/>mdl<sp/>+<sp/>kf[k]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_model.pt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="namespacemain_1a88f055579bdda7e325bb165342a244b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROOT/&quot;</highlight><highlight class="normal"><sp/>+<sp/>graph_name<sp/>+<sp/>graph_prefix<sp/>+<sp/>model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>j<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>ep<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>kf[k]</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana.AddModelInference(gnn,<sp/>name)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x+=1</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ana.Start()</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(selection_name):</highlight></codeline>
<codeline lineno="157" refid="namespacemain_1a0c5b8ab1603c8c5b8db5e1128a757fea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathlib.Path(pth).mkdir(parents<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>exist_ok<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(pth<sp/>+<sp/>str(i)<sp/>+</highlight><highlight class="stringliteral">&quot;.pkl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pickle.dump(selection_container[selection_name],<sp/>f)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(i,<sp/>len(ls))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>i+=1</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>del<sp/>ana</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">ana<sp/>=<sp/>Analysis()</highlight></codeline>
<codeline lineno="166"><highlight class="normal">ana.Start()</highlight></codeline>
<codeline lineno="167"><highlight class="normal">method<sp/>=<sp/>plotting_method[study]</highlight></codeline>
<codeline lineno="168"><highlight class="normal">method.figures.figure_path<sp/>=<sp/>figure_path</highlight></codeline>
<codeline lineno="169" refid="namespacemain_1a60e5d1549b9e605913a0da2e83a74c75" refkind="member"><highlight class="normal">method.figures.metalookup<sp/>=<sp/><ref refid="classmain_1_1_meta_x" kindref="compound">MetaX</ref>(ana.GetMetaData)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>study<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;topefficiency&quot;</highlight><highlight class="normal">:<sp/>method.figures.TopEfficiency(</highlight><highlight class="stringliteral">&quot;./serialized-data/&quot;</highlight><highlight class="normal"><sp/>+<sp/>mrk<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>epoch<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>kfold<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="/workspaces/AnalysisG/studies/performance/main.py"/>
  </compounddef>
</doxygen>
