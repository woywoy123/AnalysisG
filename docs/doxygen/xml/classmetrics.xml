<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmetrics" kind="class" language="C++" prot="public">
    <compoundname>metrics</compoundname>
    <basecompoundref refid="classtools" prot="public" virt="non-virtual">tools</basecompoundref>
    <basecompoundref refid="classnotification" prot="public" virt="non-virtual">notification</basecompoundref>
    <includes refid="metrics_8h" local="no">metrics.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmetrics_1ac5150617fec91b0d3de0a51ef46b676a" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string metrics::output_path</definition>
        <argsstring></argsstring>
        <name>output_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="77" column="21" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmetrics_1a528312b29510c40a161d3046d151498c" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; Color_t &gt;</type>
        <definition>const std::vector&lt;Color_t&gt; metrics::colors_h</definition>
        <argsstring></argsstring>
        <name>colors_h</name>
        <initializer>= {
            kRed, kGreen, kBlue, kCyan, 
            kViolet, kOrange, kCoffee, kAurora
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="79" column="27" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="79" bodyend="-1"/>
        <referencedby refid="classmetrics_1a60ff488f6951bae8d98bc7a03bc6e464" compoundref="mass__plots_8cxx" startline="13" endline="115">dump_mass_plots</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmetrics_1adcede726826a5825c9e302ccbcb738d2" prot="public" static="no" mutable="no">
        <type><ref refid="structsettings__t" kindref="compound">settings_t</ref></type>
        <definition>settings_t metrics::m_settings</definition>
        <argsstring></argsstring>
        <name>m_settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="84" column="20" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="84" bodyend="-1"/>
        <referencedby refid="classmetrics_1a2ed5da3a9b6c0e0e9b711afafaeed7ab" compoundref="loss__plots_8cxx" startline="229" endline="287">dump_accuracy_plots</referencedby>
        <referencedby refid="classmetrics_1a85ac60407efe672dd1ba1c067a06afb2" compoundref="loss__plots_8cxx" startline="75" endline="132">dump_loss_plots</referencedby>
        <referencedby refid="classmetrics_1a60ff488f6951bae8d98bc7a03bc6e464" compoundref="mass__plots_8cxx" startline="13" endline="115">dump_mass_plots</referencedby>
        <referencedby refid="classmetrics_1a8a0b4107864ac5f548ed37a9a4a9372f" compoundref="metrics_8cxx" startline="103" endline="109">dump_plots</referencedby>
        <referencedby refid="classmetrics_1a32427b13b7d56f6243741c03ae24288f" compoundref="metrics_8cxx" startline="28" endline="50">register_model</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmetrics_1a99053e685c7105bab36cbf27aa8a5c49" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, <ref refid="structanalytics__t" kindref="compound">analytics_t</ref> &gt;</type>
        <definition>std::map&lt;int, analytics_t&gt; metrics::registry</definition>
        <argsstring></argsstring>
        <name>registry</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="139" column="18" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmetrics_1a892a58bc2b30e568322f23aed6269ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>metrics::metrics</definition>
        <argsstring>()</argsstring>
        <name>metrics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="74" column="9" bodyfile="modules/metrics/cxx/metrics.cxx" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1ac69829ae7879a362cb76ebd4418764d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>metrics::~metrics</definition>
        <argsstring>()</argsstring>
        <name>~metrics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="75" column="9" bodyfile="modules/metrics/cxx/metrics.cxx" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1a8a0b4107864ac5f548ed37a9a4a9372f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::dump_plots</definition>
        <argsstring>(int k)</argsstring>
        <name>dump_plots</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="86" column="14" bodyfile="modules/metrics/cxx/metrics.cxx" bodystart="103" bodyend="109"/>
        <references refid="classmetrics_1a2ed5da3a9b6c0e0e9b711afafaeed7ab" compoundref="loss__plots_8cxx" startline="229" endline="287">dump_accuracy_plots</references>
        <references refid="classmetrics_1a85ac60407efe672dd1ba1c067a06afb2" compoundref="loss__plots_8cxx" startline="75" endline="132">dump_loss_plots</references>
        <references refid="classmetrics_1a60ff488f6951bae8d98bc7a03bc6e464" compoundref="mass__plots_8cxx" startline="13" endline="115">dump_mass_plots</references>
        <references refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" compoundref="metrics_8h" startline="84">m_settings</references>
        <references refid="structsettings__t_1a235f1da734eb8851bd798d74d417ec7d" compoundref="settings_8h" startline="166">settings_t::targets</references>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1a85ac60407efe672dd1ba1c067a06afb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::dump_loss_plots</definition>
        <argsstring>(int k)</argsstring>
        <name>dump_loss_plots</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="87" column="14" bodyfile="modules/metrics/cxx/loss_plots.cxx" bodystart="75" bodyend="132"/>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277">evaluation</references>
        <references refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" compoundref="metrics_8h" startline="84">m_settings</references>
        <references refid="structsettings__t_1adfb471fcc454bdfb97309137a9c75d9e" compoundref="settings_8h" startline="30">settings_t::output_path</references>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0">validation</references>
        <referencedby refid="classmetrics_1a8a0b4107864ac5f548ed37a9a4a9372f" compoundref="metrics_8cxx" startline="103" endline="109">dump_plots</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1a2ed5da3a9b6c0e0e9b711afafaeed7ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::dump_accuracy_plots</definition>
        <argsstring>(int k)</argsstring>
        <name>dump_accuracy_plots</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="88" column="14" bodyfile="modules/metrics/cxx/loss_plots.cxx" bodystart="229" bodyend="287"/>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277">evaluation</references>
        <references refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" compoundref="metrics_8h" startline="84">m_settings</references>
        <references refid="structsettings__t_1adfb471fcc454bdfb97309137a9c75d9e" compoundref="settings_8h" startline="30">settings_t::output_path</references>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0">validation</references>
        <referencedby refid="classmetrics_1a8a0b4107864ac5f548ed37a9a4a9372f" compoundref="metrics_8cxx" startline="103" endline="109">dump_plots</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1a60ff488f6951bae8d98bc7a03bc6e464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::dump_mass_plots</definition>
        <argsstring>(int k)</argsstring>
        <name>dump_mass_plots</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Dumps mass plots for a given k-fold. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="89" column="14" bodyfile="modules/metrics/cxx/mass_plots.cxx" bodystart="13" bodyend="115"/>
        <references refid="classmetrics_1a528312b29510c40a161d3046d151498c" compoundref="metrics_8h" startline="79">colors_h</references>
        <references refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" compoundref="tools_2cxx_2io_8cxx" startline="6" endline="16">tools::create_path</references>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277">evaluation</references>
        <references refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" compoundref="metrics_8h" startline="84">m_settings</references>
        <references refid="structsettings__t_1a1bb7bcd7803eafb1da81844bb1c99b59" compoundref="settings_8h" startline="184">settings_t::max_range</references>
        <references refid="structsettings__t_1a1c59290b131395e78ca09ee55829bc91" compoundref="settings_8h" startline="172">settings_t::nbins</references>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0">validation</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classmetrics_1a8a0b4107864ac5f548ed37a9a4a9372f" compoundref="metrics_8cxx" startline="103" endline="109">dump_plots</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1a32427b13b7d56f6243741c03ae24288f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodel__report" kindref="compound">model_report</ref> *</type>
        <definition>model_report * metrics::register_model</definition>
        <argsstring>(model_template *model, int kfold)</argsstring>
        <name>register_model</name>
        <param>
          <type><ref refid="classmodel__template" kindref="compound">model_template</ref> *</type>
          <declname>model</declname>
          <defname>mod</defname>
        </param>
        <param>
          <type>int</type>
          <declname>kfold</declname>
        </param>
        <briefdescription>
<para>Registers a model and initializes its metrics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the model template. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kfold</parametername>
</parameternamelist>
<parameterdescription>
<para>The k-fold index for cross-validation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the model report. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="91" column="22" bodyfile="modules/metrics/cxx/metrics.cxx" bodystart="28" bodyend="50"/>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe">data_edge</references>
        <references refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" compoundref="performance_2main_8py" startline="65">main.kfold</references>
        <references refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" compoundref="metrics_8h" startline="84">m_settings</references>
        <references refid="structsettings__t_1adfb471fcc454bdfb97309137a9c75d9e" compoundref="settings_8h" startline="30">settings_t::output_path</references>
        <references refid="structsettings__t_1a48599c1af0e6a91c4ded28d191f17981" compoundref="settings_8h" startline="36">settings_t::run_name</references>
        <references refid="structsettings__t_1a235f1da734eb8851bd798d74d417ec7d" compoundref="settings_8h" startline="166">settings_t::targets</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00">truth_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587">truth_graph</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5">truth_node</references>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1a24531660bf7917f489a6b67ceed12cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::capture</definition>
        <argsstring>(mode_enum, int kfold, int epoch, int smpl_len)</argsstring>
        <name>capture</name>
        <param>
          <type><ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref></type>
          <defname>mode</defname>
        </param>
        <param>
          <type>int</type>
          <declname>kfold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>epoch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>smpl_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="92" column="14" bodyfile="modules/metrics/cxx/metrics.cxx" bodystart="52" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmetrics_1a8365c61126ecf87ceac9a9ba2420deb6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::build_th1f_loss</definition>
        <argsstring>(std::map&lt; std::string, std::tuple&lt; torch::Tensor *, loss_enum &gt;&gt; *type, graph_enum g_num, int kfold)</argsstring>
        <name>build_th1f_loss</name>
        <param>
          <type>std::map&lt; std::string, std::tuple&lt; torch::Tensor *, <ref refid="enums_8h_1a2a4ec8e1c0c344aaecca227c72c2eeb4" kindref="member">loss_enum</ref> &gt;&gt; *</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref></type>
          <declname>g_num</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kfold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="95" column="14" bodyfile="modules/metrics/cxx/loss_plots.cxx" bodystart="146" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1afe3d20f0b957925248182a792411333b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::add_th1f_loss</definition>
        <argsstring>(std::map&lt; std::string, torch::Tensor &gt; *type, std::map&lt; std::string, TH1F * &gt; *lss_type, int kfold, int smpl_len)</argsstring>
        <name>add_th1f_loss</name>
        <param>
          <type>std::map&lt; std::string, torch::Tensor &gt; *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, TH1F * &gt; *</type>
          <declname>lss_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kfold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>smpl_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="100" column="14" bodyfile="modules/metrics/cxx/loss_plots.cxx" bodystart="134" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1ac33c8ac6fdb6340eb34992a046d49acf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::build_th1f_accuracy</definition>
        <argsstring>(std::map&lt; std::string, std::tuple&lt; torch::Tensor *, loss_enum &gt;&gt; *type, graph_enum g_num, int kfold)</argsstring>
        <name>build_th1f_accuracy</name>
        <param>
          <type>std::map&lt; std::string, std::tuple&lt; torch::Tensor *, <ref refid="enums_8h_1a2a4ec8e1c0c344aaecca227c72c2eeb4" kindref="member">loss_enum</ref> &gt;&gt; *</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref></type>
          <declname>g_num</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kfold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="106" column="14" bodyfile="modules/metrics/cxx/loss_plots.cxx" bodystart="181" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1a15f20f34714224f09f44cf520ca6f271" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::add_th1f_accuracy</definition>
        <argsstring>(torch::Tensor *pred, torch::Tensor *truth, TH1F *hist, int kfold, int smpl_len)</argsstring>
        <name>add_th1f_accuracy</name>
        <param>
          <type>torch::Tensor *</type>
          <declname>pred</declname>
        </param>
        <param>
          <type>torch::Tensor *</type>
          <declname>truth</declname>
        </param>
        <param>
          <type>TH1F *</type>
          <declname>hist</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kfold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>smpl_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="112" column="14" bodyfile="modules/metrics/cxx/loss_plots.cxx" bodystart="220" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1abe2e54c2a72ecc01c03db7ed3c9704b3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::build_th1f_mass</definition>
        <argsstring>(std::string var_name, graph_enum typ, int kfold)</argsstring>
        <name>build_th1f_mass</name>
        <param>
          <type>std::string</type>
          <declname>var_name</declname>
        </param>
        <param>
          <type><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref></type>
          <declname>typ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kfold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="118" column="14" bodyfile="modules/metrics/cxx/mass_plots.cxx" bodystart="117" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1adb34703cb499689522741aa2ceed61e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::add_th1f_mass</definition>
        <argsstring>(torch::Tensor *pmc, torch::Tensor *edge_index, torch::Tensor *truth, torch::Tensor *pred, int kfold, mode_enum mode, std::string var_name)</argsstring>
        <name>add_th1f_mass</name>
        <param>
          <type>torch::Tensor *</type>
          <declname>pmc</declname>
        </param>
        <param>
          <type>torch::Tensor *</type>
          <declname>edge_index</declname>
        </param>
        <param>
          <type>torch::Tensor *</type>
          <declname>truth</declname>
        </param>
        <param>
          <type>torch::Tensor *</type>
          <declname>pred</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kfold</declname>
        </param>
        <param>
          <type><ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>var_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="119" column="14" bodyfile="modules/metrics/cxx/mass_plots.cxx" bodystart="143" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1a160fdefa51ba1fd2135307d3722acc1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metrics::generic_painter</definition>
        <argsstring>(std::vector&lt; TGraph * &gt; k_graphs, std::string path, std::string title, std::string xtitle, std::string ytitle, int epoch)</argsstring>
        <name>generic_painter</name>
        <param>
          <type>std::vector&lt; TGraph * &gt;</type>
          <declname>k_graphs</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>xtitle</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>ytitle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="126" column="14" bodyfile="modules/metrics/cxx/loss_plots.cxx" bodystart="3" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmetrics_1a7162cd61c9bc558f153702b080607b9e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, std::vector&lt; TGraph * &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::vector&lt; TGraph * &gt; &gt; metrics::build_graphs</definition>
        <argsstring>(std::map&lt; std::string, TH1F * &gt; *train, std::map&lt; std::string, float &gt; *tr_, std::map&lt; std::string, TH1F * &gt; *valid, std::map&lt; std::string, float &gt; *va_, std::map&lt; std::string, TH1F * &gt; *eval, std::map&lt; std::string, float &gt; *ev_, int ep)</argsstring>
        <name>build_graphs</name>
        <param>
          <type>std::map&lt; std::string, TH1F * &gt; *</type>
          <declname>train</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, float &gt; *</type>
          <declname>tr_</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, TH1F * &gt; *</type>
          <declname>valid</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, float &gt; *</type>
          <declname>va_</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, TH1F * &gt; *</type>
          <declname>eval</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, float &gt; *</type>
          <declname>ev_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="132" column="18" bodyfile="modules/metrics/cxx/loss_plots.cxx" bodystart="46" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>metrics</label>
        <link refid="classmetrics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>notification</label>
        <link refid="classnotification"/>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>std::vector&lt; Color_t &gt;</label>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; Color_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>T</label>
      </node>
      <node id="7">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>metrics</label>
        <link refid="classmetrics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>colors_h</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_settings</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>output_path</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="11">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="4" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; int &gt;</label>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>settings_t</label>
        <link refid="structsettings__t"/>
        <childnode refid="4" relation="usage">
          <edgelabel>graph_cache</edgelabel>
          <edgelabel>output_path</edgelabel>
          <edgelabel>metacache_path</edgelabel>
          <edgelabel>run_name</edgelabel>
          <edgelabel>var_eta</edgelabel>
          <edgelabel>training_dataset</edgelabel>
          <edgelabel>sow_name</edgelabel>
          <edgelabel>var_phi</edgelabel>
          <edgelabel>var_pt</edgelabel>
          <edgelabel>var_energy</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>kfold</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>targets</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/metrics/include/metrics/metrics.h" line="72" column="1" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="69" bodyend="141"/>
    <listofallmembers>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>metrics</scope><name>absolute_path</name></member>
      <member refid="classmetrics_1a15f20f34714224f09f44cf520ca6f271" prot="private" virt="non-virtual"><scope>metrics</scope><name>add_th1f_accuracy</name></member>
      <member refid="classmetrics_1afe3d20f0b957925248182a792411333b" prot="private" virt="non-virtual"><scope>metrics</scope><name>add_th1f_loss</name></member>
      <member refid="classmetrics_1adb34703cb499689522741aa2ceed61e3" prot="private" virt="non-virtual"><scope>metrics</scope><name>add_th1f_mass</name></member>
      <member refid="classmetrics_1a7162cd61c9bc558f153702b080607b9e" prot="private" virt="non-virtual"><scope>metrics</scope><name>build_graphs</name></member>
      <member refid="classmetrics_1ac33c8ac6fdb6340eb34992a046d49acf" prot="private" virt="non-virtual"><scope>metrics</scope><name>build_th1f_accuracy</name></member>
      <member refid="classmetrics_1a8365c61126ecf87ceac9a9ba2420deb6" prot="private" virt="non-virtual"><scope>metrics</scope><name>build_th1f_loss</name></member>
      <member refid="classmetrics_1abe2e54c2a72ecc01c03db7ed3c9704b3" prot="private" virt="non-virtual"><scope>metrics</scope><name>build_th1f_mass</name></member>
      <member refid="classmetrics_1a24531660bf7917f489a6b67ceed12cdd" prot="public" virt="non-virtual"><scope>metrics</scope><name>capture</name></member>
      <member refid="classmetrics_1a528312b29510c40a161d3046d151498c" prot="public" virt="non-virtual"><scope>metrics</scope><name>colors_h</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>metrics</scope><name>create_path</name></member>
      <member refid="classnotification_1a8dd1ebb578269118b18bf7f0e176bf14" prot="public" virt="non-virtual"><scope>metrics</scope><name>Debug</name></member>
      <member refid="classnotification_1aa14ded524569ac1d7fd121c161a733be" prot="protected" virt="non-virtual"><scope>metrics</scope><name>debug_mode</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>metrics</scope><name>delete_path</name></member>
      <member refid="classmetrics_1a2ed5da3a9b6c0e0e9b711afafaeed7ab" prot="public" virt="non-virtual"><scope>metrics</scope><name>dump_accuracy_plots</name></member>
      <member refid="classmetrics_1a85ac60407efe672dd1ba1c067a06afb2" prot="public" virt="non-virtual"><scope>metrics</scope><name>dump_loss_plots</name></member>
      <member refid="classmetrics_1a60ff488f6951bae8d98bc7a03bc6e464" prot="public" virt="non-virtual"><scope>metrics</scope><name>dump_mass_plots</name></member>
      <member refid="classmetrics_1a8a0b4107864ac5f548ed37a9a4a9372f" prot="public" virt="non-virtual"><scope>metrics</scope><name>dump_plots</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>metrics</scope><name>ends_with</name></member>
      <member refid="classnotification_1ab0c3843575c157d799e532a9ea5acbd0" prot="public" virt="non-virtual"><scope>metrics</scope><name>Error</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>metrics</scope><name>extract</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>metrics</scope><name>flush</name></member>
      <member refid="classmetrics_1a160fdefa51ba1fd2135307d3722acc1d" prot="private" virt="non-virtual"><scope>metrics</scope><name>generic_painter</name></member>
      <member refid="classnotification_1ae25782afd10b3cb5fffe17afaf4fffc0" prot="public" virt="non-virtual"><scope>metrics</scope><name>get_debug_mode</name></member>
      <member refid="classnotification_1aa0aad214cf167691e516ecc343306244" prot="public" virt="non-virtual"><scope>metrics</scope><name>get_prefix</name></member>
      <member refid="classnotification_1a3a12e8eaf363a320abee5393436123f0" prot="public" virt="non-virtual"><scope>metrics</scope><name>get_suppress_info</name></member>
      <member refid="classnotification_1ab53313e9343e9ef6deaefa2bdd3a837a" prot="public" virt="non-virtual"><scope>metrics</scope><name>get_suppress_warning</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>metrics</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>metrics</scope><name>has_value</name></member>
      <member refid="classnotification_1a2ea9e0828e3d323b5bb5cdecc8f018a8" prot="public" virt="non-virtual"><scope>metrics</scope><name>Info</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>metrics</scope><name>is_file</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>metrics</scope><name>ls</name></member>
      <member refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" prot="public" virt="non-virtual"><scope>metrics</scope><name>m_settings</name></member>
      <member refid="classnotification_1a47e2d300e33c44a24b0c51d9e9a83914" prot="public" virt="non-virtual"><scope>metrics</scope><name>Message</name></member>
      <member refid="classmetrics_1a892a58bc2b30e568322f23aed6269ca5" prot="public" virt="non-virtual"><scope>metrics</scope><name>metrics</name></member>
      <member refid="classnotification_1a3ec5fe2d8db29cf32853858ff58fdbd7" prot="public" virt="non-virtual"><scope>metrics</scope><name>notification</name></member>
      <member refid="classmetrics_1ac5150617fec91b0d3de0a51ef46b676a" prot="public" virt="non-virtual"><scope>metrics</scope><name>output_path</name></member>
      <member refid="classnotification_1a913d4c8a7736df782f900dd436cfeaa6" prot="protected" virt="non-virtual"><scope>metrics</scope><name>prefix</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>metrics</scope><name>put</name></member>
      <member refid="classmetrics_1a32427b13b7d56f6243741c03ae24288f" prot="public" virt="non-virtual"><scope>metrics</scope><name>register_model</name></member>
      <member refid="classmetrics_1a99053e685c7105bab36cbf27aa8a5c49" prot="private" virt="non-virtual"><scope>metrics</scope><name>registry</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>metrics</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>metrics</scope><name>replace</name></member>
      <member refid="classnotification_1a5a69a50032f5dcf38bed2bb27dc048fc" prot="public" virt="non-virtual"><scope>metrics</scope><name>set_debug_mode</name></member>
      <member refid="classnotification_1a575db6b2e3b67a7d679205600d83b576" prot="public" virt="non-virtual"><scope>metrics</scope><name>set_prefix</name></member>
      <member refid="classnotification_1a58eec7023935cff9332ce21e58fc3f5a" prot="public" virt="non-virtual"><scope>metrics</scope><name>set_suppress_info</name></member>
      <member refid="classnotification_1a9bb77ba73a5f25af292e9eea8a8de970" prot="public" virt="non-virtual"><scope>metrics</scope><name>set_suppress_warning</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>metrics</scope><name>split</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual"><scope>metrics</scope><name>sum</name></member>
      <member refid="classnotification_1a77a99c28092cf053b395805c75dde6da" prot="protected" virt="non-virtual"><scope>metrics</scope><name>suppress_info</name></member>
      <member refid="classnotification_1ab2d4ba20d7bc164eece8982b413eab13" prot="protected" virt="non-virtual"><scope>metrics</scope><name>suppress_warnings</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>metrics</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>metrics</scope><name>to_string</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>metrics</scope><name>tools</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>metrics</scope><name>trim</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>metrics</scope><name>type_name</name></member>
      <member refid="classnotification_1ab758dafbb449e142fb68e11c0470b5c9" prot="public" virt="non-virtual"><scope>metrics</scope><name>Warning</name></member>
      <member refid="classmetrics_1ac69829ae7879a362cb76ebd4418764d3" prot="public" virt="non-virtual"><scope>metrics</scope><name>~metrics</name></member>
      <member refid="classnotification_1a0b7272463b149418caf592e398cae64e" prot="public" virt="non-virtual"><scope>metrics</scope><name>~notification</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>metrics</scope><name>~tools</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
