<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="pyc_2physics_2physics_8cxx" kind="file" language="C++">
    <compoundname>pyc/physics/physics.cxx</compoundname>
    <includes refid="physics_8h" local="no">physics/physics.h</includes>
    <includes refid="utils_8h" local="no">utils/utils.h</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>physics/physics.h</label>
        <link refid="physics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>utils/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>physics.cxx</label>
        <link refid="pyc_2physics_2physics_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="3">
        <label>torch/torch.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="physics_8h" kindref="compound">physics/physics.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="utils_8h" kindref="compound">utils/utils.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="namespacephysics___1a04d5875bbb80e829852070706190d8ee" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1ae22e22a969315629a6ae7549f7344805" kindref="member">physics_::P2</ref>(torch::Tensor*<sp/>pmc){</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pmc_<sp/>=<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref><sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(0,<sp/>3)});<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>pmc_<sp/>=<sp/>pmc_.pow(2);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>pmc_<sp/>=<sp/>pmc_.sum({-1});<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmc_.view({-1,<sp/>1});<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespacephysics___1ae22e22a969315629a6ae7549f7344805" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1ae22e22a969315629a6ae7549f7344805" kindref="member">physics_::P2</ref>(torch::Tensor*<sp/>px,<sp/>torch::Tensor*<sp/>py,<sp/>torch::Tensor*<sp/>pz){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;torch::Tensor&gt;<sp/>v<sp/>=<sp/>{*px,<sp/>*py,<sp/>*pz};<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pmx<sp/>=<sp/><ref refid="utils_8h_1a9c1cdc6384bce6bdc92ca917b3f656bf" kindref="member">format</ref>(&amp;v);<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacephysics___1ae22e22a969315629a6ae7549f7344805" kindref="member">physics_::P2</ref>(&amp;pmx);<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespacephysics___1ab5a156a8862434e86693193360d27847" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1ac12a78b1943348345b940e510930f420" kindref="member">physics_::P</ref>(torch::Tensor*<sp/>pmc){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::sqrt(<ref refid="namespacephysics___1ae22e22a969315629a6ae7549f7344805" kindref="member">physics_::P2</ref>(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref>));</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespacephysics___1ac12a78b1943348345b940e510930f420" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1ac12a78b1943348345b940e510930f420" kindref="member">physics_::P</ref>(torch::Tensor*<sp/>px,<sp/>torch::Tensor*<sp/>py,<sp/>torch::Tensor*<sp/>pz){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pmx<sp/>=<sp/><ref refid="utils_8h_1a9c1cdc6384bce6bdc92ca917b3f656bf" kindref="member">format</ref>({px,<sp/>py,<sp/>pz});<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacephysics___1ac12a78b1943348345b940e510930f420" kindref="member">physics_::P</ref>(&amp;pmx);<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespacephysics___1a5b55715f9b9c607241139bf3541b03ab" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1aace12d6d7317cd102e5059781d724151" kindref="member">physics_::Beta2</ref>(torch::Tensor*<sp/>pmc){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref><sp/>=<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref><sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(3,<sp/>4)});</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacephysics___1ae22e22a969315629a6ae7549f7344805" kindref="member">physics_::P2</ref>(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref>)/(<ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>.pow(2));<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespacephysics___1aace12d6d7317cd102e5059781d724151" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1aace12d6d7317cd102e5059781d724151" kindref="member">physics_::Beta2</ref>(torch::Tensor*<sp/>px,<sp/>torch::Tensor*<sp/>py,<sp/>torch::Tensor*<sp/>pz,<sp/>torch::Tensor*<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pmx<sp/>=<sp/><ref refid="utils_8h_1a9c1cdc6384bce6bdc92ca917b3f656bf" kindref="member">format</ref>({px,<sp/>py,<sp/>pz,<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>});<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacephysics___1aace12d6d7317cd102e5059781d724151" kindref="member">physics_::Beta2</ref>(&amp;pmx);<sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespacephysics___1a9ea85f47a64c014bc999d9c2015fec4f" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a3123f743b9c22850e7346d5f56a4441b" kindref="member">physics_::Beta</ref>(torch::Tensor*<sp/>pmc){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacephysics___1ac12a78b1943348345b940e510930f420" kindref="member">physics_::P</ref>(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref>)/<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref><sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(3,<sp/>4)});<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespacephysics___1a3123f743b9c22850e7346d5f56a4441b" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a3123f743b9c22850e7346d5f56a4441b" kindref="member">physics_::Beta</ref>(torch::Tensor*<sp/>px,<sp/>torch::Tensor*<sp/>py,<sp/>torch::Tensor*<sp/>pz,<sp/>torch::Tensor*<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>){</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pmx<sp/>=<sp/><ref refid="utils_8h_1a9c1cdc6384bce6bdc92ca917b3f656bf" kindref="member">format</ref>({px,<sp/>py,<sp/>pz,<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>});<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacephysics___1a3123f743b9c22850e7346d5f56a4441b" kindref="member">physics_::Beta</ref>(&amp;pmx);<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespacephysics___1a941b75f458038a6d86dc28328606999c" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a7787594305d4a156c31be581401b0b0b" kindref="member">physics_::M2</ref>(torch::Tensor*<sp/>pmc){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>=<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref><sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(3,<sp/>4)});<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>=<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref>.pow(2);<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>-=<sp/><ref refid="namespacephysics___1ae22e22a969315629a6ae7549f7344805" kindref="member">physics_::P2</ref>(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref>);<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespacephysics___1a7787594305d4a156c31be581401b0b0b" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a7787594305d4a156c31be581401b0b0b" kindref="member">physics_::M2</ref>(torch::Tensor*<sp/>px,<sp/>torch::Tensor*<sp/>py,<sp/>torch::Tensor*<sp/>pz,<sp/>torch::Tensor*<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pmx<sp/>=<sp/><ref refid="utils_8h_1a9c1cdc6384bce6bdc92ca917b3f656bf" kindref="member">format</ref>({px,<sp/>py,<sp/>pz,<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>});<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacephysics___1a7787594305d4a156c31be581401b0b0b" kindref="member">physics_::M2</ref>(&amp;pmx);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespacephysics___1a87db235f0b9b1b2a8c3696b4b7d4c009" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a64e8e583c57246f52851c0bff4137ebc" kindref="member">physics_::M</ref>(torch::Tensor*<sp/>pmc){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>mass2<sp/>=<sp/><ref refid="namespacephysics___1a7787594305d4a156c31be581401b0b0b" kindref="member">physics_::M2</ref>(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1<sp/>-<sp/>2*(mass2<sp/>&lt;<sp/>0))*torch::sqrt(torch::abs(mass2));</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="namespacephysics___1a64e8e583c57246f52851c0bff4137ebc" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a64e8e583c57246f52851c0bff4137ebc" kindref="member">physics_::M</ref>(torch::Tensor*<sp/>px,<sp/>torch::Tensor*<sp/>py,<sp/>torch::Tensor*<sp/>pz,<sp/>torch::Tensor*<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pmx<sp/>=<sp/><ref refid="utils_8h_1a9c1cdc6384bce6bdc92ca917b3f656bf" kindref="member">format</ref>({px,<sp/>py,<sp/>pz,<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>});<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacephysics___1a64e8e583c57246f52851c0bff4137ebc" kindref="member">physics_::M</ref>(&amp;pmx);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="namespacephysics___1aa8aaa93322dec33a8159a197da3e8e62" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a3d421991e1f29e21ba3d495c6ae6c93d" kindref="member">physics_::Mt2</ref>(torch::Tensor*<sp/>pmc){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pz<sp/>=<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref><sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(2,<sp/>3)});<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref><sp/><sp/>=<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref><sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(3,<sp/>4)});<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>.pow(2)<sp/>-<sp/>pz.pow(2)).view({-1,<sp/>1});<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="namespacephysics___1a3d421991e1f29e21ba3d495c6ae6c93d" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a3d421991e1f29e21ba3d495c6ae6c93d" kindref="member">physics_::Mt2</ref>(torch::Tensor*<sp/>pz,<sp/>torch::Tensor*<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref><sp/>-&gt;<sp/>pow(2)<sp/>-<sp/>pz<sp/>-&gt;<sp/>pow(2)).view({-1,<sp/>1});<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="namespacephysics___1a82a8f3ce685f324e52dfea55d33fff03" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1af5fecf9c76889e0e996dc44793e67153" kindref="member">physics_::Mt</ref>(torch::Tensor*<sp/>pmc){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>mt<sp/>=<sp/><ref refid="namespacephysics___1a3d421991e1f29e21ba3d495c6ae6c93d" kindref="member">physics_::Mt2</ref>(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref>);<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1<sp/>-<sp/>2*(mt<sp/>&lt;<sp/>0))*torch::sqrt(torch::abs(mt));<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="namespacephysics___1af5fecf9c76889e0e996dc44793e67153" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1af5fecf9c76889e0e996dc44793e67153" kindref="member">physics_::Mt</ref>(torch::Tensor*<sp/>pz,<sp/>torch::Tensor*<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>mt<sp/>=<sp/><ref refid="namespacephysics___1a3d421991e1f29e21ba3d495c6ae6c93d" kindref="member">physics_::Mt2</ref>(pz,<sp/><ref refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" kindref="member">e</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(1<sp/>-<sp/>2*(mt<sp/>&lt;<sp/>0))*torch::sqrt(torch::abs(mt));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="namespacephysics___1a6d323b672a05eb19edce0b4d818bdb7f" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a6d323b672a05eb19edce0b4d818bdb7f" kindref="member">physics_::Theta</ref>(torch::Tensor*<sp/>pmc){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pz<sp/>=<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref><sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(2,<sp/>3)});<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::acos(<sp/>pz<sp/>/<sp/><ref refid="namespacephysics___1ac12a78b1943348345b940e510930f420" kindref="member">physics_::P</ref>(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56" kindref="member">pmc</ref>));<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="namespacephysics___1a6e76ad80e9f8bade6a2014ecb7580a76" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a6d323b672a05eb19edce0b4d818bdb7f" kindref="member">physics_::Theta</ref>(torch::Tensor*<sp/>px,<sp/>torch::Tensor*<sp/>py,<sp/>torch::Tensor*<sp/>pz){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pmx<sp/>=<sp/><ref refid="utils_8h_1a9c1cdc6384bce6bdc92ca917b3f656bf" kindref="member">format</ref>({px,<sp/>py,<sp/>pz});<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::acos(<sp/>pz<sp/>-&gt;<sp/>view({-1,<sp/>1})<sp/>/<sp/><ref refid="namespacephysics___1ac12a78b1943348345b940e510930f420" kindref="member">physics_::P</ref>(&amp;pmx)<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="namespacephysics___1a5f66fa5ca30082509e1284fbcb4b25be" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a5f66fa5ca30082509e1284fbcb4b25be" kindref="member">physics_::DeltaR</ref>(torch::Tensor*<sp/>pmu1,<sp/>torch::Tensor*<sp/>pmu2){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>eta1<sp/>=<sp/>pmu1<sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(1,<sp/>2)});<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>eta2<sp/>=<sp/>pmu2<sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(1,<sp/>2)});<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>phi1<sp/>=<sp/>pmu1<sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(2,<sp/>3)});<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>phi2<sp/>=<sp/>pmu2<sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>torch::indexing::Slice(2,<sp/>3)});<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacephysics___1a5f66fa5ca30082509e1284fbcb4b25be" kindref="member">physics_::DeltaR</ref>(&amp;eta1,<sp/>&amp;eta2,<sp/>&amp;phi1,<sp/>&amp;phi2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="namespacephysics___1af00266daeb6a7b5387326943d136eb57" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespacephysics___1a5f66fa5ca30082509e1284fbcb4b25be" kindref="member">physics_::DeltaR</ref>(torch::Tensor*<sp/>eta1,<sp/>torch::Tensor*<sp/>eta2,<sp/>torch::Tensor*<sp/>phi1,<sp/>torch::Tensor*<sp/>phi2){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>d_eta<sp/>=<sp/>(*eta1)<sp/>-<sp/>(*eta2);<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>d_phi<sp/>=<sp/>(*phi1)<sp/>-<sp/>(*phi2);<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pi<sp/>=<sp/>M_PI*torch::ones_like(d_eta);<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>d_phi<sp/>=<sp/>pi<sp/>-<sp/>torch::abs(torch::fmod(torch::abs(d_phi),<sp/>2*pi)<sp/>-<sp/>pi);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::sqrt(d_eta.pow(2)<sp/>+<sp/>d_phi.pow(2));<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="pyc/physics/physics.cxx"/>
  </compounddef>
</doxygen>
