<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="neutrino_2helper_8py" kind="file" language="Python">
    <compoundname>neutrino/helper.py</compoundname>
    <innernamespace refid="namespacehelper">helper</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>classes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>atomic,<sp/>Container</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>tqdm<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tqdm</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>nusol<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Process</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pathlib</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>gc</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespacehelper_1a25eb34bd07137c02434c8f7f353b751f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1a25eb34bd07137c02434c8f7f353b751f" kindref="member">build_samples</ref>(pth,<sp/>pattern):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[str(i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pathlib.Path(pth).glob(pattern)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>str(i).endswith(</highlight><highlight class="stringliteral">&quot;.pkl&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespacehelper_1a08ead3aca58b78c271e428072ba58d4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1a08ead3aca58b78c271e428072ba58d4e" kindref="member">chi2</ref>(t,<sp/>r):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((t.px<sp/>-<sp/>r.px)**2<sp/>+<sp/>(t.py<sp/>-<sp/>r.py)**2<sp/>+<sp/>(t.pz<sp/>-<sp/>r.pz)**2)*(1.0<sp/>/<sp/>1000.0)**2</highlight></codeline>
<codeline lineno="12" refid="namespacehelper_1acf2d9d11f58e1812d4a781a923b8df36" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1acf2d9d11f58e1812d4a781a923b8df36" kindref="member">get_masses</ref>(nu,<sp/>b,<sp/>lep):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((nu<sp/>+<sp/>b<sp/>+<sp/>lep).Mass,<sp/>(nu<sp/>+<sp/>lep).Mass)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nu<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>(-1,<sp/>-1)</highlight></codeline>
<codeline lineno="13" refid="namespacehelper_1aa66e4f18412a16d4c494aa6d5add0c92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1aa66e4f18412a16d4c494aa6d5add0c92" kindref="member">get_static</ref>(ev,<sp/>name):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_best(ev.TruthNeutrinos,<sp/>ev.StaticNeutrino[name])</highlight></codeline>
<codeline lineno="14" refid="namespacehelper_1a26ac568b4a822d1213047b4e03cf87be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1a26ac568b4a822d1213047b4e03cf87be" kindref="member">get_dynamic</ref>(ev,<sp/>name):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_best(ev.TruthNeutrinos,<sp/>ev.DynamicNeutrino[name])</highlight></codeline>
<codeline lineno="15" refid="namespacehelper_1a791f75e8bc3e9b06a9d7caed0ccb686e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1a791f75e8bc3e9b06a9d7caed0ccb686e" kindref="member">get_pairs</ref>(ev,<sp/>name,<sp/>ix):<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>px<sp/>=<sp/>ev.Particles[name]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>len(px[0]):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[k<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>px[ix]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>k.is_lep][0],<sp/>[k<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>px[ix]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>k.is_b][0]</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="namespacehelper_1a645d6ae76de83def2d6d406154e0dde1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1a645d6ae76de83def2d6d406154e0dde1" kindref="member">get_best</ref>(tnus,<sp/>rnus):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>len(rnus[0]):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(rnus[0])):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2_1<sp/>=<sp/><ref refid="namespacehelper_1a08ead3aca58b78c271e428072ba58d4e" kindref="member">chi2</ref>(tnus[0],<sp/>rnus[0][i])</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi2_2<sp/>=<sp/><ref refid="namespacehelper_1a08ead3aca58b78c271e428072ba58d4e" kindref="member">chi2</ref>(tnus[1],<sp/>rnus[1][i])</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnus[0][i].chi2<sp/>=<sp/>chi2_1</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnus[1][i].chi2<sp/>=<sp/>chi2_2</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[chi2_1<sp/>+<sp/>chi2_2]<sp/>=<sp/>[rnus[0][i],<sp/>rnus[1][i]]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out[sorted(out)[0]]</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespacehelper_1a4a2c74bb11174d786d65e73a6866a72c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1a4a2c74bb11174d786d65e73a6866a72c" kindref="member">make_types</ref>(nus,<sp/>leps,<sp/>bs):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{i<sp/>:<sp/>[nus[i],<sp/>leps[i],<sp/>bs[i]]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2)}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IndexError:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{i<sp/>:<sp/>[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2)}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">vector</ref>(inpt):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[i.vec<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inpt]</highlight></codeline>
<codeline lineno="36" refid="namespacehelper_1af26eb3db28c2ae3b1e59f4f6cd1131bc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1af26eb3db28c2ae3b1e59f4f6cd1131bc" kindref="member">MPNuNu</ref>(k):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>AnalysisG.core.tools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Tools</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>Tools().hash(str(k))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>pickle.loads(k)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(k)):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bs,<sp/>ls,<sp/>ev,<sp/>mW1,<sp/>mT1,<sp/>mW2,<sp/>mT2,<sp/>n<sp/>=<sp/>k[d]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.append([n,<sp/><ref refid="classnusol_1_1_double_nu" kindref="compound">DoubleNu</ref>(bs,<sp/>ls,<sp/>ev,<sp/>mW1,<sp/>mT1,<sp/>mW2,<sp/>mT2)])</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>pickle.dump(data,<sp/>open(</highlight><highlight class="stringliteral">&quot;./data/&quot;</highlight><highlight class="normal"><sp/>+<sp/>h<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.pkl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespacehelper_1ad0f763fc806c0d73759dfb3bdc613b1f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1ad0f763fc806c0d73759dfb3bdc613b1f" kindref="member">compiler</ref>(lx,<sp/>name,<sp/>build<sp/>=<sp/>False):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>mW<sp/>=<sp/>80.385*1000</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>mT<sp/>=<sp/>172.62*1000</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pickle.load(open(name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.pkl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/>conx<sp/>=<sp/>[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(lx))]</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>th<sp/>=<sp/>120</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>len(lx)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>runx<sp/>=<sp/>[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(th)]</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>prc<sp/>=<sp/>[[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(th)]</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ix<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tqdm(range(l*build)):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conx[ix]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>lx[ix]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>len(i.TruthNeutrinos):<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu1,<sp/>nu2<sp/>=<sp/>i.TruthNeutrinos</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-----<sp/>input<sp/>particles<sp/>-----<sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l1,<sp/>b1<sp/>=<sp/><ref refid="namespacehelper_1a791f75e8bc3e9b06a9d7caed0ccb686e" kindref="member">get_pairs</ref>(i,<sp/>name,<sp/>0)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l2,<sp/>b2<sp/>=<sp/><ref refid="namespacehelper_1a791f75e8bc3e9b06a9d7caed0ccb686e" kindref="member">get_pairs</ref>(i,<sp/>name,<sp/>1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt1,<sp/>mw1<sp/>=<sp/><ref refid="namespacehelper_1acf2d9d11f58e1812d4a781a923b8df36" kindref="member">get_masses</ref>(nu1,<sp/>b1,<sp/>l1)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt2,<sp/>mw2<sp/>=<sp/><ref refid="namespacehelper_1acf2d9d11f58e1812d4a781a923b8df36" kindref="member">get_masses</ref>(nu2,<sp/>b2,<sp/>l2)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bsx,<sp/>lsx<sp/>=<sp/><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">vector</ref>((b1,<sp/>b2)),<sp/><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">vector</ref>((l1,<sp/>l2))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-----<sp/>Static<sp/>Masses<sp/>------<sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kx1<sp/>=<sp/>(bsx,<sp/>lsx,<sp/>i.vec,<sp/>mW<sp/>,<sp/>mT<sp/>,<sp/>mW<sp/>,<sp/>mT<sp/>,<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/stat/&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(ix))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-----<sp/>Dynamic<sp/>Masses<sp/>-----<sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kx2<sp/>=<sp/>(bsx,<sp/>lsx,<sp/>i.vec,<sp/>mw1,<sp/>mt1,<sp/>mw2,<sp/>mt2,<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/dyn/&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(ix))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc[b]<sp/>+=<sp/>[kx1,<sp/>kx2]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(prc[b])<sp/>&lt;<sp/>1000:<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>Process(target=MPNuNu,<sp/>args=(pickle.dumps(prc[b]),))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1.start()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runx[b]<sp/>=<sp/>p1</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc[b]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rn<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>rn:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(runx)):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>runx[b]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/>rn<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>runx[b].is_alive():<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runx[b].join()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rn<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runx[b]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(prc)):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>len(prc[x]):<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>Process(target=MPNuNu,<sp/>args=(pickle.dumps(prc[x]),))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1.start()</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runx[x]<sp/>=<sp/>p1</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runx:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.join()</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>nex<sp/>=<sp/><ref refid="namespacehelper_1a25eb34bd07137c02434c8f7f353b751f" kindref="member">build_samples</ref>(</highlight><highlight class="stringliteral">&quot;./data&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.pkl&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nex:<sp/>data<sp/>+=<sp/>pickle.load(open(k,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>prc<sp/>=<sp/>[[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(l)]</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>data:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nx,<sp/>nus<sp/>=<sp/>i</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base,<sp/>mode,<sp/>idx<sp/>=<sp/>nx.split(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/>!=<sp/>base:<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx,<sp/>idy<sp/>=<sp/>int(idx),<sp/>(0<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;stat&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>1)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc[idx][idy]<sp/>=<sp/>nus</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>update<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ix<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tqdm(range(l)):</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>lx[ix]</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conx[ix]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>len(i.TruthNeutrinos):<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu1,<sp/>nu2<sp/>=<sp/>i.TruthNeutrinos</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-----<sp/>input<sp/>particles<sp/>-----<sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l1,<sp/>b1<sp/>=<sp/><ref refid="namespacehelper_1a791f75e8bc3e9b06a9d7caed0ccb686e" kindref="member">get_pairs</ref>(i,<sp/>name,<sp/>0)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l2,<sp/>b2<sp/>=<sp/><ref refid="namespacehelper_1a791f75e8bc3e9b06a9d7caed0ccb686e" kindref="member">get_pairs</ref>(i,<sp/>name,<sp/>1)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt1,<sp/>mw1<sp/>=<sp/><ref refid="namespacehelper_1acf2d9d11f58e1812d4a781a923b8df36" kindref="member">get_masses</ref>(nu1,<sp/>b1,<sp/>l1)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt2,<sp/>mw2<sp/>=<sp/><ref refid="namespacehelper_1acf2d9d11f58e1812d4a781a923b8df36" kindref="member">get_masses</ref>(nu2,<sp/>b2,<sp/>l2)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bsx,<sp/>lsx<sp/>=<sp/><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">vector</ref>((b1,<sp/>b2)),<sp/><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">vector</ref>((l1,<sp/>l2))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snu1_,<sp/>snu2_<sp/>=<sp/><ref refid="namespacehelper_1a645d6ae76de83def2d6d406154e0dde1" kindref="member">get_best</ref>({0<sp/>:<sp/>nu1,<sp/>1<sp/>:<sp/>nu2},<sp/>prc[ix][0].nunu_s())</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dnu1_,<sp/>dnu2_<sp/>=<sp/><ref refid="namespacehelper_1a645d6ae76de83def2d6d406154e0dde1" kindref="member">get_best</ref>({0<sp/>:<sp/>nu1,<sp/>1<sp/>:<sp/>nu2},<sp/>prc[ix][1].nunu_s())</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc[ix]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con<sp/>=<sp/><ref refid="classclasses_1_1_container" kindref="compound">Container</ref>(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehelper_1a4a2c74bb11174d786d65e73a6866a72c" kindref="member">make_types</ref>((nu1,<sp/>nu2),<sp/>(l1,<sp/>l2),<sp/>(b1,<sp/>b2)),<sp/></highlight><highlight class="comment">#<sp/>truths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehelper_1a4a2c74bb11174d786d65e73a6866a72c" kindref="member">make_types</ref>(<ref refid="namespacehelper_1a26ac568b4a822d1213047b4e03cf87be" kindref="member">get_dynamic</ref>(i,<sp/>name),<sp/>(l1,<sp/>l2),<sp/>(b1,<sp/>b2)),<sp/></highlight><highlight class="comment">#<sp/>cuda_dyn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehelper_1a4a2c74bb11174d786d65e73a6866a72c" kindref="member">make_types</ref>(<ref refid="namespacehelper_1aa66e4f18412a16d4c494aa6d5add0c92" kindref="member">get_static</ref>(i<sp/>,<sp/>name),<sp/>(l1,<sp/>l2),<sp/>(b1,<sp/>b2)),<sp/></highlight><highlight class="comment">#<sp/>cuda_static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehelper_1a4a2c74bb11174d786d65e73a6866a72c" kindref="member">make_types</ref>((dnu1_,<sp/>dnu2_),<sp/>(l1,<sp/>l2),<sp/>(b1,<sp/>b2)),<sp/></highlight><highlight class="comment">#<sp/>reference<sp/>dynamic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehelper_1a4a2c74bb11174d786d65e73a6866a72c" kindref="member">make_types</ref>((snu1_,<sp/>snu2_),<sp/>(l1,<sp/>l2),<sp/>(b1,<sp/>b2))<sp/><sp/></highlight><highlight class="comment">#<sp/>reference<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con.event_data[</highlight><highlight class="stringliteral">&quot;met&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.met</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con.event_data[</highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.phi</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conx[ix]<sp/>=<sp/>con</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc[ix]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ix<sp/>%<sp/>10000<sp/>==<sp/>9999:<sp/>pickle.dump(conx,<sp/>open(name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.pkl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>update:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conx</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>pickle.dump(conx,<sp/>open(name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.pkl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conx</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="namespacehelper_1a41ae8d2d649292f797a3a87c4778e47e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehelper_1a41ae8d2d649292f797a3a87c4778e47e" kindref="member">compxl</ref>(sl<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;topchildren&quot;</highlight><highlight class="normal"><sp/>:<sp/><ref refid="namespacehelper_1ad0f763fc806c0d73759dfb3bdc613b1f" kindref="member">compiler</ref>(sl.Events<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sl<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;top_children&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;truthjet&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacehelper_1ad0f763fc806c0d73759dfb3bdc613b1f" kindref="member">compiler</ref>(sl.Events<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sl<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;truthjet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;jetchildren&quot;</highlight><highlight class="normal"><sp/>:<sp/><ref refid="namespacehelper_1ad0f763fc806c0d73759dfb3bdc613b1f" kindref="member">compiler</ref>(sl.Events<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sl<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;jetchildren&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;jetleptons&quot;</highlight><highlight class="normal"><sp/><sp/>:<sp/><ref refid="namespacehelper_1ad0f763fc806c0d73759dfb3bdc613b1f" kindref="member">compiler</ref>(sl.Events<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sl<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;jetleptons&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/workspaces/AnalysisG/studies/neutrino/helper.py"/>
  </compounddef>
</doxygen>
