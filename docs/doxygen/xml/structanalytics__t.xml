<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structanalytics__t" kind="struct" language="C++" prot="public">
    <compoundname>analytics_t</compoundname>
    <includes refid="metrics_8h" local="no">metrics.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structanalytics__t_1a6200f21a83e471611619ee544d6cd085" prot="public" static="no" mutable="no">
        <type><ref refid="classmodel__template" kindref="compound">model_template</ref> *</type>
        <definition>model_template* analytics_t::model</definition>
        <argsstring></argsstring>
        <name>model</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="30" column="20" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1ad07d39aacd2dbd770584deee124fb2a7" prot="public" static="no" mutable="no">
        <type><ref refid="structmodel__report" kindref="compound">model_report</ref> *</type>
        <definition>model_report* analytics_t::report</definition>
        <argsstring></argsstring>
        <name>report</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="31" column="18" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="31" bodyend="-1"/>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1ab2c53ed05d0942ed096d8a6f8a44f3b8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int analytics_t::this_epoch</definition>
        <argsstring></argsstring>
        <name>this_epoch</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="33" column="9" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1aadc82622ca858c8ab006ccc96410bd61" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref>, std::map&lt; std::string, TH1F * &gt; &gt;</type>
        <definition>std::map&lt;mode_enum, std::map&lt;std::string, TH1F*&gt; &gt; analytics_t::loss_graph</definition>
        <argsstring></argsstring>
        <name>loss_graph</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="34" column="14" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="34" bodyend="-1"/>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1abce28cbd20f46203f42a7546340f0d28" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref>, std::map&lt; std::string, TH1F * &gt; &gt;</type>
        <definition>std::map&lt;mode_enum, std::map&lt;std::string, TH1F*&gt; &gt; analytics_t::loss_node</definition>
        <argsstring></argsstring>
        <name>loss_node</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="35" column="14" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1a7a5eebc303266b770661ecbca42327f5" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref>, std::map&lt; std::string, TH1F * &gt; &gt;</type>
        <definition>std::map&lt;mode_enum, std::map&lt;std::string, TH1F*&gt; &gt; analytics_t::loss_edge</definition>
        <argsstring></argsstring>
        <name>loss_edge</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="36" column="14" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="36" bodyend="-1"/>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1a38e31ec46c69e034d787775a76d69a04" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref>, std::map&lt; std::string, TH1F * &gt; &gt;</type>
        <definition>std::map&lt;mode_enum, std::map&lt;std::string, TH1F*&gt; &gt; analytics_t::accuracy_graph</definition>
        <argsstring></argsstring>
        <name>accuracy_graph</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="38" column="14" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="38" bodyend="-1"/>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1a25ffc26f099137eeaf6912d055729830" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref>, std::map&lt; std::string, TH1F * &gt; &gt;</type>
        <definition>std::map&lt;mode_enum, std::map&lt;std::string, TH1F*&gt; &gt; analytics_t::accuracy_node</definition>
        <argsstring></argsstring>
        <name>accuracy_node</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="39" column="14" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1a31e64e77a3f6ca45634d7aab52594e2e" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref>, std::map&lt; std::string, TH1F * &gt; &gt;</type>
        <definition>std::map&lt;mode_enum, std::map&lt;std::string, TH1F*&gt; &gt; analytics_t::accuracy_edge</definition>
        <argsstring></argsstring>
        <name>accuracy_edge</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="40" column="14" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="40" bodyend="-1"/>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1a20feee0b24458ca17b50e5696d8e1d4f" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref>, std::map&lt; std::string, TH1F * &gt; &gt;</type>
        <definition>std::map&lt;mode_enum, std::map&lt;std::string, TH1F*&gt; &gt; analytics_t::pred_mass_edge</definition>
        <argsstring></argsstring>
        <name>pred_mass_edge</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="42" column="14" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="42" bodyend="-1"/>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structanalytics__t_1aba2059fefda38f7328e04a35ffea7bcd" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref>, std::map&lt; std::string, TH1F * &gt; &gt;</type>
        <definition>std::map&lt;mode_enum, std::map&lt;std::string, TH1F*&gt; &gt; analytics_t::truth_mass_edge</definition>
        <argsstring></argsstring>
        <name>truth_mass_edge</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="43" column="14" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="43" bodyend="-1"/>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void analytics_t::purge</definition>
        <argsstring>()</argsstring>
        <name>purge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="45" column="10" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="45" bodyend="57"/>
        <references refid="structanalytics__t_1a31e64e77a3f6ca45634d7aab52594e2e" compoundref="metrics_8h" startline="40">accuracy_edge</references>
        <references refid="structanalytics__t_1a38e31ec46c69e034d787775a76d69a04" compoundref="metrics_8h" startline="38">accuracy_graph</references>
        <references refid="structanalytics__t_1a25ffc26f099137eeaf6912d055729830" compoundref="metrics_8h" startline="39">accuracy_node</references>
        <references refid="structanalytics__t_1a8cf1056f201348aecae5b87ab3363a18" compoundref="metrics_8h" startline="59" endline="66">destroy</references>
        <references refid="structanalytics__t_1a7a5eebc303266b770661ecbca42327f5" compoundref="metrics_8h" startline="36">loss_edge</references>
        <references refid="structanalytics__t_1aadc82622ca858c8ab006ccc96410bd61" compoundref="metrics_8h" startline="34">loss_graph</references>
        <references refid="structanalytics__t_1abce28cbd20f46203f42a7546340f0d28" compoundref="metrics_8h" startline="35">loss_node</references>
        <references refid="structanalytics__t_1a20feee0b24458ca17b50e5696d8e1d4f" compoundref="metrics_8h" startline="42">pred_mass_edge</references>
        <references refid="structanalytics__t_1ad07d39aacd2dbd770584deee124fb2a7" compoundref="metrics_8h" startline="31">report</references>
        <references refid="structanalytics__t_1aba2059fefda38f7328e04a35ffea7bcd" compoundref="metrics_8h" startline="43">truth_mass_edge</references>
      </memberdef>
      <memberdef kind="function" id="structanalytics__t_1a8cf1056f201348aecae5b87ab3363a18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void analytics_t::destroy</definition>
        <argsstring>(std::map&lt; mode_enum, std::map&lt; std::string, TH1F * &gt;&gt; *data)</argsstring>
        <name>destroy</name>
        <param>
          <type>std::map&lt; <ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref>, std::map&lt; std::string, TH1F * &gt;&gt; *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metrics/include/metrics/metrics.h" line="59" column="10" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="59" bodyend="66"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <referencedby refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" compoundref="metrics_8h" startline="45" endline="57">purge</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="14">
        <label>std::vector&lt; Color_t &gt;</label>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; Color_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::map&lt; mode_enum, std::map&lt; std::string, float &gt; &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; mode_enum, std::map&lt; std::string, float &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>K</label>
      </node>
      <node id="5">
        <label>T</label>
      </node>
      <node id="15">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::map&lt; mode_enum, std::map&lt; std::string, TH1F * &gt; &gt;</label>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; mode_enum, std::map&lt; std::string, TH1F * &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>model_report</label>
        <link refid="structmodel__report"/>
        <childnode refid="7" relation="usage">
          <edgelabel>mode</edgelabel>
          <edgelabel>run_name</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>accuracy_graph</edgelabel>
          <edgelabel>accuracy_node</edgelabel>
          <edgelabel>loss_node</edgelabel>
          <edgelabel>accuracy_edge</edgelabel>
          <edgelabel>loss_graph</edgelabel>
          <edgelabel>loss_edge</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>waiting_plot</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>metrics</label>
        <link refid="classmetrics"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>colors_h</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_settings</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>output_path</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>lossfx</label>
        <link refid="classlossfx"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="21" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>cproperty&lt; T, G &gt;</label>
        <link refid="classcproperty"/>
      </node>
      <node id="19">
        <label>model_template</label>
        <link refid="classmodel__template"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>o_node</edgelabel>
          <edgelabel>o_graph</edgelabel>
          <edgelabel>i_edge</edgelabel>
          <edgelabel>i_node</edgelabel>
          <edgelabel>o_edge</edgelabel>
          <edgelabel>i_graph</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_loss</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>device</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>model_checkpoint_path</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>device_index</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_o_node</edgelabel>
          <edgelabel>m_o_graph</edgelabel>
          <edgelabel>m_i_edge</edgelabel>
          <edgelabel>m_i_node</edgelabel>
          <edgelabel>m_i_graph</edgelabel>
          <edgelabel>m_o_edge</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>analytics_t</label>
        <link refid="structanalytics__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>pred_mass_edge</edgelabel>
          <edgelabel>truth_mass_edge</edgelabel>
          <edgelabel>accuracy_graph</edgelabel>
          <edgelabel>accuracy_node</edgelabel>
          <edgelabel>loss_node</edgelabel>
          <edgelabel>accuracy_edge</edgelabel>
          <edgelabel>loss_graph</edgelabel>
          <edgelabel>loss_edge</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>report</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="18">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::map&lt; std::string, float &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; std::string, float &gt;</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>std::map&lt; std::string, torch::Tensor * &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; std::string, torch::Tensor * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>cproperty&lt; int, model_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="21" relation="template-instance">
          <edgelabel>&lt; int, model_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>cproperty&lt; std::string, model_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="21" relation="template-instance">
          <edgelabel>&lt; std::string, model_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::vector&lt; torch::nn::Sequential * &gt;</label>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; torch::nn::Sequential * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="7" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>std::vector&lt; int &gt;</label>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="7">
        <label>std::string</label>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>settings_t</label>
        <link refid="structsettings__t"/>
        <childnode refid="7" relation="usage">
          <edgelabel>graph_cache</edgelabel>
          <edgelabel>output_path</edgelabel>
          <edgelabel>metacache_path</edgelabel>
          <edgelabel>run_name</edgelabel>
          <edgelabel>var_eta</edgelabel>
          <edgelabel>training_dataset</edgelabel>
          <edgelabel>sow_name</edgelabel>
          <edgelabel>var_phi</edgelabel>
          <edgelabel>var_pt</edgelabel>
          <edgelabel>var_energy</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>kfold</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>targets</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/metrics/include/metrics/metrics.h" line="29" column="18" bodyfile="modules/metrics/include/metrics/metrics.h" bodystart="29" bodyend="67"/>
    <listofallmembers>
      <member refid="structanalytics__t_1a31e64e77a3f6ca45634d7aab52594e2e" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>accuracy_edge</name></member>
      <member refid="structanalytics__t_1a38e31ec46c69e034d787775a76d69a04" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>accuracy_graph</name></member>
      <member refid="structanalytics__t_1a25ffc26f099137eeaf6912d055729830" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>accuracy_node</name></member>
      <member refid="structanalytics__t_1a8cf1056f201348aecae5b87ab3363a18" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>destroy</name></member>
      <member refid="structanalytics__t_1a7a5eebc303266b770661ecbca42327f5" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>loss_edge</name></member>
      <member refid="structanalytics__t_1aadc82622ca858c8ab006ccc96410bd61" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>loss_graph</name></member>
      <member refid="structanalytics__t_1abce28cbd20f46203f42a7546340f0d28" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>loss_node</name></member>
      <member refid="structanalytics__t_1a6200f21a83e471611619ee544d6cd085" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>model</name></member>
      <member refid="structanalytics__t_1a20feee0b24458ca17b50e5696d8e1d4f" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>pred_mass_edge</name></member>
      <member refid="structanalytics__t_1ad2f57d61908fc195021e43bd8408eeab" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>purge</name></member>
      <member refid="structanalytics__t_1ad07d39aacd2dbd770584deee124fb2a7" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>report</name></member>
      <member refid="structanalytics__t_1ab2c53ed05d0942ed096d8a6f8a44f3b8" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>this_epoch</name></member>
      <member refid="structanalytics__t_1aba2059fefda38f7328e04a35ffea7bcd" prot="public" virt="non-virtual"><scope>analytics_t</scope><name>truth_mass_edge</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
