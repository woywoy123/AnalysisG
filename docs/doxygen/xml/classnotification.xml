<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classnotification" kind="class" language="C++" prot="public">
    <compoundname>notification</compoundname>
    <derivedcompoundref refid="classanalysis" prot="public" virt="non-virtual">analysis</derivedcompoundref>
    <derivedcompoundref refid="classdataloader" prot="public" virt="non-virtual">dataloader</derivedcompoundref>
    <derivedcompoundref refid="classio" prot="public" virt="non-virtual">io</derivedcompoundref>
    <derivedcompoundref refid="classmeta" prot="public" virt="non-virtual">meta</derivedcompoundref>
    <derivedcompoundref refid="classmetric__template" prot="public" virt="non-virtual">metric_template</derivedcompoundref>
    <derivedcompoundref refid="classmetrics" prot="public" virt="non-virtual">metrics</derivedcompoundref>
    <derivedcompoundref refid="classmodel__template" prot="public" virt="non-virtual">model_template</derivedcompoundref>
    <derivedcompoundref refid="classoptimizer" prot="public" virt="non-virtual">optimizer</derivedcompoundref>
    <derivedcompoundref refid="classplotting" prot="public" virt="non-virtual">plotting</derivedcompoundref>
    <derivedcompoundref refid="classsampletracer" prot="public" virt="non-virtual">sampletracer</derivedcompoundref>
    <includes refid="notification_8h" local="no">notification.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnotification_1a913d4c8a7736df782f900dd436cfeaa6" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string notification::prefix</definition>
        <argsstring></argsstring>
        <name>prefix</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
<para>Prefix used in log messages from this instance. Initialized as empty string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="126" column="17" bodyfile="modules/notification/include/notification/notification.h" bodystart="126" bodyend="-1"/>
        <referencedby refid="classanalysis_1a1391073bb18c75cdad4132e90992fcd3" compoundref="analysis_8cxx" startline="7" endline="34">analysis::analysis</referencedby>
        <referencedby refid="classdataloader_1a2fa1ff07b59195d82493d67dcbe648c8" compoundref="dataloader_8cxx" startline="6" endline="12">dataloader::dataloader</referencedby>
        <referencedby refid="classio_1a87d6c9bb433c979e3d469090b7e4f873" compoundref="io_2cxx_2io_8cxx" startline="6" endline="6">io::io</referencedby>
        <referencedby refid="classmeta_1a63ad3379066eb6b7c8bf7a7ea9ee0783" compoundref="meta_8cxx" startline="4" endline="126">meta::meta</referencedby>
        <referencedby refid="classoptimizer_1aff2ebf2bb9af98169baea22791818790" compoundref="optimizer_2cxx_2optimizer_8cxx" startline="3" endline="6">optimizer::optimizer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnotification_1aa14ded524569ac1d7fd121c161a733be" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool notification::debug_mode</definition>
        <argsstring></argsstring>
        <name>debug_mode</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Flag indicating whether debug mode is enabled. Initialized as false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="127" column="10" bodyfile="modules/notification/include/notification/notification.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnotification_1ab2d4ba20d7bc164eece8982b413eab13" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool notification::suppress_warnings</definition>
        <argsstring></argsstring>
        <name>suppress_warnings</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Flag indicating whether warnings are suppressed. Initialized as false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="128" column="10" bodyfile="modules/notification/include/notification/notification.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnotification_1a77a99c28092cf053b395805c75dde6da" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool notification::suppress_info</definition>
        <argsstring></argsstring>
        <name>suppress_info</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Flag indicating whether info messages are suppressed. Initialized as false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="129" column="10" bodyfile="modules/notification/include/notification/notification.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnotification_1a3ec5fe2d8db29cf32853858ff58fdbd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>notification::notification</definition>
        <argsstring>()</argsstring>
        <name>notification</name>
        <briefdescription>
<para>Constructor for the <computeroutput>notification</computeroutput> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes a new notification instance with default settings. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="33" column="5" bodyfile="modules/notification/cxx/notification.cxx" bodystart="5" bodyend="5"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1a0b7272463b149418caf592e398cae64e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>notification::~notification</definition>
        <argsstring>()</argsstring>
        <name>~notification</name>
        <briefdescription>
<para>Destructor for the <computeroutput>notification</computeroutput> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleans up any resources used by the notification system. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="39" column="5" bodyfile="modules/notification/cxx/notification.cxx" bodystart="6" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1a575db6b2e3b67a7d679205600d83b576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notification::set_prefix</definition>
        <argsstring>(std::string prefix)</argsstring>
        <name>set_prefix</name>
        <param>
          <type>std::string</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>Sets the prefix used in log messages from this instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to use as a prefix for log messages. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="45" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1aa0aad214cf167691e516ecc343306244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string notification::get_prefix</definition>
        <argsstring>()</argsstring>
        <name>get_prefix</name>
        <briefdescription>
<para>Returns the prefix currently used in log messages. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current prefix string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="51" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1a2ea9e0828e3d323b5bb5cdecc8f018a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notification::Info</definition>
        <argsstring>(std::string msg, bool newline=true)</argsstring>
        <name>Info</name>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newline</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Outputs an info message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newline</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to append a newline (default: true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="58" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1ab758dafbb449e142fb68e11c0470b5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notification::Warning</definition>
        <argsstring>(std::string msg, bool newline=true)</argsstring>
        <name>Warning</name>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newline</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Outputs a warning message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The warning message to output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newline</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to append a newline (default: true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="65" column="10"/>
        <referencedby refid="classio_1a2a0214e493a7a2ef5e9507c0e6aa4e70" compoundref="io_8h" startline="95" endline="99">io::read</referencedby>
        <referencedby refid="classio_1a39a32d23eeb4ae8f422bb416256fd9cd" compoundref="io_8h" startline="65" endline="71">io::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnotification_1ab0c3843575c157d799e532a9ea5acbd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notification::Error</definition>
        <argsstring>(std::string msg, bool newline=true)</argsstring>
        <name>Error</name>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newline</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Outputs an error message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The error message to output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newline</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to append a newline (default: true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1a8dd1ebb578269118b18bf7f0e176bf14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notification::Debug</definition>
        <argsstring>(std::string msg, bool newline=true)</argsstring>
        <name>Debug</name>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newline</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Outputs a debug message (only in debug mode). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The debug message to output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newline</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to append a newline (default: true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1a47e2d300e33c44a24b0c51d9e9a83914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notification::Message</definition>
        <argsstring>(std::string msg, std::string tag=&quot;&quot;, bool newline=true)</argsstring>
        <name>Message</name>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>tag</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>newline</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Outputs a message with custom formatting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>A custom tag to prepend to the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newline</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to append a newline (default: true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="87" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1a5a69a50032f5dcf38bed2bb27dc048fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notification::set_debug_mode</definition>
        <argsstring>(bool dbg)</argsstring>
        <name>set_debug_mode</name>
        <param>
          <type>bool</type>
          <declname>dbg</declname>
        </param>
        <briefdescription>
<para>Enables or disables debug mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbg</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean flag, set to true to enable debug messages, false to disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="93" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1ae25782afd10b3cb5fffe17afaf4fffc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool notification::get_debug_mode</definition>
        <argsstring>()</argsstring>
        <name>get_debug_mode</name>
        <briefdescription>
<para>Returns the current status of debug mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Boolean indicating whether debug mode is enabled (true) or disabled (false). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="99" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1a9bb77ba73a5f25af292e9eea8a8de970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notification::set_suppress_warning</definition>
        <argsstring>(bool sw)</argsstring>
        <name>set_suppress_warning</name>
        <param>
          <type>bool</type>
          <declname>sw</declname>
        </param>
        <briefdescription>
<para>Sets whether warnings should be suppressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sw</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean flag, set to true to suppress warnings, false to show them. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1ab53313e9343e9ef6deaefa2bdd3a837a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool notification::get_suppress_warning</definition>
        <argsstring>()</argsstring>
        <name>get_suppress_warning</name>
        <briefdescription>
<para>Returns the current warning suppression status. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Boolean indicating whether warnings are suppressed (true) or shown (false). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="111" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1a58eec7023935cff9332ce21e58fc3f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notification::set_suppress_info</definition>
        <argsstring>(bool si)</argsstring>
        <name>set_suppress_info</name>
        <param>
          <type>bool</type>
          <declname>si</declname>
        </param>
        <briefdescription>
<para>Sets whether info messages should be suppressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>si</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean flag, set to true to suppress info messages, false to show them. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="117" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classnotification_1a3a12e8eaf363a320abee5393436123f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool notification::get_suppress_info</definition>
        <argsstring>()</argsstring>
        <name>get_suppress_info</name>
        <briefdescription>
<para>Returns the current info message suppression status. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Boolean indicating whether info messages are suppressed (true) or shown (false). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/notification/include/notification/notification.h" line="123" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides logging and messaging functionality with various severity levels. </para>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput>notification</computeroutput> class serves as a base class for many components in the <ref refid="namespace_analysis_g" kindref="compound">AnalysisG</ref> framework and provides a consistent interface for message output. It supports different severity levels (INFO, WARNING, ERROR, DEBUG) and can be configured to suppress certain types of messages or redirect output. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>meta</label>
        <link refid="classmeta"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>analysis</label>
        <link refid="classanalysis"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>accuracy_metric</label>
        <link refid="classaccuracy__metric"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>grift</label>
        <link refid="classgrift"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>optimizer</label>
        <link refid="classoptimizer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>metrics</label>
        <link refid="classmetrics"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>plotting</label>
        <link refid="classplotting"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dataloader</label>
        <link refid="classdataloader"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>model_template</label>
        <link refid="classmodel__template"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>sampletracer</label>
        <link refid="classsampletracer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>metric_template</label>
        <link refid="classmetric__template"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>pagerank_metric</label>
        <link refid="classpagerank__metric"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>io</label>
        <link refid="classio"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>notification</label>
        <link refid="classnotification"/>
      </node>
      <node id="12">
        <label>recursivegraphneuralnetwork</label>
        <link refid="classrecursivegraphneuralnetwork"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="1">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="2" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/notification/include/notification/notification.h" line="27" column="1" bodyfile="modules/notification/include/notification/notification.h" bodystart="26" bodyend="130"/>
    <listofallmembers>
      <member refid="classnotification_1a8dd1ebb578269118b18bf7f0e176bf14" prot="public" virt="non-virtual"><scope>notification</scope><name>Debug</name></member>
      <member refid="classnotification_1aa14ded524569ac1d7fd121c161a733be" prot="protected" virt="non-virtual"><scope>notification</scope><name>debug_mode</name></member>
      <member refid="classnotification_1ab0c3843575c157d799e532a9ea5acbd0" prot="public" virt="non-virtual"><scope>notification</scope><name>Error</name></member>
      <member refid="classnotification_1ae25782afd10b3cb5fffe17afaf4fffc0" prot="public" virt="non-virtual"><scope>notification</scope><name>get_debug_mode</name></member>
      <member refid="classnotification_1aa0aad214cf167691e516ecc343306244" prot="public" virt="non-virtual"><scope>notification</scope><name>get_prefix</name></member>
      <member refid="classnotification_1a3a12e8eaf363a320abee5393436123f0" prot="public" virt="non-virtual"><scope>notification</scope><name>get_suppress_info</name></member>
      <member refid="classnotification_1ab53313e9343e9ef6deaefa2bdd3a837a" prot="public" virt="non-virtual"><scope>notification</scope><name>get_suppress_warning</name></member>
      <member refid="classnotification_1a2ea9e0828e3d323b5bb5cdecc8f018a8" prot="public" virt="non-virtual"><scope>notification</scope><name>Info</name></member>
      <member refid="classnotification_1a47e2d300e33c44a24b0c51d9e9a83914" prot="public" virt="non-virtual"><scope>notification</scope><name>Message</name></member>
      <member refid="classnotification_1a3ec5fe2d8db29cf32853858ff58fdbd7" prot="public" virt="non-virtual"><scope>notification</scope><name>notification</name></member>
      <member refid="classnotification_1a913d4c8a7736df782f900dd436cfeaa6" prot="protected" virt="non-virtual"><scope>notification</scope><name>prefix</name></member>
      <member refid="classnotification_1a5a69a50032f5dcf38bed2bb27dc048fc" prot="public" virt="non-virtual"><scope>notification</scope><name>set_debug_mode</name></member>
      <member refid="classnotification_1a575db6b2e3b67a7d679205600d83b576" prot="public" virt="non-virtual"><scope>notification</scope><name>set_prefix</name></member>
      <member refid="classnotification_1a58eec7023935cff9332ce21e58fc3f5a" prot="public" virt="non-virtual"><scope>notification</scope><name>set_suppress_info</name></member>
      <member refid="classnotification_1a9bb77ba73a5f25af292e9eea8a8de970" prot="public" virt="non-virtual"><scope>notification</scope><name>set_suppress_warning</name></member>
      <member refid="classnotification_1a77a99c28092cf053b395805c75dde6da" prot="protected" virt="non-virtual"><scope>notification</scope><name>suppress_info</name></member>
      <member refid="classnotification_1ab2d4ba20d7bc164eece8982b413eab13" prot="protected" virt="non-virtual"><scope>notification</scope><name>suppress_warnings</name></member>
      <member refid="classnotification_1ab758dafbb449e142fb68e11c0470b5c9" prot="public" virt="non-virtual"><scope>notification</scope><name>Warning</name></member>
      <member refid="classnotification_1a0b7272463b149418caf592e398cae64e" prot="public" virt="non-virtual"><scope>notification</scope><name>~notification</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
