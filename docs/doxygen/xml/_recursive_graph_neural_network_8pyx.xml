<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_recursive_graph_neural_network_8pyx" kind="file" language="C++">
    <compoundname>RecursiveGraphNeuralNetwork.pyx</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>distutils:<sp/>language=c++</highlight></codeline>
<codeline><highlight class="normal">#<sp/>cython:<sp/>language_level=3</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">from<sp/>AnalysisG.core.model_template<sp/>cimport<sp/>ModelTemplate</highlight></codeline>
<codeline><highlight class="normal">from<sp/>AnalysisG.models.RecursiveGraphNeuralNetwork.RecursiveGraphNeuralNetwork<sp/>cimport<sp/>recursivegraphneuralnetwork</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">cdef<sp/>class<sp/>RecursiveGraphNeuralNetwork(ModelTemplate):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rnn<sp/>=<sp/>new<sp/>recursivegraphneuralnetwork(1024,<sp/>0.1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nn_ptr<sp/>=<sp/>self.rnn</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__init__(self):<sp/>pass</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/>del<sp/>self.nn_ptr</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>dx(self):<sp/>return<sp/>self.rnn._dx</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@dx.setter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>dx(self,<sp/>int<sp/>val):<sp/>self.rnn._dx<sp/>=<sp/>val</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>x(self):<sp/>return<sp/>self.rnn._x</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@x.setter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>x(self,<sp/>int<sp/>val):<sp/>self.rnn._x<sp/>=<sp/>val</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>output(self):<sp/>return<sp/>self.rnn._output</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@output.setter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>output(self,<sp/>int<sp/>val):<sp/>self.rnn._output<sp/>=<sp/>val</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>rep(self):<sp/>return<sp/>self.rnn._rep</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@rep.setter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>rep(self,<sp/>int<sp/>val):<sp/>self.rnn._rep<sp/>=<sp/>val</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>is_mc(self):<sp/>return<sp/>self.rnn.is_mc</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@is_mc.setter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>is_mc(self,<sp/>bool<sp/>val):<sp/>self.rnn.is_mc<sp/>=<sp/>val</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>res_mass(self):<sp/>return<sp/>self.rnn.res_mass</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@res_mass.setter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>res_mass(self,<sp/>double<sp/>val):<sp/>self.rnn.res_mass<sp/>=<sp/>val</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>drop_out(self):<sp/>return<sp/>self.rnn.drop_out</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@drop_out.setter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>drop_out(self,<sp/>double<sp/>val):<sp/>self.rnn.drop_out<sp/>=<sp/>val</highlight></codeline>
<codeline></codeline>
    </programlisting>
    <location file="models/RecursiveGraphNeuralNetwork/RecursiveGraphNeuralNetwork.pyx"/>
  </compounddef>
</doxygen>
