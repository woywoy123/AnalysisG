<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classtopefficiency" kind="class" language="C++" prot="public">
    <compoundname>topefficiency</compoundname>
    <basecompoundref refid="classselection__template" prot="public" virt="non-virtual">selection_template</basecompoundref>
    <includes refid="topefficiency_8h" local="no">topefficiency.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtopefficiency_1ae986a7733357768b776b6fd99f0dd450" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double topefficiency::pt_start</definition>
        <argsstring></argsstring>
        <name>pt_start</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="24" column="16" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="24" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" compoundref="topefficiency_8cxx" startline="57" endline="79">region</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a01a068e8edc251c991d2f9862a0128c8" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double topefficiency::eta_start</definition>
        <argsstring></argsstring>
        <name>eta_start</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="25" column="16" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="25" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" compoundref="topefficiency_8cxx" startline="57" endline="79">region</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a9cde298464e1326ce94b9daef8e38419" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double topefficiency::pt_end</definition>
        <argsstring></argsstring>
        <name>pt_end</name>
        <initializer>= 1500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="27" column="16" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" compoundref="topefficiency_8cxx" startline="57" endline="79">region</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a47907d01c6c277fccb2e7e9d67963285" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double topefficiency::eta_end</definition>
        <argsstring></argsstring>
        <name>eta_end</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="28" column="16" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" compoundref="topefficiency_8cxx" startline="57" endline="79">region</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a51b7c301dbaf1b1ed62845193c4764a5" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double topefficiency::eta_step</definition>
        <argsstring></argsstring>
        <name>eta_step</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="30" column="16" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="30" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" compoundref="topefficiency_8cxx" startline="57" endline="79">region</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1aed85781dc58f323d470ea3566f35578c" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double topefficiency::pt_step</definition>
        <argsstring></argsstring>
        <name>pt_step</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="31" column="16" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="31" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" compoundref="topefficiency_8cxx" startline="57" endline="79">region</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a0b30c57878e08fb36ef2406bd9c82d25" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double topefficiency::score_step</definition>
        <argsstring></argsstring>
        <name>score_step</name>
        <initializer>= 0.01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="32" column="16" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="32" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a807f5935319eba81c984b04876b9e363" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, std::vector&lt;float&gt; &gt; &gt; topefficiency::p_topmass</definition>
        <argsstring></argsstring>
        <name>p_topmass</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="38" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="38" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1afd8de69a4ac273da76768d645dc03dd8" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, std::vector&lt;float&gt; &gt; &gt; topefficiency::t_topmass</definition>
        <argsstring></argsstring>
        <name>t_topmass</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="39" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1afed56da37aaca5606aebd1041722042c" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, std::vector&lt;float&gt; &gt; &gt; topefficiency::p_zmass</definition>
        <argsstring></argsstring>
        <name>p_zmass</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="41" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="41" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a8d1a20038a9fcbaa833919dfa66ccea2" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, std::vector&lt;float&gt; &gt; &gt; topefficiency::t_zmass</definition>
        <argsstring></argsstring>
        <name>t_zmass</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="42" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="42" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1afc023848967b4c638f96cfaf15f1d8ac" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, std::vector&lt;float&gt; &gt; &gt; topefficiency::prob_tops</definition>
        <argsstring></argsstring>
        <name>prob_tops</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="44" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="44" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a7c4f458a2c1fbed8a3cc843a0874b67e" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, std::vector&lt;float&gt; &gt; &gt; topefficiency::prob_zprime</definition>
        <argsstring></argsstring>
        <name>prob_zprime</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="45" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a4c2c1accd54cc6aeedfd4685ed49644c" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, std::vector&lt;float&gt; &gt; &gt; topefficiency::t_decay_region</definition>
        <argsstring></argsstring>
        <name>t_decay_region</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="47" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a34fffdf1c2559749fbbbdcb63caadef6" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, std::vector&lt;float&gt; &gt; &gt; topefficiency::p_decay_region</definition>
        <argsstring></argsstring>
        <name>p_decay_region</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="48" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="48" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1ae79b252f9ab585465e61d1677152eeeb" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; float, int &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;float, int&gt; &gt; topefficiency::p_nodes</definition>
        <argsstring></argsstring>
        <name>p_nodes</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="50" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a095520fd92e44698845aeb4f4a5c940b" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; float, int &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;float, int&gt; &gt; topefficiency::t_nodes</definition>
        <argsstring></argsstring>
        <name>t_nodes</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="51" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="51" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1aabe9231cc1904140d1874f8b1aa8b961" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, int &gt;</type>
        <definition>std::map&lt;std::string, int&gt; topefficiency::n_tru_tops</definition>
        <argsstring></argsstring>
        <name>n_tru_tops</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="53" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="53" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1ad44d0e33df33b16759179b4cc29e44ff" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; float, int &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;float, int&gt; &gt; topefficiency::n_pred_tops</definition>
        <argsstring></argsstring>
        <name>n_pred_tops</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="54" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="54" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1ac2c9b198235e45a6d139ddeb8d72c55f" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; float, int &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;float, int&gt; &gt; topefficiency::n_perfect_tops</definition>
        <argsstring></argsstring>
        <name>n_perfect_tops</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="55" column="18" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="55" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1ae8501f5c5b8349cb6ed601baae388fd4" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; topefficiency::truth_res_edge</definition>
        <argsstring></argsstring>
        <name>truth_res_edge</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="58" column="21" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="58" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a8b84f23c91ca598d48a5613217356d74" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; topefficiency::truth_top_edge</definition>
        <argsstring></argsstring>
        <name>truth_top_edge</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="59" column="21" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="59" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a2d6cb787d1b293127247ebafd627c1ee" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; topefficiency::truth_ntops</definition>
        <argsstring></argsstring>
        <name>truth_ntops</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="61" column="21" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="61" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a7f30245ea8ca3ea4ace655d7e0e312ac" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; topefficiency::truth_signal</definition>
        <argsstring></argsstring>
        <name>truth_signal</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="62" column="21" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="62" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a1cd2a916c16c48b17a192fdbfeb11fde" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; float &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;float&gt; &gt; topefficiency::pred_res_edge_score</definition>
        <argsstring></argsstring>
        <name>pred_res_edge_score</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="64" column="21" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="64" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a5874cd4d0047388c9aa555d657ee5a48" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; float &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;float&gt; &gt; topefficiency::pred_top_edge_score</definition>
        <argsstring></argsstring>
        <name>pred_top_edge_score</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="65" column="21" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a7d21595b7cd71c7e40d402163512d1ea" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; float &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;float&gt; &gt; topefficiency::pred_ntops_score</definition>
        <argsstring></argsstring>
        <name>pred_ntops_score</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="67" column="21" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="67" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtopefficiency_1a841a6c976642edca13e1bd602ec3b77c" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; float &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;float&gt; &gt; topefficiency::pred_signal_score</definition>
        <argsstring></argsstring>
        <name>pred_signal_score</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="68" column="21" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="68" bodyend="-1"/>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">merge</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtopefficiency_1a28df214b61ace18c3c6c2f2d9eb7831c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>topefficiency::topefficiency</definition>
        <argsstring>()</argsstring>
        <name>topefficiency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="16" column="9" bodyfile="selections/performance/topefficiency/topefficiency.cxx" bodystart="9" bodyend="9"/>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">selection_template::name</references>
        <referencedby refid="classtopefficiency_1a8650d7ac08b08ed5f566193e39c14326" compoundref="topefficiency_8cxx" startline="12" endline="14">clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtopefficiency_1aa72225b48a63287c7b0c7edd8ca35887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>topefficiency::~topefficiency</definition>
        <argsstring>()</argsstring>
        <name>~topefficiency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="17" column="9" bodyfile="selections/performance/topefficiency/topefficiency.cxx" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classtopefficiency_1a8650d7ac08b08ed5f566193e39c14326" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
        <definition>selection_template * topefficiency::clone</definition>
        <argsstring>() override</argsstring>
        <name>clone</name>
        <reimplements refid="classselection__template_1a094ce1eb2b6463f88a8ad5f7dfd8e4b6">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="18" column="28" bodyfile="selections/performance/topefficiency/topefficiency.cxx" bodystart="12" bodyend="14"/>
        <references refid="classtopefficiency_1a28df214b61ace18c3c6c2f2d9eb7831c" compoundref="topefficiency_8cxx" startline="9" endline="9">topefficiency</references>
      </memberdef>
      <memberdef kind="function" id="classtopefficiency_1a43c273e1b88d0ebe7035ff94c1a3fb15" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool topefficiency::selection</definition>
        <argsstring>(event_template *ev) override</argsstring>
        <name>selection</name>
        <reimplements refid="classselection__template_1a906e3f695a675e5a545fa4eab867cfd7">selection</reimplements>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="20" column="14" bodyfile="selections/performance/topefficiency/topefficiency.cxx" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool topefficiency::strategy</definition>
        <argsstring>(event_template *ev) override</argsstring>
        <name>strategy</name>
        <reimplements refid="classselection__template_1a01a81c84699bb054a8c320fc5575e17b">strategy</reimplements>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="21" column="14" bodyfile="selections/performance/topefficiency/topefficiency.cxx" bodystart="95" bodyend="176"/>
        <references refid="classtopefficiency_1a86be8160dfeebf354752374ab5f4c83f" compoundref="topefficiency_8cxx" startline="81" endline="93">decaymode</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" compoundref="test__normalization_8py" startline="9">test_normalization.evn</references>
        <references refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" compoundref="selection__template_8h" startline="28">selection_template::hash</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f">mass</references>
        <references refid="classtopefficiency_1ac2c9b198235e45a6d139ddeb8d72c55f" compoundref="topefficiency_8h" startline="55">n_perfect_tops</references>
        <references refid="classtopefficiency_1ad44d0e33df33b16759179b4cc29e44ff" compoundref="topefficiency_8h" startline="54">n_pred_tops</references>
        <references refid="classtopefficiency_1aabe9231cc1904140d1874f8b1aa8b961" compoundref="topefficiency_8h" startline="53">n_tru_tops</references>
        <references refid="classtopefficiency_1a34fffdf1c2559749fbbbdcb63caadef6" compoundref="topefficiency_8h" startline="48">p_decay_region</references>
        <references refid="classtopefficiency_1ae79b252f9ab585465e61d1677152eeeb" compoundref="topefficiency_8h" startline="50">p_nodes</references>
        <references refid="classtopefficiency_1a807f5935319eba81c984b04876b9e363" compoundref="topefficiency_8h" startline="38">p_topmass</references>
        <references refid="classtopefficiency_1afed56da37aaca5606aebd1041722042c" compoundref="topefficiency_8h" startline="41">p_zmass</references>
        <references refid="classtopefficiency_1a7d21595b7cd71c7e40d402163512d1ea" compoundref="topefficiency_8h" startline="67">pred_ntops_score</references>
        <references refid="classtopefficiency_1a1cd2a916c16c48b17a192fdbfeb11fde" compoundref="topefficiency_8h" startline="64">pred_res_edge_score</references>
        <references refid="classtopefficiency_1a841a6c976642edca13e1bd602ec3b77c" compoundref="topefficiency_8h" startline="68">pred_signal_score</references>
        <references refid="classtopefficiency_1a5874cd4d0047388c9aa555d657ee5a48" compoundref="topefficiency_8h" startline="65">pred_top_edge_score</references>
        <references refid="classtopefficiency_1afc023848967b4c638f96cfaf15f1d8ac" compoundref="topefficiency_8h" startline="44">prob_tops</references>
        <references refid="classtopefficiency_1a7c4f458a2c1fbed8a3cc843a0874b67e" compoundref="topefficiency_8h" startline="45">prob_zprime</references>
        <references refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" compoundref="topefficiency_8cxx" startline="57" endline="79">region</references>
        <references refid="classtopefficiency_1a0b30c57878e08fb36ef2406bd9c82d25" compoundref="topefficiency_8h" startline="32">score_step</references>
        <references refid="classtopefficiency_1a4c2c1accd54cc6aeedfd4685ed49644c" compoundref="topefficiency_8h" startline="47">t_decay_region</references>
        <references refid="classtopefficiency_1a095520fd92e44698845aeb4f4a5c940b" compoundref="topefficiency_8h" startline="51">t_nodes</references>
        <references refid="classtopefficiency_1afd8de69a4ac273da76768d645dc03dd8" compoundref="topefficiency_8h" startline="39">t_topmass</references>
        <references refid="classtopefficiency_1a8d1a20038a9fcbaa833919dfa66ccea2" compoundref="topefficiency_8h" startline="42">t_zmass</references>
        <references refid="classtopefficiency_1a2d6cb787d1b293127247ebafd627c1ee" compoundref="topefficiency_8h" startline="61">truth_ntops</references>
        <references refid="classtopefficiency_1ae8501f5c5b8349cb6ed601baae388fd4" compoundref="topefficiency_8h" startline="58">truth_res_edge</references>
        <references refid="classtopefficiency_1a7f30245ea8ca3ea4ace655d7e0e312ac" compoundref="topefficiency_8h" startline="62">truth_signal</references>
        <references refid="classtopefficiency_1a8b84f23c91ca598d48a5613217356d74" compoundref="topefficiency_8h" startline="59">truth_top_edge</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void topefficiency::merge</definition>
        <argsstring>(selection_template *sl) override</argsstring>
        <name>merge</name>
        <reimplements refid="classselection__template_1ad04ca3679a943defbd47c05a88448aba">merge</reimplements>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <declname>sl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="22" column="14" bodyfile="selections/performance/topefficiency/topefficiency.cxx" bodystart="16" bodyend="49"/>
        <references refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" compoundref="merge__cast_8h" startline="9" endline="11">merge_data</references>
        <references refid="classtopefficiency_1ac2c9b198235e45a6d139ddeb8d72c55f" compoundref="topefficiency_8h" startline="55">n_perfect_tops</references>
        <references refid="classtopefficiency_1ad44d0e33df33b16759179b4cc29e44ff" compoundref="topefficiency_8h" startline="54">n_pred_tops</references>
        <references refid="classtopefficiency_1aabe9231cc1904140d1874f8b1aa8b961" compoundref="topefficiency_8h" startline="53">n_tru_tops</references>
        <references refid="classtopefficiency_1a34fffdf1c2559749fbbbdcb63caadef6" compoundref="topefficiency_8h" startline="48">p_decay_region</references>
        <references refid="classtopefficiency_1ae79b252f9ab585465e61d1677152eeeb" compoundref="topefficiency_8h" startline="50">p_nodes</references>
        <references refid="classtopefficiency_1a807f5935319eba81c984b04876b9e363" compoundref="topefficiency_8h" startline="38">p_topmass</references>
        <references refid="classtopefficiency_1afed56da37aaca5606aebd1041722042c" compoundref="topefficiency_8h" startline="41">p_zmass</references>
        <references refid="classtopefficiency_1a7d21595b7cd71c7e40d402163512d1ea" compoundref="topefficiency_8h" startline="67">pred_ntops_score</references>
        <references refid="classtopefficiency_1a1cd2a916c16c48b17a192fdbfeb11fde" compoundref="topefficiency_8h" startline="64">pred_res_edge_score</references>
        <references refid="classtopefficiency_1a841a6c976642edca13e1bd602ec3b77c" compoundref="topefficiency_8h" startline="68">pred_signal_score</references>
        <references refid="classtopefficiency_1a5874cd4d0047388c9aa555d657ee5a48" compoundref="topefficiency_8h" startline="65">pred_top_edge_score</references>
        <references refid="classtopefficiency_1afc023848967b4c638f96cfaf15f1d8ac" compoundref="topefficiency_8h" startline="44">prob_tops</references>
        <references refid="classtopefficiency_1a7c4f458a2c1fbed8a3cc843a0874b67e" compoundref="topefficiency_8h" startline="45">prob_zprime</references>
        <references refid="namespacemain_1a80457db91bd1110a9e4a8515839a2a4b" compoundref="metrics_2main_8py" startline="4">main.sl</references>
        <references refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" compoundref="merge__cast_8h" startline="24" endline="24">sum_data</references>
        <references refid="classtopefficiency_1a4c2c1accd54cc6aeedfd4685ed49644c" compoundref="topefficiency_8h" startline="47">t_decay_region</references>
        <references refid="classtopefficiency_1a095520fd92e44698845aeb4f4a5c940b" compoundref="topefficiency_8h" startline="51">t_nodes</references>
        <references refid="classtopefficiency_1afd8de69a4ac273da76768d645dc03dd8" compoundref="topefficiency_8h" startline="39">t_topmass</references>
        <references refid="classtopefficiency_1a8d1a20038a9fcbaa833919dfa66ccea2" compoundref="topefficiency_8h" startline="42">t_zmass</references>
        <references refid="classtopefficiency_1a2d6cb787d1b293127247ebafd627c1ee" compoundref="topefficiency_8h" startline="61">truth_ntops</references>
        <references refid="classtopefficiency_1ae8501f5c5b8349cb6ed601baae388fd4" compoundref="topefficiency_8h" startline="58">truth_res_edge</references>
        <references refid="classtopefficiency_1a7f30245ea8ca3ea4ace655d7e0e312ac" compoundref="topefficiency_8h" startline="62">truth_signal</references>
        <references refid="classtopefficiency_1a8b84f23c91ca598d48a5613217356d74" compoundref="topefficiency_8h" startline="59">truth_top_edge</references>
      </memberdef>
      <memberdef kind="function" id="classtopefficiency_1ab34bde037c5ee04949cb645c20c7e774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int topefficiency::iters</definition>
        <argsstring>(double start, double end, double step)</argsstring>
        <name>iters</name>
        <param>
          <type>double</type>
          <declname>start</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end</declname>
        </param>
        <param>
          <type>double</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="34" column="13" bodyfile="selections/performance/topefficiency/topefficiency.cxx" bodystart="53" bodyend="55"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <referencedby refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" compoundref="topefficiency_8cxx" startline="57" endline="79">region</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string topefficiency::region</definition>
        <argsstring>(double pt, double eta)</argsstring>
        <name>region</name>
        <param>
          <type>double</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="35" column="21" bodyfile="selections/performance/topefficiency/topefficiency.cxx" bodystart="57" bodyend="79"/>
        <references refid="classtopefficiency_1a47907d01c6c277fccb2e7e9d67963285" compoundref="topefficiency_8h" startline="28">eta_end</references>
        <references refid="classtopefficiency_1a01a068e8edc251c991d2f9862a0128c8" compoundref="topefficiency_8h" startline="25">eta_start</references>
        <references refid="classtopefficiency_1a51b7c301dbaf1b1ed62845193c4764a5" compoundref="topefficiency_8h" startline="30">eta_step</references>
        <references refid="classtopefficiency_1ab34bde037c5ee04949cb645c20c7e774" compoundref="topefficiency_8cxx" startline="53" endline="55">iters</references>
        <references refid="classtopefficiency_1a9cde298464e1326ce94b9daef8e38419" compoundref="topefficiency_8h" startline="27">pt_end</references>
        <references refid="classtopefficiency_1ae986a7733357768b776b6fd99f0dd450" compoundref="topefficiency_8h" startline="24">pt_start</references>
        <references refid="classtopefficiency_1aed85781dc58f323d470ea3566f35578c" compoundref="topefficiency_8h" startline="31">pt_step</references>
        <references refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" compoundref="strings_8cxx" startline="59" endline="63">tools::to_string</references>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtopefficiency_1a86be8160dfeebf354752374ab5f4c83f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string topefficiency::decaymode</definition>
        <argsstring>(std::vector&lt; top * &gt; ev_tops)</argsstring>
        <name>decaymode</name>
        <param>
          <type>std::vector&lt; <ref refid="classtop" kindref="compound">top</ref> * &gt;</type>
          <declname>ev_tops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/performance/topefficiency/topefficiency.h" line="36" column="21" bodyfile="selections/performance/topefficiency/topefficiency.cxx" bodystart="81" bodyend="93"/>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">strategy</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>topefficiency</label>
        <link refid="classtopefficiency"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>selection_template</label>
        <link refid="classselection__template"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>cproperty&lt; std::vector&lt; int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>meta</label>
        <link refid="classmeta"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>dsid</edgelabel>
          <edgelabel>nFiles</edgelabel>
          <edgelabel>datasetNumber</edgelabel>
          <edgelabel>totalEvents</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>cross_section_nb</edgelabel>
          <edgelabel>completion</edgelabel>
          <edgelabel>cross_section_fb</edgelabel>
          <edgelabel>ecmEnergy</edgelabel>
          <edgelabel>event_index</edgelabel>
          <edgelabel>sum_of_weights</edgelabel>
          <edgelabel>beam_energy</edgelabel>
          <edgelabel>cross_section_pb</edgelabel>
          <edgelabel>genFiltEff</edgelabel>
          <edgelabel>eventNumber</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>isMC</edgelabel>
          <edgelabel>found</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>std::map&lt; std::string, meta_t &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, meta_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>K</label>
      </node>
      <node id="27">
        <label>T</label>
      </node>
      <node id="12">
        <label>cproperty&lt; unsigned int, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; unsigned int, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>weights_t</label>
        <link refid="structweights__t"/>
        <childnode refid="30" relation="usage">
          <edgelabel>hist_data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>generator</edgelabel>
          <edgelabel>ami_tag</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::vector&lt; double &gt;</label>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>cproperty&lt; long, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; long, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::vector&lt; std::vector&lt; float &gt; &gt;</label>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; float &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>cproperty&lt; std::string, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::string, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>std::map&lt; std::string, weights_t &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, weights_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>cproperty&lt; double, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::map&lt; int, std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; int, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>topefficiency</label>
        <link refid="classtopefficiency"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>n_tru_tops</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>pred_top_edge_score</edgelabel>
          <edgelabel>pred_signal_score</edgelabel>
          <edgelabel>pred_ntops_score</edgelabel>
          <edgelabel>pred_res_edge_score</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>p_decay_region</edgelabel>
          <edgelabel>t_topmass</edgelabel>
          <edgelabel>prob_zprime</edgelabel>
          <edgelabel>t_decay_region</edgelabel>
          <edgelabel>p_zmass</edgelabel>
          <edgelabel>prob_tops</edgelabel>
          <edgelabel>p_topmass</edgelabel>
          <edgelabel>t_zmass</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>truth_signal</edgelabel>
          <edgelabel>truth_ntops</edgelabel>
          <edgelabel>truth_res_edge</edgelabel>
          <edgelabel>truth_top_edge</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>p_nodes</edgelabel>
          <edgelabel>t_nodes</edgelabel>
          <edgelabel>n_pred_tops</edgelabel>
          <edgelabel>n_perfect_tops</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>cproperty&lt; std::vector&lt; double &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; double &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>cproperty&lt; std::map&lt; int, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>std::map&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, std::map&lt; std::string, std::vector&lt; float &gt; &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>std::map&lt; int, int &gt;</label>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; int, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>selection_template</label>
        <link refid="classselection__template"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>meta_data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>matched_meta</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>passed_weights</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>index</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>weight</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>cproperty&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>cproperty&lt; T, G &gt;</label>
        <link refid="classcproperty"/>
      </node>
      <node id="40">
        <label>cproperty&lt; std::string, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::string, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>cproperty&lt; std::map&lt; int, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="23">
        <label>meta_t</label>
        <link refid="structmeta__t"/>
        <childnode refid="24" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::map&lt; std::string, std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>std::map&lt; std::string, std::map&lt; std::string, float &gt; &gt;</label>
        <childnode refid="30" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, std::map&lt; std::string, float &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>std::map&lt; std::string, std::map&lt; float, int &gt; &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, std::map&lt; float, int &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>std::map&lt; std::string, float &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, float &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>cproperty&lt; bool, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; bool, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>event_t</label>
        <link refid="structevent__t"/>
        <childnode refid="5" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>cproperty&lt; std::map&lt; std::string, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>cproperty&lt; double, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>std::map&lt; std::string, int &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="5" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::vector&lt; int &gt;</label>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>cproperty&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="selections/performance/topefficiency/topefficiency.h" line="14" column="1" bodyfile="selections/performance/topefficiency/topefficiency.h" bodystart="13" bodyend="69"/>
    <listofallmembers>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>absolute_path</name></member>
      <member refid="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>build</name></member>
      <member refid="classselection__template_1a6a9f6df015c9f8e48c65cacc249c4fdf" prot="public" virt="virtual"><scope>topefficiency</scope><name>bulk_write</name></member>
      <member refid="classtopefficiency_1a8650d7ac08b08ed5f566193e39c14326" prot="public" virt="virtual"><scope>topefficiency</scope><name>clone</name></member>
      <member refid="classselection__template_1a9deff703f50fdff72bd1edf3664a9d75" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>CompileEvent</name></member>
      <member refid="classselection__template_1a3009dc4bb45c47d96a5bdc4096bd6870" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>contains</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>create_path</name></member>
      <member refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>data</name></member>
      <member refid="classtopefficiency_1a86be8160dfeebf354752374ab5f4c83f" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>decaymode</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>delete_path</name></member>
      <member refid="classselection__template_1ab32b926ee893cf56dc27913271658d1e" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>downcast</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>ends_with</name></member>
      <member refid="classtopefficiency_1a47907d01c6c277fccb2e7e9d67963285" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>eta_end</name></member>
      <member refid="classtopefficiency_1a01a068e8edc251c991d2f9862a0128c8" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>eta_start</name></member>
      <member refid="classtopefficiency_1a51b7c301dbaf1b1ed62845193c4764a5" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>eta_step</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>extract</name></member>
      <member refid="classselection__template_1ad220a2da4b57303d8a5b162b6733024f" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>filename</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>flush</name></member>
      <member refid="classselection__template_1a2f6cd45079e1fab94a163a38fbe005cd" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>get_hash</name></member>
      <member refid="classselection__template_1ad27d2cd85c19147b85b1e96ce73bdade" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>get_leptonics</name></member>
      <member refid="classselection__template_1ad0d6fa60bf0da8796a718532c0288d04" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>get_name</name></member>
      <member refid="classselection__template_1a4e61c1d63afdff7a6428fbf4c6297166" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>get_tree</name></member>
      <member refid="classselection__template_1ae04fb8767d15273f80c5343e2f73384b" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>get_weight</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>has_value</name></member>
      <member refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>hash</name></member>
      <member refid="classselection__template_1a2e1c4a9239afbfea9cd510b774c9c1fe" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>index</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>is_file</name></member>
      <member refid="classtopefficiency_1ab34bde037c5ee04949cb645c20c7e774" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>iters</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>ls</name></member>
      <member refid="classselection__template_1ab760e9d895d74e62a9d4bfe436568a86" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>make_unique</name></member>
      <member refid="classselection__template_1a50e7d1939618dcb8b6386f5e7a247e12" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>matched_meta</name></member>
      <member refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" prot="public" virt="virtual"><scope>topefficiency</scope><name>merge</name></member>
      <member refid="classselection__template_1a15113e43e1451e9e65b9f327fcfc7e15" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>meta_data</name></member>
      <member refid="classtopefficiency_1ac2c9b198235e45a6d139ddeb8d72c55f" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>n_perfect_tops</name></member>
      <member refid="classtopefficiency_1ad44d0e33df33b16759179b4cc29e44ff" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>n_pred_tops</name></member>
      <member refid="classtopefficiency_1aabe9231cc1904140d1874f8b1aa8b961" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>n_tru_tops</name></member>
      <member refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>name</name></member>
      <member refid="classselection__template_1a0e423716b1439b853d39904998074ecd" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>operator==</name></member>
      <member refid="classtopefficiency_1a34fffdf1c2559749fbbbdcb63caadef6" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>p_decay_region</name></member>
      <member refid="classtopefficiency_1ae79b252f9ab585465e61d1677152eeeb" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>p_nodes</name></member>
      <member refid="classtopefficiency_1a807f5935319eba81c984b04876b9e363" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>p_topmass</name></member>
      <member refid="classtopefficiency_1afed56da37aaca5606aebd1041722042c" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>p_zmass</name></member>
      <member refid="classselection__template_1ad472a18c63b8b1d6e41fbe626b13fc40" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>passed_weights</name></member>
      <member refid="classtopefficiency_1a7d21595b7cd71c7e40d402163512d1ea" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>pred_ntops_score</name></member>
      <member refid="classtopefficiency_1a1cd2a916c16c48b17a192fdbfeb11fde" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>pred_res_edge_score</name></member>
      <member refid="classtopefficiency_1a841a6c976642edca13e1bd602ec3b77c" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>pred_signal_score</name></member>
      <member refid="classtopefficiency_1a5874cd4d0047388c9aa555d657ee5a48" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>pred_top_edge_score</name></member>
      <member refid="classtopefficiency_1afc023848967b4c638f96cfaf15f1d8ac" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>prob_tops</name></member>
      <member refid="classtopefficiency_1a7c4f458a2c1fbed8a3cc843a0874b67e" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>prob_zprime</name></member>
      <member refid="classtopefficiency_1a9cde298464e1326ce94b9daef8e38419" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>pt_end</name></member>
      <member refid="classtopefficiency_1ae986a7733357768b776b6fd99f0dd450" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>pt_start</name></member>
      <member refid="classtopefficiency_1aed85781dc58f323d470ea3566f35578c" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>pt_step</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>put</name></member>
      <member refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>region</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>replace</name></member>
      <member refid="classselection__template_1a2c99ad97301a85fc7c7257930d990cfd" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>reverse_hash</name></member>
      <member refid="classselection__template_1a4faf71140920bc4cf0fc06072cecad07" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>safe_delete</name></member>
      <member refid="classtopefficiency_1a0b30c57878e08fb36ef2406bd9c82d25" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>score_step</name></member>
      <member refid="classtopefficiency_1a43c273e1b88d0ebe7035ff94c1a3fb15" prot="public" virt="virtual"><scope>topefficiency</scope><name>selection</name></member>
      <member refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>selection_template</name></member>
      <member refid="classselection__template_1acd31f17488bcf97dd8a5f1b3a7da1cdd" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>set_hash</name></member>
      <member refid="classselection__template_1a8951c34758d3410f9d931b6011c3cca2" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>set_index</name></member>
      <member refid="classselection__template_1a19244d585754db14326c126a98000899" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>set_name</name></member>
      <member refid="classselection__template_1aa95e812106c1a933f1b65e82557939d3" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>set_weight</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>split</name></member>
      <member refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" prot="public" virt="virtual"><scope>topefficiency</scope><name>strategy</name></member>
      <member refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>sum</name></member>
      <member refid="classselection__template_1af639e8d3a86f1fa5cdfd2fe58e2e5dfb" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>sum</name></member>
      <member refid="classselection__template_1aefb54851b728057af466bf7a78caeda8" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>sum</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual" ambiguityscope="tools::"><scope>topefficiency</scope><name>sum</name></member>
      <member refid="classselection__template_1a41a437aca3bb2a7f854a66ff92942d46" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a74558331b11dd6822a975a32203286ac" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a3bde46eb8ab3699d6f3eab6077d9716c" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a572f52e2758979cda89605e207e57c87" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>switch_board</name></member>
      <member refid="classtopefficiency_1a4c2c1accd54cc6aeedfd4685ed49644c" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>t_decay_region</name></member>
      <member refid="classtopefficiency_1a095520fd92e44698845aeb4f4a5c940b" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>t_nodes</name></member>
      <member refid="classtopefficiency_1afd8de69a4ac273da76768d645dc03dd8" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>t_topmass</name></member>
      <member refid="classtopefficiency_1a8d1a20038a9fcbaa833919dfa66ccea2" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>t_zmass</name></member>
      <member refid="classselection__template_1ac565e3beb94b557fc947a6f8afebfc4d" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>threadIdx</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>to_string</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>tools</name></member>
      <member refid="classtopefficiency_1a28df214b61ace18c3c6c2f2d9eb7831c" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>topefficiency</name></member>
      <member refid="classselection__template_1a57ff66ff6c5ff5af5e81298faf6bf521" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>tree</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>trim</name></member>
      <member refid="classtopefficiency_1a2d6cb787d1b293127247ebafd627c1ee" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>truth_ntops</name></member>
      <member refid="classtopefficiency_1ae8501f5c5b8349cb6ed601baae388fd4" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>truth_res_edge</name></member>
      <member refid="classtopefficiency_1a7f30245ea8ca3ea4ace655d7e0e312ac" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>truth_signal</name></member>
      <member refid="classtopefficiency_1a8b84f23c91ca598d48a5613217356d74" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>truth_top_edge</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>type_name</name></member>
      <member refid="classselection__template_1a82f14833e404fbe0399a2a539eef75b1" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>upcast</name></member>
      <member refid="classselection__template_1ae5ce6c75d19fdbb2ab18ba05b3ea4c58" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>upcast</name></member>
      <member refid="classselection__template_1a7e1560964237cf7b4846e24b300d7b9e" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>vectorize</name></member>
      <member refid="classselection__template_1a03816f18e6ce9351cd099525862c7c64" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>weight</name></member>
      <member refid="classselection__template_1ae5606e994231fae57abe42e4f0ec6202" prot="public" virt="virtual"><scope>topefficiency</scope><name>write</name></member>
      <member refid="classselection__template_1a67768227c6c6a8e69edd0dc618a70eb9" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>write</name></member>
      <member refid="classselection__template_1a0983bf7c4582968c8c3b1a970fb3689e" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>write</name></member>
      <member refid="classselection__template_1af0b32265d850bfcd861a7f4744426856" prot="public" virt="virtual"><scope>topefficiency</scope><name>~selection_template</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>~tools</name></member>
      <member refid="classtopefficiency_1aa72225b48a63287c7b0c7edd8ca35887" prot="public" virt="non-virtual"><scope>topefficiency</scope><name>~topefficiency</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
