<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classaccuracy__metric" kind="class" language="C++" prot="public">
    <compoundname>accuracy_metric</compoundname>
    <basecompoundref refid="classmetric__template" prot="public" virt="non-virtual">metric_template</basecompoundref>
    <includes refid="accuracy_8h" local="no">accuracy.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaccuracy__metric_1a1038ddaa9c77a568c4ea040c0bc57065" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string accuracy_metric::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="20" column="21" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaccuracy__metric_1ae2515ef4633e4e3da52e49c928b90229" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long accuracy_metric::idx</definition>
        <argsstring></argsstring>
        <name>idx</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="21" column="14" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="21" bodyend="-1"/>
        <referencedby refid="classloader_1_1_mdx_1ac44370ba597112d3dc84358e0c204abb" compoundref="loader_8py" startline="10" endline="12">loader.Mdx.__str__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classaccuracy__metric_1aec0fe2be104b252e2c6109419f686929" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float accuracy_metric::edge_accuracy</definition>
        <argsstring></argsstring>
        <name>edge_accuracy</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="22" column="15" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaccuracy__metric_1ad9dd3aef124f4bcd04af334a62b7ad78" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float accuracy_metric::global_edge_accuracy</definition>
        <argsstring></argsstring>
        <name>global_edge_accuracy</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="23" column="15" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaccuracy__metric_1a04d81efd1819888c9b27f54339bfdee9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int accuracy_metric::ntop_truth</definition>
        <argsstring></argsstring>
        <name>ntop_truth</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="25" column="13" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaccuracy__metric_1ab3373823a7b1767daca6a00c034a6ea2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; accuracy_metric::ntop_scores</definition>
        <argsstring></argsstring>
        <name>ntop_scores</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="26" column="21" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaccuracy__metric_1ae97d015ce0da38b3bfeb8a3a2d3588e6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; accuracy_metric::ntops_accuracy</definition>
        <argsstring></argsstring>
        <name>ntops_accuracy</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="28" column="21" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaccuracy__metric_1a4eafc1251700d2bec7183cb0244cf8d4" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, int &gt;</type>
        <definition>std::map&lt;int, int&gt; accuracy_metric::_global_edge_accuracy</definition>
        <argsstring></argsstring>
        <name>_global_edge_accuracy</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="29" column="18" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaccuracy__metric_1a914da4ebb43235372d46378974a29c7d" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, std::map&lt; int, int &gt; &gt;</type>
        <definition>std::map&lt;int, std::map&lt;int, int&gt; &gt; accuracy_metric::ntop_accuracy</definition>
        <argsstring></argsstring>
        <name>ntop_accuracy</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="30" column="18" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaccuracy__metric_1abf2f46321e8309f51998d0efaac85bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>accuracy_metric::accuracy_metric</definition>
        <argsstring>()</argsstring>
        <name>accuracy_metric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="9" column="9" bodyfile="metrics/accuracy/cxx/accuracy.cxx" bodystart="5" bodyend="5"/>
        <references refid="classmetric__template_1a22f7ac23f74bbabee66b43d9d4aa5de7" compoundref="metric__template_8h" startline="103">metric_template::name</references>
        <referencedby refid="classaccuracy__metric_1a610c07495aa55a7acd4ac3b9cd19cedc" compoundref="accuracy_8cxx" startline="4" endline="4">clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classaccuracy__metric_1a05e5754ed515263aad238dbd541473d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>accuracy_metric::~accuracy_metric</definition>
        <argsstring>() override</argsstring>
        <name>~accuracy_metric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="10" column="9" bodyfile="metrics/accuracy/cxx/accuracy.cxx" bodystart="3" bodyend="3"/>
      </memberdef>
      <memberdef kind="function" id="classaccuracy__metric_1a610c07495aa55a7acd4ac3b9cd19cedc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classaccuracy__metric" kindref="compound">accuracy_metric</ref> *</type>
        <definition>accuracy_metric * accuracy_metric::clone</definition>
        <argsstring>() override</argsstring>
        <name>clone</name>
        <reimplements refid="classmetric__template_1ad4020c5c29a7944e9cadd244fd11e952">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="11" column="25" bodyfile="metrics/accuracy/cxx/accuracy.cxx" bodystart="4" bodyend="4"/>
        <references refid="classaccuracy__metric_1abf2f46321e8309f51998d0efaac85bf7" compoundref="accuracy_8cxx" startline="5" endline="5">accuracy_metric</references>
      </memberdef>
      <memberdef kind="function" id="classaccuracy__metric_1a6842a48f1db5613338dbe0d86fcf9b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void accuracy_metric::define_metric</definition>
        <argsstring>(metric_t *mtx) override</argsstring>
        <name>define_metric</name>
        <reimplements refid="classmetric__template_1a7c79f8e90e0acfe7797ce8a6cc778f63">define_metric</reimplements>
        <param>
          <type><ref refid="structmetric__t" kindref="compound">metric_t</ref> *</type>
          <declname>mtx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="13" column="14" bodyfile="metrics/accuracy/cxx/accuracy.cxx" bodystart="53" bodyend="100"/>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a056d3cfa6a17e1cb57fb271ce3e605a8">batch_index</references>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33">c</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7">edge_index</references>
        <references refid="classaccuracy__metric_1a92d1a978345aeb20733f4d0212129fda" compoundref="accuracy_8cxx" startline="36" endline="50">end</references>
        <references refid="classaccuracy__metric_1ad8b35afa20f2c8837be4279db06581bf" compoundref="accuracy_8cxx" startline="29" endline="33">event</references>
        <references refid="namespacesimply__plot_1ae6b2d2b1db104871d1383019db2999d2" compoundref="simply__plot_8py" startline="573">simply_plot.mtx</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a4117a55f36fe22f49efb240c3a64f219">pred_extra</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00">truth_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587">truth_graph</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classaccuracy__metric_1a9e33ae7dfbd4edcee007f99f26c90130" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void accuracy_metric::define_variables</definition>
        <argsstring>() override</argsstring>
        <name>define_variables</name>
        <reimplements refid="classmetric__template_1a0d9eaa5a83704589041d08b921c8d680">define_variables</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="14" column="14" bodyfile="metrics/accuracy/cxx/accuracy.cxx" bodystart="7" bodyend="27"/>
        <references refid="classmetric__template_1afb7814ecc901c36ada9b6bd974acab9a" compoundref="metric__template_8h" startline="82" endline="87">metric_template::register_output</references>
      </memberdef>
      <memberdef kind="function" id="classaccuracy__metric_1ad8b35afa20f2c8837be4279db06581bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void accuracy_metric::event</definition>
        <argsstring>() override</argsstring>
        <name>event</name>
        <reimplements refid="classmetric__template_1a9754a4fcfe4752ce8870f7b63d20d78b">event</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="15" column="14" bodyfile="metrics/accuracy/cxx/accuracy.cxx" bodystart="29" bodyend="33"/>
        <references refid="classmetric__template_1a63bef91cbc8d4212598aa40f028ffa19" compoundref="metric__template_8h" startline="90" endline="95">metric_template::write</references>
        <referencedby refid="classaccuracy__metric_1a6842a48f1db5613338dbe0d86fcf9b0b" compoundref="accuracy_8cxx" startline="53" endline="100">define_metric</referencedby>
      </memberdef>
      <memberdef kind="function" id="classaccuracy__metric_1a51c3a4ab4dc7f8ada5bb4fda24bc41ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void accuracy_metric::batch</definition>
        <argsstring>() override</argsstring>
        <name>batch</name>
        <reimplements refid="classmetric__template_1afa17b3adff9744ff2b25ad4e1443f829">batch</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="16" column="14" bodyfile="metrics/accuracy/cxx/accuracy.cxx" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classaccuracy__metric_1a92d1a978345aeb20733f4d0212129fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void accuracy_metric::end</definition>
        <argsstring>() override</argsstring>
        <name>end</name>
        <reimplements refid="classmetric__template_1abdaf01c257c4d00b3861432f34d10939">end</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="metrics/accuracy/include/metrics/accuracy.h" line="17" column="14" bodyfile="metrics/accuracy/cxx/accuracy.cxx" bodystart="36" bodyend="50"/>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33">c</references>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8fa14cdd754f91cc6554c9e71929cce7">f</references>
        <references refid="classmetric__template_1a63bef91cbc8d4212598aa40f028ffa19" compoundref="metric__template_8h" startline="90" endline="95">metric_template::write</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classaccuracy__metric_1a6842a48f1db5613338dbe0d86fcf9b0b" compoundref="accuracy_8cxx" startline="53" endline="100">define_metric</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>accuracy_metric</label>
        <link refid="classaccuracy__metric"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>metric_template</label>
        <link refid="classmetric__template"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>notification</label>
        <link refid="classnotification"/>
      </node>
      <node id="3">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12">
        <label>cproperty&lt; std::vector&lt; int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>meta</label>
        <link refid="classmeta"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>dsid</edgelabel>
          <edgelabel>nFiles</edgelabel>
          <edgelabel>datasetNumber</edgelabel>
          <edgelabel>totalEvents</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>cross_section_nb</edgelabel>
          <edgelabel>completion</edgelabel>
          <edgelabel>cross_section_fb</edgelabel>
          <edgelabel>ecmEnergy</edgelabel>
          <edgelabel>event_index</edgelabel>
          <edgelabel>sum_of_weights</edgelabel>
          <edgelabel>beam_energy</edgelabel>
          <edgelabel>cross_section_pb</edgelabel>
          <edgelabel>genFiltEff</edgelabel>
          <edgelabel>eventNumber</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>isMC</edgelabel>
          <edgelabel>found</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>cproperty&lt; unsigned int, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; unsigned int, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>accuracy_metric</label>
        <link refid="classaccuracy__metric"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>cproperty&lt; std::string, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::string, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>cproperty&lt; double, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; double, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>cproperty&lt; std::vector&lt; double &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; double &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>cproperty&lt; std::map&lt; int, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>cproperty&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>cproperty&lt; T, G &gt;</label>
        <link refid="classcproperty"/>
      </node>
      <node id="17">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>cproperty&lt; std::map&lt; int, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="23">
        <label>cproperty&lt; std::map&lt; std::string, std::string &gt;, metric_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, std::string &gt;, metric_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>metric_template</label>
        <link refid="classmetric__template"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>variables</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>meta_data</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>run_names</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>cproperty&lt; bool, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; bool, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>cproperty&lt; std::map&lt; std::string, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, metric_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, metric_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="5" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="7">
        <label>cproperty&lt; std::string, metric_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::string, metric_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>cproperty&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="metrics/accuracy/include/metrics/accuracy.h" line="7" column="1" bodyfile="metrics/accuracy/include/metrics/accuracy.h" bodystart="6" bodyend="31"/>
    <listofallmembers>
      <member refid="classaccuracy__metric_1a4eafc1251700d2bec7183cb0244cf8d4" prot="private" virt="non-virtual"><scope>accuracy_metric</scope><name>_global_edge_accuracy</name></member>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>absolute_path</name></member>
      <member refid="classaccuracy__metric_1abf2f46321e8309f51998d0efaac85bf7" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>accuracy_metric</name></member>
      <member refid="classaccuracy__metric_1a51c3a4ab4dc7f8ada5bb4fda24bc41ba" prot="public" virt="virtual"><scope>accuracy_metric</scope><name>batch</name></member>
      <member refid="classaccuracy__metric_1a610c07495aa55a7acd4ac3b9cd19cedc" prot="public" virt="virtual"><scope>accuracy_metric</scope><name>clone</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>create_path</name></member>
      <member refid="classnotification_1a8dd1ebb578269118b18bf7f0e176bf14" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>Debug</name></member>
      <member refid="classnotification_1aa14ded524569ac1d7fd121c161a733be" prot="protected" virt="non-virtual"><scope>accuracy_metric</scope><name>debug_mode</name></member>
      <member refid="classaccuracy__metric_1a6842a48f1db5613338dbe0d86fcf9b0b" prot="public" virt="virtual"><scope>accuracy_metric</scope><name>define_metric</name></member>
      <member refid="classaccuracy__metric_1a9e33ae7dfbd4edcee007f99f26c90130" prot="public" virt="virtual"><scope>accuracy_metric</scope><name>define_variables</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>delete_path</name></member>
      <member refid="classaccuracy__metric_1aec0fe2be104b252e2c6109419f686929" prot="private" virt="non-virtual"><scope>accuracy_metric</scope><name>edge_accuracy</name></member>
      <member refid="classaccuracy__metric_1a92d1a978345aeb20733f4d0212129fda" prot="public" virt="virtual"><scope>accuracy_metric</scope><name>end</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>ends_with</name></member>
      <member refid="classnotification_1ab0c3843575c157d799e532a9ea5acbd0" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>Error</name></member>
      <member refid="classaccuracy__metric_1ad8b35afa20f2c8837be4279db06581bf" prot="public" virt="virtual"><scope>accuracy_metric</scope><name>event</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>extract</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>flush</name></member>
      <member refid="classnotification_1ae25782afd10b3cb5fffe17afaf4fffc0" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>get_debug_mode</name></member>
      <member refid="classnotification_1aa0aad214cf167691e516ecc343306244" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>get_prefix</name></member>
      <member refid="classnotification_1a3a12e8eaf363a320abee5393436123f0" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>get_suppress_info</name></member>
      <member refid="classnotification_1ab53313e9343e9ef6deaefa2bdd3a837a" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>get_suppress_warning</name></member>
      <member refid="classaccuracy__metric_1ad9dd3aef124f4bcd04af334a62b7ad78" prot="private" virt="non-virtual"><scope>accuracy_metric</scope><name>global_edge_accuracy</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>has_value</name></member>
      <member refid="classaccuracy__metric_1ae2515ef4633e4e3da52e49c928b90229" prot="private" virt="non-virtual"><scope>accuracy_metric</scope><name>idx</name></member>
      <member refid="classnotification_1a2ea9e0828e3d323b5bb5cdecc8f018a8" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>Info</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>is_file</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>ls</name></member>
      <member refid="classnotification_1a47e2d300e33c44a24b0c51d9e9a83914" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>Message</name></member>
      <member refid="classmetric__template_1a8f90d670c9e752f9811366bbf5e7eba0" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>meta_data</name></member>
      <member refid="classmetric__template_1a4f076b39d712cc1ed944d25328bcc271" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>metric_template</name></member>
      <member refid="classaccuracy__metric_1a1038ddaa9c77a568c4ea040c0bc57065" prot="private" virt="non-virtual"><scope>accuracy_metric</scope><name>mode</name></member>
      <member refid="classmetric__template_1a22f7ac23f74bbabee66b43d9d4aa5de7" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>name</name></member>
      <member refid="classnotification_1a3ec5fe2d8db29cf32853858ff58fdbd7" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>notification</name></member>
      <member refid="classaccuracy__metric_1a914da4ebb43235372d46378974a29c7d" prot="private" virt="non-virtual"><scope>accuracy_metric</scope><name>ntop_accuracy</name></member>
      <member refid="classaccuracy__metric_1ab3373823a7b1767daca6a00c034a6ea2" prot="private" virt="non-virtual"><scope>accuracy_metric</scope><name>ntop_scores</name></member>
      <member refid="classaccuracy__metric_1a04d81efd1819888c9b27f54339bfdee9" prot="private" virt="non-virtual"><scope>accuracy_metric</scope><name>ntop_truth</name></member>
      <member refid="classaccuracy__metric_1ae97d015ce0da38b3bfeb8a3a2d3588e6" prot="private" virt="non-virtual"><scope>accuracy_metric</scope><name>ntops_accuracy</name></member>
      <member refid="classnotification_1a913d4c8a7736df782f900dd436cfeaa6" prot="protected" virt="non-virtual"><scope>accuracy_metric</scope><name>prefix</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>put</name></member>
      <member refid="classmetric__template_1afb7814ecc901c36ada9b6bd974acab9a" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>register_output</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>replace</name></member>
      <member refid="classmetric__template_1ab7ba181ab8b18f0c079e225512fe083d" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>run_names</name></member>
      <member refid="classnotification_1a5a69a50032f5dcf38bed2bb27dc048fc" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>set_debug_mode</name></member>
      <member refid="classnotification_1a575db6b2e3b67a7d679205600d83b576" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>set_prefix</name></member>
      <member refid="classnotification_1a58eec7023935cff9332ce21e58fc3f5a" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>set_suppress_info</name></member>
      <member refid="classnotification_1a9bb77ba73a5f25af292e9eea8a8de970" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>set_suppress_warning</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>split</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>sum</name></member>
      <member refid="classnotification_1a77a99c28092cf053b395805c75dde6da" prot="protected" virt="non-virtual"><scope>accuracy_metric</scope><name>suppress_info</name></member>
      <member refid="classnotification_1ab2d4ba20d7bc164eece8982b413eab13" prot="protected" virt="non-virtual"><scope>accuracy_metric</scope><name>suppress_warnings</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>to_string</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>tools</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>trim</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>type_name</name></member>
      <member refid="classmetric__template_1a5f67a91f401da56d4b805beb081a100e" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>variables</name></member>
      <member refid="classnotification_1ab758dafbb449e142fb68e11c0470b5c9" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>Warning</name></member>
      <member refid="classmetric__template_1a63bef91cbc8d4212598aa40f028ffa19" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>write</name></member>
      <member refid="classaccuracy__metric_1a05e5754ed515263aad238dbd541473d2" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>~accuracy_metric</name></member>
      <member refid="classmetric__template_1a647a82cbcca3c315a12cb3f3f906c5c8" prot="public" virt="virtual"><scope>accuracy_metric</scope><name>~metric_template</name></member>
      <member refid="classnotification_1a0b7272463b149418caf592e398cae64e" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>~notification</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>accuracy_metric</scope><name>~tools</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
