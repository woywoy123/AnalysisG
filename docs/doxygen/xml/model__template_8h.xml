<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="model__template_8h" kind="file" language="C++">
    <compoundname>model_template.h</compoundname>
    <includes local="no">torch/torch.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes refid="notification_8h" local="no">notification/notification.h</includes>
    <includes refid="tools_8h" local="no">tools/tools.h</includes>
    <includes refid="property_8h" local="no">structs/property.h</includes>
    <includes local="no">structs/graph.h</includes>
    <includes refid="model_8h" local="no">structs/model.h</includes>
    <includes local="no">lossfx/lossfx.h</includes>
    <includedby refid="grift_8h" local="no">grift.h</includedby>
    <includedby refid="_recursive_graph_neural_network_8h" local="no">RecursiveGraphNeuralNetwork.h</includedby>
    <includedby refid="analysis_8h" local="no">analysis.h</includedby>
    <includedby refid="dataloader_8cxx" local="no">dataloader.cxx</includedby>
    <includedby refid="metric_2cxx_2base_8cxx" local="no">base.cxx</includedby>
    <includedby refid="link_8cxx" local="no">link.cxx</includedby>
    <includedby refid="metric__template_8cxx" local="no">metric_template.cxx</includedby>
    <includedby refid="metrics_8h" local="no">metrics.h</includedby>
    <includedby refid="model__checks_8cxx" local="no">model_checks.cxx</includedby>
    <includedby refid="model__configuration_8cxx" local="no">model_configuration.cxx</includedby>
    <includedby refid="model__lossfx_8cxx" local="no">model_lossfx.cxx</includedby>
    <includedby refid="model__template_8cxx" local="no">model_template.cxx</includedby>
    <includedby refid="optimizer_2include_2generators_2optimizer_8h" local="no">optimizer.h</includedby>
    <includedby refid="_3model-name_4_8h" local="no"><model-name>.h</includedby>
    <incdepgraph>
      <node id="15">
        <label>lossfx/lossfx.h</label>
      </node>
      <node id="11">
        <label>functional</label>
      </node>
      <node id="13">
        <label>structs/model.h</label>
        <link refid="model_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>structs/graph.h</label>
      </node>
      <node id="14">
        <label>structs/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="6">
        <label>notification/notification.h</label>
        <link refid="notification_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>tools/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>torch/torch.h</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>model_template.h</label>
        <link refid="model__template_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>structs/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13">
        <label>optimizer_build.cxx</label>
        <link refid="optimizer__build_8cxx"/>
      </node>
      <node id="8">
        <label>event_build.cxx</label>
        <link refid="event__build_8cxx"/>
      </node>
      <node id="2">
        <label>grift.h</label>
        <link refid="grift_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>methods.cxx</label>
        <link refid="methods_8cxx"/>
      </node>
      <node id="17">
        <label>link.cxx</label>
        <link refid="link_8cxx"/>
      </node>
      <node id="29">
        <label>&lt;model-name&gt;.h</label>
        <link refid="_3model-name_4_8h"/>
      </node>
      <node id="22">
        <label>metrics.cxx</label>
        <link refid="metrics_8cxx"/>
      </node>
      <node id="26">
        <label>model_configuration.cxx</label>
        <link refid="model__configuration_8cxx"/>
      </node>
      <node id="19">
        <label>metrics.h</label>
        <link refid="metrics_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>RecursiveGraphNeuralNetwork.h</label>
        <link refid="_recursive_graph_neural_network_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>selection_build.cxx</label>
        <link refid="selection__build_8cxx"/>
      </node>
      <node id="5">
        <label>RecursiveGraphNeuralNetwork.cxx</label>
        <link refid="_recursive_graph_neural_network_8cxx"/>
      </node>
      <node id="24">
        <label>optimizer.cxx</label>
        <link refid="optimizer_2cxx_2optimizer_8cxx"/>
      </node>
      <node id="15">
        <label>dataloader.cxx</label>
        <link refid="dataloader_8cxx"/>
      </node>
      <node id="21">
        <label>mass_plots.cxx</label>
        <link refid="mass__plots_8cxx"/>
      </node>
      <node id="28">
        <label>model_template.cxx</label>
        <link refid="model__template_8cxx"/>
      </node>
      <node id="27">
        <label>model_lossfx.cxx</label>
        <link refid="model__lossfx_8cxx"/>
      </node>
      <node id="10">
        <label>inference_build.cxx</label>
        <link refid="inference__build_8cxx"/>
      </node>
      <node id="23">
        <label>optimizer.h</label>
        <link refid="optimizer_2include_2generators_2optimizer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>grift.cxx</label>
        <link refid="grift_8cxx"/>
      </node>
      <node id="25">
        <label>model_checks.cxx</label>
        <link refid="model__checks_8cxx"/>
      </node>
      <node id="16">
        <label>base.cxx</label>
        <link refid="metric_2cxx_2base_8cxx"/>
      </node>
      <node id="12">
        <label>metric_build.cxx</label>
        <link refid="metric__build_8cxx"/>
      </node>
      <node id="9">
        <label>graph_build.cxx</label>
        <link refid="graph__build_8cxx"/>
      </node>
      <node id="20">
        <label>loss_plots.cxx</label>
        <link refid="loss__plots_8cxx"/>
      </node>
      <node id="1">
        <label>model_template.h</label>
        <link refid="model__template_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>analysis.cxx</label>
        <link refid="analysis_8cxx"/>
      </node>
      <node id="18">
        <label>metric_template.cxx</label>
        <link refid="metric__template_8cxx"/>
      </node>
      <node id="6">
        <label>analysis.h</label>
        <link refid="analysis_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmodel__template" prot="public">model_template</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="model__template_8h_1a2bdda144f6bdb5227c579f0876081347" prot="public" static="no">
        <name>MODEL_TEMPLATE_H</name>
        <briefdescription>
<para>&lt; Start of include guard for MODEL_TEMPLATE_H to prevent multiple inclusions. </para>
        </briefdescription>
        <detaileddescription>
<para>Definition of MODEL_TEMPLATE_H to signify the header has been included. Includes PyTorch C++ frontend for deep learning. Includes the standard string library for string manipulation. Includes the standard vector container for sequence storage. Includes the standard map container for key-value associations. Includes the notification class for logging. Includes the tools class for utility functions. Includes the property template for custom property management. Includes the <ref refid="structgraph__t" kindref="compound">graph_t</ref> structure for graph data representation. Includes the <ref refid="structmodel__settings__t" kindref="compound">model_settings_t</ref> structure for model configuration. Includes the lossfx class for defining loss functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="12" column="9" bodyfile="modules/model/include/templates/model_template.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="model__template_8h_1a04569a45296869bf184d4b79d10487dd" prot="public" static="no" strong="no">
        <type></type>
        <name>mlp_init</name>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487ddaf93fa08fb4dd301b1e8d3ebeb32d07fe" prot="public">
          <name>xavier</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Xavier/Glorot initialization, balancing signal variance across layers. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487ddab2ca2fcd302a67a17a656ccc8151e8fa" prot="public">
          <name>kaiming</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Kaiming/He initialization, particularly good for ReLU activations. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487ddaebc81705969b8c5ae986b0b2ec08d1d5" prot="public">
          <name>normal</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Standard normal distribution initialization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487dda56013d9ac59a24fb94d9acb932a04b2f" prot="public">
          <name>uniform</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Uniform distribution initialization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487ddaa489ffed938ef1b9e86889bc413501ee" prot="public">
          <name>uniform</name>
          <briefdescription>
<para>Uniform initialization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487ddafea087517c26fadd409bd4b9dc642555" prot="public">
          <name>normal</name>
          <briefdescription>
<para>Normal (Gaussian) initialization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487dda46569d558799d5521dee1b9492ae97d7" prot="public">
          <name>xavier_normal</name>
          <briefdescription>
<para>Xavier/Glorot normal initialization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487ddaca77cd02f782fb385e2cc451f3b2918a" prot="public">
          <name>xavier_uniform</name>
          <briefdescription>
<para>Xavier/Glorot uniform initialization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487ddaa3168d42f87e37f681a0319b5f2cff8a" prot="public">
          <name>kaiming_uniform</name>
          <briefdescription>
<para>He/Kaiming uniform initialization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="model__template_8h_1a04569a45296869bf184d4b79d10487ddab341df97cd35fa754dcf86e9bfec7158" prot="public">
          <name>kaiming_normal</name>
          <briefdescription>
<para>He/Kaiming normal initialization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of initialization methods for neural network weights. </para>
        </briefdescription>
        <detaileddescription>
<para>Defines initialization methods for multi-layer perceptron weights.</para>
<para>This enumeration represents different strategies for initializing the weights of neural network layers, which can significantly affect training dynamics. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="30" column="14" bodyfile="modules/model/include/templates/model_template.h" bodystart="30" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines the base template class for machine learning models in the <ref refid="namespace_analysis_g" kindref="compound">AnalysisG</ref> framework. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the declaration of the <computeroutput><ref refid="classmodel__template" kindref="compound">model_template</ref></computeroutput> class, which serves as a base template for creating machine learning models. It defines a standard interface for model initialization, training, and inference, particularly for graph-based neural networks. The class handles model parameters, device placement, feature assignment, and forward propagation. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/>model_template.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Defines<sp/>the<sp/>base<sp/>template<sp/>class<sp/>for<sp/>machine<sp/>learning<sp/>models<sp/>in<sp/>the<sp/>AnalysisG<sp/>framework.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>declaration<sp/>of<sp/>the<sp/>`model_template`<sp/>class,<sp/>which<sp/>serves<sp/>as<sp/>a<sp/>base</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>template<sp/>for<sp/>creating<sp/>machine<sp/>learning<sp/>models.<sp/>It<sp/>defines<sp/>a<sp/>standard<sp/>interface<sp/>for<sp/>model</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>initialization,<sp/>training,<sp/>and<sp/>inference,<sp/>particularly<sp/>for<sp/>graph-based<sp/>neural<sp/>networks.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>The<sp/>class<sp/>handles<sp/>model<sp/>parameters,<sp/>device<sp/>placement,<sp/>feature<sp/>assignment,<sp/>and<sp/>forward<sp/>propagation.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MODEL_TEMPLATE_H<sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>of<sp/>include<sp/>guard<sp/>for<sp/>MODEL_TEMPLATE_H<sp/>to<sp/>prevent<sp/>multiple<sp/>inclusions.</highlight></codeline>
<codeline lineno="12" refid="model__template_8h_1a2bdda144f6bdb5227c579f0876081347" refkind="member"><highlight class="comment"></highlight><highlight class="normal">#define<sp/>MODEL_TEMPLATE_H<sp/></highlight><highlight class="comment">///&lt;<sp/>Definition<sp/>of<sp/>MODEL_TEMPLATE_H<sp/>to<sp/>signify<sp/>the<sp/>header<sp/>has<sp/>been<sp/>included.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/torch.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>PyTorch<sp/>C++<sp/>frontend<sp/>for<sp/>deep<sp/>learning.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>the<sp/>standard<sp/>string<sp/>library<sp/>for<sp/>string<sp/>manipulation.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>the<sp/>standard<sp/>vector<sp/>container<sp/>for<sp/>sequence<sp/>storage.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>the<sp/>standard<sp/>map<sp/>container<sp/>for<sp/>key-value<sp/>associations.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="notification_8h" kindref="compound">notification/notification.h</ref>&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>the<sp/>notification<sp/>class<sp/>for<sp/>logging.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tools_8h" kindref="compound">tools/tools.h</ref>&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>the<sp/>tools<sp/>class<sp/>for<sp/>utility<sp/>functions.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="property_8h" kindref="compound">structs/property.h</ref>&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>the<sp/>property<sp/>template<sp/>for<sp/>custom<sp/>property<sp/>management.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;structs/graph.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>the<sp/>graph_t<sp/>structure<sp/>for<sp/>graph<sp/>data<sp/>representation.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="model_8h" kindref="compound">structs/model.h</ref>&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>the<sp/>model_settings_t<sp/>structure<sp/>for<sp/>model<sp/>configuration.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;lossfx/lossfx.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">///&lt;<sp/>Includes<sp/>the<sp/>lossfx<sp/>class<sp/>for<sp/>defining<sp/>loss<sp/>functions.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>@enum<sp/>mlp_init</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Enumeration<sp/>of<sp/>initialization<sp/>methods<sp/>for<sp/>neural<sp/>network<sp/>weights.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="model__template_8h_1a04569a45296869bf184d4b79d10487dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="model__template_8h_1a04569a45296869bf184d4b79d10487dd" kindref="member">mlp_init</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="model__template_8h_1a04569a45296869bf184d4b79d10487ddaf93fa08fb4dd301b1e8d3ebeb32d07fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="model__template_8h_1a04569a45296869bf184d4b79d10487ddaf93fa08fb4dd301b1e8d3ebeb32d07fe" kindref="member">xavier</ref><sp/>=<sp/>0,<sp/></highlight><highlight class="comment">///&lt;<sp/>Xavier/Glorot<sp/>initialization,<sp/>balancing<sp/>signal<sp/>variance<sp/>across<sp/>layers.</highlight></codeline>
<codeline lineno="32" refid="model__template_8h_1a04569a45296869bf184d4b79d10487ddab2ca2fcd302a67a17a656ccc8151e8fa" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="model__template_8h_1a04569a45296869bf184d4b79d10487ddab2ca2fcd302a67a17a656ccc8151e8fa" kindref="member">kaiming</ref><sp/>=<sp/>1,<sp/></highlight><highlight class="comment">///&lt;<sp/>Kaiming/He<sp/>initialization,<sp/>particularly<sp/>good<sp/>for<sp/>ReLU<sp/>activations.</highlight></codeline>
<codeline lineno="33" refid="model__template_8h_1a04569a45296869bf184d4b79d10487ddaebc81705969b8c5ae986b0b2ec08d1d5" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="model__template_8h_1a04569a45296869bf184d4b79d10487ddaebc81705969b8c5ae986b0b2ec08d1d5" kindref="member">normal</ref><sp/>=<sp/>2,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Standard<sp/>normal<sp/>distribution<sp/>initialization.</highlight></codeline>
<codeline lineno="34" refid="model__template_8h_1a04569a45296869bf184d4b79d10487dda56013d9ac59a24fb94d9acb932a04b2f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="model__template_8h_1a04569a45296869bf184d4b79d10487dda56013d9ac59a24fb94d9acb932a04b2f" kindref="member">uniform</ref><sp/>=<sp/>3<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Uniform<sp/>distribution<sp/>initialization.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@class<sp/>model_template</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Base<sp/>template<sp/>class<sp/>for<sp/>machine<sp/>learning<sp/>models.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Inherits<sp/>from<sp/>`tools`<sp/>and<sp/>`notification`<sp/>to<sp/>provide<sp/>utility<sp/>functions<sp/>and<sp/>logging<sp/>capabilities.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>This<sp/>class<sp/>serves<sp/>as<sp/>a<sp/>foundation<sp/>for<sp/>implementing<sp/>various<sp/>neural<sp/>network<sp/>architectures,</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>with<sp/>particular<sp/>focus<sp/>on<sp/>graph<sp/>neural<sp/>networks.<sp/>It<sp/>provides<sp/>mechanisms<sp/>for<sp/>managing</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>model<sp/>parameters,<sp/>feature<sp/>assignment,<sp/>forward<sp/>propagation,<sp/>and<sp/>more.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classmodel__template" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmodel__template" kindref="compound">model_template</ref>:<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtools" kindref="compound">tools</ref>,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnotification" kindref="compound">notification</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Constructor<sp/>for<sp/>the<sp/>`model_template`<sp/>class.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Initializes<sp/>a<sp/>new<sp/>model<sp/>template<sp/>with<sp/>default<sp/>settings.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" kindref="member">model_template</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Virtual<sp/>destructor<sp/>for<sp/>the<sp/>`model_template`<sp/>class.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Ensures<sp/>proper<sp/>cleanup<sp/>of<sp/>resources,<sp/>including<sp/>module<sp/>containers<sp/>and<sp/>outputs.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ab6ce719a1c6262912927d4fc33e8842a" kindref="member">~model_template</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Creates<sp/>a<sp/>clone<sp/>of<sp/>the<sp/>model<sp/>template.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@return<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>new<sp/>model_template<sp/>instance<sp/>that<sp/>is<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>one.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmodel__template" kindref="compound">model_template</ref>*<sp/><ref refid="classmodel__template_1aa4342444b93659e670d921fcba9bd689" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Registers<sp/>a<sp/>PyTorch<sp/>sequential<sp/>module<sp/>with<sp/>the<sp/>model.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>sequential<sp/>module<sp/>to<sp/>register.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Adds<sp/>the<sp/>module<sp/>to<sp/>the<sp/>model&apos;s<sp/>collection<sp/>and<sp/>places<sp/>it<sp/>on<sp/>the<sp/>appropriate<sp/>device.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" kindref="member">register_module</ref>(torch::nn::Sequential*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Registers<sp/>a<sp/>PyTorch<sp/>sequential<sp/>module<sp/>with<sp/>the<sp/>model<sp/>and<sp/>initializes<sp/>its<sp/>weights.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>sequential<sp/>module<sp/>to<sp/>register.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>method<sp/>The<sp/>initialization<sp/>method<sp/>to<sp/>use<sp/>for<sp/>the<sp/>module&apos;s<sp/>weights.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Adds<sp/>the<sp/>module<sp/>to<sp/>the<sp/>model&apos;s<sp/>collection,<sp/>places<sp/>it<sp/>on<sp/>the<sp/>appropriate<sp/>device,</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>initializes<sp/>its<sp/>weights<sp/>according<sp/>to<sp/>the<sp/>specified<sp/>method.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" kindref="member">register_module</ref>(torch::nn::Sequential*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/><ref refid="model__template_8h_1a04569a45296869bf184d4b79d10487dd" kindref="member">mlp_init</ref><sp/><ref refid="namespacemain_1aa7f7a57dd94ac214b133aba964145812" kindref="member">method</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Virtual<sp/>forward<sp/>pass<sp/>method<sp/>for<sp/>a<sp/>single<sp/>graph.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>graph_t<sp/>structure<sp/>containing<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>method<sp/>should<sp/>be<sp/>overridden<sp/>by<sp/>derived<sp/>classes<sp/>to<sp/>implement<sp/>the<sp/>forward<sp/>pass<sp/>logic.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" kindref="member">forward</ref>(<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Forward<sp/>pass<sp/>for<sp/>a<sp/>single<sp/>graph<sp/>with<sp/>training<sp/>mode<sp/>flag.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>graph_t<sp/>structure<sp/>containing<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>train<sp/>Flag<sp/>indicating<sp/>if<sp/>the<sp/>model<sp/>is<sp/>in<sp/>training<sp/>mode<sp/>(true)<sp/>or<sp/>evaluation<sp/>mode<sp/>(false).</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Executes<sp/>the<sp/>model&apos;s<sp/>forward<sp/>pass<sp/>on<sp/>a<sp/>single<sp/>graph,<sp/>optionally<sp/>in<sp/>training<sp/>mode.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" kindref="member">forward</ref>(<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>train);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Forward<sp/>pass<sp/>for<sp/>multiple<sp/>graphs<sp/>with<sp/>training<sp/>mode<sp/>flag.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>data<sp/>Vector<sp/>of<sp/>pointers<sp/>to<sp/>graph_t<sp/>structures<sp/>containing<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>train<sp/>Flag<sp/>indicating<sp/>if<sp/>the<sp/>model<sp/>is<sp/>in<sp/>training<sp/>mode<sp/>(true)<sp/>or<sp/>evaluation<sp/>mode<sp/>(false).</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Executes<sp/>the<sp/>model&apos;s<sp/>forward<sp/>pass<sp/>on<sp/>multiple<sp/>graphs,<sp/>optionally<sp/>in<sp/>training<sp/>mode.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" kindref="member">forward</ref>(std::vector&lt;graph_t*&gt;<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>train);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Assigns<sp/>features<sp/>from<sp/>a<sp/>graph<sp/>to<sp/>tensors<sp/>based<sp/>on<sp/>feature<sp/>name<sp/>and<sp/>type.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>inpt<sp/>Feature<sp/>name<sp/>to<sp/>assign.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>type<sp/>Type<sp/>of<sp/>graph<sp/>component<sp/>(node,<sp/>edge,<sp/>or<sp/>graph).</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>the<sp/>graph_t<sp/>structure<sp/>containing<sp/>the<sp/>features.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>resulting<sp/>tensor<sp/>containing<sp/>the<sp/>assigned<sp/>features.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor*<sp/><ref refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" kindref="member">assign_features</ref>(std::string<sp/>inpt,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref><sp/>type,<sp/><ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Assigns<sp/>features<sp/>from<sp/>multiple<sp/>graphs<sp/>to<sp/>tensors<sp/>based<sp/>on<sp/>feature<sp/>name<sp/>and<sp/>type.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>inpt<sp/>Feature<sp/>name<sp/>to<sp/>assign.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>type<sp/>Type<sp/>of<sp/>graph<sp/>component<sp/>(node,<sp/>edge,<sp/>or<sp/>graph).</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>data<sp/>Pointer<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>graph_t<sp/>structures<sp/>containing<sp/>the<sp/>features.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>resulting<sp/>tensor<sp/>containing<sp/>the<sp/>assigned<sp/>features.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor*<sp/><ref refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" kindref="member">assign_features</ref>(std::string<sp/>inpt,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref><sp/>type,<sp/>std::vector&lt;graph_t*&gt;*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Clears<sp/>all<sp/>output<sp/>tensors,<sp/>freeing<sp/>memory.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Used<sp/>to<sp/>reset<sp/>the<sp/>model&apos;s<sp/>output<sp/>state<sp/>between<sp/>forward<sp/>passes.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" kindref="member">flush_outputs</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Property<sp/>declarations<sp/>for<sp/>various<sp/>model<sp/>settings<sp/>and<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcproperty" kindref="compound">cproperty&lt;std::string, model_template&gt;</ref><sp/><ref refid="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" kindref="member">name</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Property:<sp/>The<sp/>name<sp/>of<sp/>this<sp/>model.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@brief<sp/>Static<sp/>setter<sp/>for<sp/>the<sp/>`name`<sp/>property.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[in]<sp/>name<sp/>Pointer<sp/>to<sp/>a<sp/>string<sp/>containing<sp/>the<sp/>name.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[in]<sp/>model<sp/>Pointer<sp/>to<sp/>the<sp/>`model_template`<sp/>instance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ad1a321ec8ca5e79c79322c83ef70b7c5" kindref="member">set_name</ref>(std::string*<sp/><ref refid="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" kindref="member">name</ref>,<sp/><ref refid="classmodel__template" kindref="compound">model_template</ref>*<sp/><ref refid="namespacemodel" kindref="compound">model</ref>);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@brief<sp/>Static<sp/>getter<sp/>for<sp/>the<sp/>`name`<sp/>property.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[out]<sp/>name<sp/>Pointer<sp/>to<sp/>a<sp/>string<sp/>to<sp/>store<sp/>the<sp/>name.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[in]<sp/>model<sp/>Pointer<sp/>to<sp/>the<sp/>`model_template`<sp/>instance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1a3e2ae9bb1ff5cb88411fa35d04fbaf8b" kindref="member">get_name</ref>(std::string*<sp/><ref refid="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" kindref="member">name</ref>,<sp/><ref refid="classmodel__template" kindref="compound">model_template</ref>*<sp/><ref refid="namespacemodel" kindref="compound">model</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcproperty" kindref="compound">cproperty&lt;std::string, model_template&gt;</ref><sp/><ref refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" kindref="member">device</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Property:<sp/>The<sp/>device<sp/>this<sp/>model<sp/>runs<sp/>on<sp/>(e.g.,<sp/>&quot;cpu&quot;,<sp/>&quot;cuda:0&quot;).</highlight></codeline>
<codeline lineno="149"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@brief<sp/>Static<sp/>setter<sp/>for<sp/>the<sp/>`device`<sp/>property.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[in]<sp/>dev<sp/>Pointer<sp/>to<sp/>a<sp/>string<sp/>containing<sp/>the<sp/>device<sp/>name.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[in]<sp/>model<sp/>Pointer<sp/>to<sp/>the<sp/>`model_template`<sp/>instance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ad6ea8f7ffac83bd49123286ed4cd9fda" kindref="member">set_device</ref>(std::string*<sp/><ref refid="namespacemain_1a7036efb6f19b478d668e5ba8e23d215d" kindref="member">dev</ref>,<sp/><ref refid="classmodel__template" kindref="compound">model_template</ref>*<sp/><ref refid="namespacemodel" kindref="compound">model</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classmodel__template_1a72d13c3d3b7444e8d6a2a5e8d9b7969e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcproperty" kindref="compound">cproperty&lt;int, model_template&gt;</ref><sp/><ref refid="classmodel__template_1a72d13c3d3b7444e8d6a2a5e8d9b7969e" kindref="member">device_index</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Property:<sp/>The<sp/>numerical<sp/>index<sp/>of<sp/>the<sp/>device<sp/>this<sp/>model<sp/>runs<sp/>on.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@brief<sp/>Static<sp/>setter<sp/>for<sp/>the<sp/>`device_index`<sp/>property.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[in]<sp/>dev_idx<sp/>Pointer<sp/>to<sp/>an<sp/>integer<sp/>containing<sp/>the<sp/>device<sp/>index.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[in]<sp/>model<sp/>Pointer<sp/>to<sp/>the<sp/>`model_template`<sp/>instance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1ac4b5cf9bc73437cd847dc80cc5c1c75b" kindref="member">set_dev_index</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dev_idx,<sp/><ref refid="classmodel__template" kindref="compound">model_template</ref>*<sp/><ref refid="namespacemodel" kindref="compound">model</ref>);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@brief<sp/>Static<sp/>getter<sp/>for<sp/>the<sp/>`device_index`<sp/>property.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[out]<sp/>dev_idx<sp/>Pointer<sp/>to<sp/>an<sp/>integer<sp/>to<sp/>store<sp/>the<sp/>device<sp/>index.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param[in]<sp/>model<sp/>Pointer<sp/>to<sp/>the<sp/>`model_template`<sp/>instance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1a1ccf58b3ee8f6daa0e032fb316934cbd" kindref="member">get_dev_index</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dev_idx,<sp/><ref refid="classmodel__template" kindref="compound">model_template</ref>*<sp/><ref refid="namespacemodel" kindref="compound">model</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>feature<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classmodel__template_1aed99e1a8ff065523a63a0b816cfa2b65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcproperty" kindref="compound">cproperty&lt;std::vector&lt;std::string&gt;</ref>,<sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;&gt;<sp/><ref refid="classmodel__template_1aed99e1a8ff065523a63a0b816cfa2b65" kindref="member">i_graph</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Property:<sp/>Graph-level<sp/>input<sp/>features.</highlight></codeline>
<codeline lineno="166" refid="classmodel__template_1a08760c35dc8eff882f9b0d4e39c84ead" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcproperty" kindref="compound">cproperty&lt;std::vector&lt;std::string&gt;</ref>,<sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;&gt;<sp/><ref refid="classmodel__template_1a08760c35dc8eff882f9b0d4e39c84ead" kindref="member">i_node</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Property:<sp/>Node-level<sp/>input<sp/>features.</highlight></codeline>
<codeline lineno="167" refid="classmodel__template_1a7bcc136fa8a82e33800a2cef7b5f1dea" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcproperty" kindref="compound">cproperty&lt;std::vector&lt;std::string&gt;</ref>,<sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;&gt;<sp/><ref refid="classmodel__template_1a7bcc136fa8a82e33800a2cef7b5f1dea" kindref="member">i_edge</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Property:<sp/>Edge-level<sp/>input<sp/>features.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>feature<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classmodel__template_1a4d890527f81e130c4882941619e0008b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcproperty" kindref="compound">cproperty&lt;std::vector&lt;std::string&gt;</ref>,<sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;&gt;<sp/><ref refid="classmodel__template_1a4d890527f81e130c4882941619e0008b" kindref="member">o_graph</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Property:<sp/>Graph-level<sp/>output<sp/>features.</highlight></codeline>
<codeline lineno="171" refid="classmodel__template_1a11d6087907ddd31994bfad5f98583761" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcproperty" kindref="compound">cproperty&lt;std::vector&lt;std::string&gt;</ref>,<sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;&gt;<sp/><ref refid="classmodel__template_1a11d6087907ddd31994bfad5f98583761" kindref="member">o_node</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Property:<sp/>Node-level<sp/>output<sp/>features.</highlight></codeline>
<codeline lineno="172" refid="classmodel__template_1a4afc692af0708c956868caddf4645b13" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcproperty" kindref="compound">cproperty&lt;std::vector&lt;std::string&gt;</ref>,<sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;&gt;<sp/><ref refid="classmodel__template_1a4afc692af0708c956868caddf4645b13" kindref="member">o_edge</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Property:<sp/>Edge-level<sp/>output<sp/>features.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Sets<sp/>input<sp/>features<sp/>for<sp/>a<sp/>specific<sp/>feature<sp/>map.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>inpt<sp/>Pointer<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>strings<sp/>containing<sp/>feature<sp/>names.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>in_fx<sp/>Pointer<sp/>to<sp/>the<sp/>feature<sp/>map<sp/>to<sp/>set.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1a042ce754045343eade6e54d556854859" kindref="member">set_input_features</ref>(std::vector&lt;std::string&gt;*<sp/>inpt,<sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;*<sp/>in_fx);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Sets<sp/>output<sp/>features<sp/>for<sp/>a<sp/>specific<sp/>feature<sp/>map.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>inpt<sp/>Pointer<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>strings<sp/>containing<sp/>feature<sp/>names.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>in_fx<sp/>Pointer<sp/>to<sp/>the<sp/>feature<sp/>map<sp/>to<sp/>set.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classmodel__template_1a977402549135f0f763157b1282b44173" kindref="member">set_output_features</ref>(std::vector&lt;std::string&gt;*<sp/>inpt,<sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;*<sp/>in_fx);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>for<sp/>feature<sp/>maps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;<sp/><ref refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" kindref="member">m_i_graph</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Map<sp/>of<sp/>graph-level<sp/>input<sp/>features<sp/>to<sp/>tensors.</highlight></codeline>
<codeline lineno="190" refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;<sp/><ref refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" kindref="member">m_i_node</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Map<sp/>of<sp/>node-level<sp/>input<sp/>features<sp/>to<sp/>tensors.</highlight></codeline>
<codeline lineno="191" refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;<sp/><ref refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" kindref="member">m_i_edge</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Map<sp/>of<sp/>edge-level<sp/>input<sp/>features<sp/>to<sp/>tensors.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193" refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;<sp/><ref refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" kindref="member">m_o_graph</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Map<sp/>of<sp/>graph-level<sp/>output<sp/>features<sp/>to<sp/>tensors.</highlight></codeline>
<codeline lineno="194" refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;<sp/><ref refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" kindref="member">m_o_node</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Map<sp/>of<sp/>node-level<sp/>output<sp/>features<sp/>to<sp/>tensors.</highlight></codeline>
<codeline lineno="195" refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>torch::Tensor*&gt;<sp/><ref refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" kindref="member">m_o_edge</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Map<sp/>of<sp/>edge-level<sp/>output<sp/>features<sp/>to<sp/>tensors.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::TensorOptions*<sp/><ref refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" kindref="member">m_option</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>tensor<sp/>options<sp/>for<sp/>configuring<sp/>tensor<sp/>creation.</highlight></codeline>
<codeline lineno="198" refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;torch::nn::Sequential*&gt;<sp/><ref refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" kindref="member">m_data</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Vector<sp/>of<sp/>pointers<sp/>to<sp/>sequential<sp/>modules<sp/>in<sp/>the<sp/>model.</highlight></codeline>
<codeline lineno="199" refid="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlossfx" kindref="compound">lossfx</ref>*<sp/><ref refid="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" kindref="member">m_loss</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>loss<sp/>function<sp/>manager.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classmodel__template_1a95ac60e080148009edd1e00c3ed7fae7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classmodel__template_1a95ac60e080148009edd1e00c3ed7fae7" kindref="member">model_checkpoint_path</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Path<sp/>for<sp/>saving/loading<sp/>model<sp/>checkpoints.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">///&lt;<sp/>End<sp/>of<sp/>include<sp/>guard<sp/>for<sp/>MODEL_TEMPLATE_H.</highlight></codeline>
    </programlisting>
    <location file="modules/model/include/templates/model_template.h"/>
  </compounddef>
</doxygen>
