<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="merge__cast_8h" kind="file" language="C++">
    <compoundname>merge_cast.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includedby refid="metric__template_8h" local="no">metric_template.h</includedby>
    <includedby refid="selection__template_8h" local="no">selection_template.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>string</label>
      </node>
      <node id="4">
        <label>map</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="1">
        <label>merge_cast.h</label>
        <link refid="merge__cast_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14">
        <label>optimizer_build.cxx</label>
        <link refid="optimizer__build_8cxx"/>
      </node>
      <node id="26">
        <label>sampletracer.h</label>
        <link refid="sampletracer_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>event_build.cxx</label>
        <link refid="event__build_8cxx"/>
      </node>
      <node id="34">
        <label>met.cxx</label>
        <link refid="met_8cxx"/>
      </node>
      <node id="54">
        <label>zprime.cxx</label>
        <link refid="mc16_2zprime_2zprime_8cxx"/>
      </node>
      <node id="44">
        <label>parton.cxx</label>
        <link refid="parton_8cxx"/>
      </node>
      <node id="12">
        <label>methods.cxx</label>
        <link refid="methods_8cxx"/>
      </node>
      <node id="17">
        <label>link.cxx</label>
        <link refid="link_8cxx"/>
      </node>
      <node id="24">
        <label>container.cxx</label>
        <link refid="container_8cxx"/>
      </node>
      <node id="25">
        <label>entries.cxx</label>
        <link refid="entries_8cxx"/>
      </node>
      <node id="62">
        <label>topmatching.h</label>
        <link refid="mc20_2topmatching_2topmatching_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>toptruthjets.cxx</label>
        <link refid="toptruthjets_8cxx"/>
      </node>
      <node id="43">
        <label>parton.h</label>
        <link refid="parton_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>selection_template.h</label>
        <link refid="selection__template_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>accuracy.cxx</label>
        <link refid="accuracy_8cxx"/>
      </node>
      <node id="35">
        <label>childrenkinematics.h</label>
        <link refid="childrenkinematics_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>mc20_exp.cxx</label>
        <link refid="mc20__exp_8cxx"/>
      </node>
      <node id="2">
        <label>metric_template.h</label>
        <link refid="metric__template_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>toptruthjets.h</label>
        <link refid="toptruthjets_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>selection_build.cxx</label>
        <link refid="selection__build_8cxx"/>
      </node>
      <node id="61">
        <label>topkinematics.cxx</label>
        <link refid="mc20_2topkinematics_2topkinematics_8cxx"/>
      </node>
      <node id="29">
        <label>selection_core.cxx</label>
        <link refid="selection__core_8cxx"/>
      </node>
      <node id="20">
        <label>properties.cxx</label>
        <link refid="metric_2cxx_2properties_8cxx"/>
      </node>
      <node id="59">
        <label>mc20_ref.cxx</label>
        <link refid="mc20__ref_8cxx"/>
      </node>
      <node id="47">
        <label>topkinematics.h</label>
        <link refid="mc16_2topkinematics_2topkinematics_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>topjets.cxx</label>
        <link refid="topjets_8cxx"/>
      </node>
      <node id="68">
        <label>validation.h</label>
        <link refid="validation_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>accuracy.h</label>
        <link refid="accuracy_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>inference_build.cxx</label>
        <link refid="inference__build_8cxx"/>
      </node>
      <node id="72">
        <label>&lt;selection-name&gt;.h</label>
        <link refid="_3selection-name_4_8h"/>
      </node>
      <node id="5">
        <label>pagerank.h</label>
        <link refid="pagerank_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>decaymodes.cxx</label>
        <link refid="decaymodes_8cxx"/>
      </node>
      <node id="16">
        <label>base.cxx</label>
        <link refid="metric_2cxx_2base_8cxx"/>
      </node>
      <node id="69">
        <label>validation.cxx</label>
        <link refid="validation_8cxx"/>
      </node>
      <node id="65">
        <label>zprime.cxx</label>
        <link refid="mc20_2zprime_2zprime_8cxx"/>
      </node>
      <node id="40">
        <label>event.cxx</label>
        <link refid="events_2bsm__4tops_2cxx_2event_8cxx"/>
      </node>
      <node id="45">
        <label>topjets.h</label>
        <link refid="topjets_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>metric_build.cxx</label>
        <link refid="metric__build_8cxx"/>
      </node>
      <node id="21">
        <label>&lt;name&gt;.h</label>
        <link refid="_3name_4_8h"/>
      </node>
      <node id="50">
        <label>topmatching.cxx</label>
        <link refid="mc16_2topmatching_2topmatching_8cxx"/>
      </node>
      <node id="30">
        <label>selection_template.cxx</label>
        <link refid="selection__template_8cxx"/>
      </node>
      <node id="23">
        <label>container.h</label>
        <link refid="container_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>matching.h</label>
        <link refid="matching_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>zprime.h</label>
        <link refid="mc20_2zprime_2zprime_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>event.h</label>
        <link refid="selections_2mc16_2event_2event_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>topmatching.cxx</label>
        <link refid="mc20_2topmatching_2topmatching_8cxx"/>
      </node>
      <node id="1">
        <label>merge_cast.h</label>
        <link refid="merge__cast_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>graph_build.cxx</label>
        <link refid="graph__build_8cxx"/>
      </node>
      <node id="70">
        <label>topefficiency.h</label>
        <link refid="topefficiency_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>event.cxx</label>
        <link refid="selections_2mc16_2event_2event_8cxx"/>
      </node>
      <node id="27">
        <label>sampletracer.cxx</label>
        <link refid="sampletracer_8cxx"/>
      </node>
      <node id="49">
        <label>topmatching.h</label>
        <link refid="mc16_2topmatching_2topmatching_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>topkinematics.h</label>
        <link refid="mc20_2topkinematics_2topkinematics_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>combinatorial.h</label>
        <link refid="combinatorial_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>matching.cxx</label>
        <link refid="matching_8cxx"/>
      </node>
      <node id="41">
        <label>event.cxx</label>
        <link refid="events_2ssml__mc20_2cxx_2event_8cxx"/>
      </node>
      <node id="31">
        <label>regions.h</label>
        <link refid="regions_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>metric.cxx</label>
        <link refid="metric_8cxx"/>
      </node>
      <node id="8">
        <label>analysis.cxx</label>
        <link refid="analysis_8cxx"/>
      </node>
      <node id="48">
        <label>topkinematics.cxx</label>
        <link refid="mc16_2topkinematics_2topkinematics_8cxx"/>
      </node>
      <node id="67">
        <label>combinatorial.cxx</label>
        <link refid="combinatorial_8cxx"/>
      </node>
      <node id="33">
        <label>met.h</label>
        <link refid="met_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>topefficiency.cxx</label>
        <link refid="topefficiency_8cxx"/>
      </node>
      <node id="36">
        <label>childrenkinematics.cxx</label>
        <link refid="childrenkinematics_8cxx"/>
      </node>
      <node id="57">
        <label>mc16_ref.cxx</label>
        <link refid="mc16__ref_8cxx"/>
      </node>
      <node id="32">
        <label>regions.cxx</label>
        <link refid="regions_8cxx"/>
      </node>
      <node id="28">
        <label>properties.cxx</label>
        <link refid="selection_2cxx_2properties_8cxx"/>
      </node>
      <node id="19">
        <label>metric_template.cxx</label>
        <link refid="metric__template_8cxx"/>
      </node>
      <node id="6">
        <label>pagerank.cxx</label>
        <link refid="pagerank_8cxx"/>
      </node>
      <node id="53">
        <label>zprime.h</label>
        <link refid="mc16_2zprime_2zprime_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>decaymodes.h</label>
        <link refid="decaymodes_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>analysis.h</label>
        <link refid="analysis_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void merge_data</definition>
        <argsstring>(std::vector&lt; G &gt; *out, std::vector&lt; G &gt; *p2)</argsstring>
        <name>merge_data</name>
        <param>
          <type>std::vector&lt; G &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::vector&lt; G &gt; *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="9" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="9" bodyend="11"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <referencedby refid="classdecaymodes_1a65b4213eb7aa8ede49b8113064824f99" compoundref="decaymodes_8cxx" startline="29" endline="42">decaymodes::merge</referencedby>
        <referencedby refid="classmet_1a53a217f21ee3d8969f6125e58254971c" compoundref="met_8cxx" startline="10" endline="13">met::merge</referencedby>
        <referencedby refid="classtopjets_1a6d490674013bf38deb85e41d31aa2b9a" compoundref="topjets_8cxx" startline="10" endline="18">topjets::merge</referencedby>
        <referencedby refid="classtoptruthjets_1acc1a029bbab73d3c6bc2a121ee64def2" compoundref="toptruthjets_8cxx" startline="10" endline="18">toptruthjets::merge</referencedby>
        <referencedby refid="classparton_1ad1c47645aa3bfaf68c1bd33e6bf069d9" compoundref="parton_8cxx" startline="10" endline="26">parton::merge</referencedby>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">topefficiency::merge</referencedby>
        <referencedby refid="classregions_1aefc0916bc31bfb139b311846a0e33c3a" compoundref="regions_8cxx" startline="10" endline="45">regions::merge</referencedby>
        <referencedby refid="classcombinatorial_1afcb3e3c3c11238a745f3e591162a7ae0" compoundref="combinatorial_8cxx" startline="20" endline="39">combinatorial::merge</referencedby>
        <referencedby refid="merge__cast_8h_1ae137607c46405e7e2c40786984696a32" compoundref="merge__cast_8h" startline="17" endline="20">merge_data</referencedby>
        <referencedby refid="classmatching_1a7c3eb589ac6ae85490aa698d73fe8b88" compoundref="mc16__ref_8cxx" startline="4" endline="114">matching::reference</referencedby>
        <referencedby refid="classtopmatching_1acbf5d299785f024b7a4b5bd92bbfcd6f" compoundref="mc16_2topmatching_2topmatching_8cxx" startline="33" endline="104">topmatching::strategy</referencedby>
        <referencedby refid="classdecaymodes_1abfec366758f5b7885063a349cfcda394" compoundref="decaymodes_8cxx" startline="59" endline="210">decaymodes::strategy</referencedby>
        <referencedby refid="classzprime_1a36b1544f00cc1a4ed703ef304f923ea8" compoundref="mc16_2zprime_2zprime_8cxx" startline="30" endline="83">zprime::strategy</referencedby>
        <referencedby refid="classtoptruthjets_1a39c1afcec2800b351fc047fbfa4f009f" compoundref="toptruthjets_8cxx" startline="22" endline="163">toptruthjets::strategy</referencedby>
        <referencedby refid="classtopjets_1a72145e79c19febe5393d17220c980e2a" compoundref="topjets_8cxx" startline="22" endline="163">topjets::strategy</referencedby>
        <referencedby refid="classvalidation_1af388ba0e867008a75602581fdc2ed0f3" compoundref="validation_8cxx" startline="136" endline="197">validation::strategy</referencedby>
        <referencedby refid="classchildrenkinematics_1a9dfe1425443601d0af03eab580722b76" compoundref="childrenkinematics_8cxx" startline="121" endline="243">childrenkinematics::strategy</referencedby>
        <referencedby refid="classcombinatorial_1a5cd8d199d3f8fe6c9f0b8e1c2e2f7bfd" compoundref="combinatorial_8cxx" startline="154" endline="229">combinatorial::strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1a0014316f5d80b653296fd84aed32a032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void merge_data</definition>
        <argsstring>(G *out, G *p2)</argsstring>
        <name>merge_data</name>
        <param>
          <type>G *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>G *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="14" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1ae137607c46405e7e2c40786984696a32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
          <param>
            <type>typename G</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void merge_data</definition>
        <argsstring>(std::map&lt; g, G &gt; *out, std::map&lt; g, G &gt; *p2)</argsstring>
        <name>merge_data</name>
        <param>
          <type>std::map&lt; g, G &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::map&lt; g, G &gt; *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="17" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="17" bodyend="20"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" compoundref="merge__cast_8h" startline="9" endline="11">merge_data</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sum_data</definition>
        <argsstring>(G *out, G *p2)</argsstring>
        <name>sum_data</name>
        <param>
          <type>G *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>G *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="24" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="24" bodyend="24"/>
        <referencedby refid="classdecaymodes_1a65b4213eb7aa8ede49b8113064824f99" compoundref="decaymodes_8cxx" startline="29" endline="42">decaymodes::merge</referencedby>
        <referencedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" compoundref="topefficiency_8cxx" startline="16" endline="49">topefficiency::merge</referencedby>
        <referencedby refid="merge__cast_8h_1aa0782a3dc150f9ff00323eb872ec417f" compoundref="merge__cast_8h" startline="32" endline="35">sum_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1a450bf7d0337071779d7f200a7d73a6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sum_data</definition>
        <argsstring>(std::vector&lt; G &gt; *out, std::vector&lt; G &gt; *p2)</argsstring>
        <name>sum_data</name>
        <param>
          <type>std::vector&lt; G &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::vector&lt; G &gt; *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="27" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="27" bodyend="29"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1aa0782a3dc150f9ff00323eb872ec417f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
          <param>
            <type>typename G</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sum_data</definition>
        <argsstring>(std::map&lt; g, G &gt; *out, std::map&lt; g, G &gt; *p2)</argsstring>
        <name>sum_data</name>
        <param>
          <type>std::map&lt; g, G &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::map&lt; g, G &gt; *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="32" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="32" bodyend="35"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" compoundref="merge__cast_8h" startline="24" endline="24">sum_data</references>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1a038699fe5eb12405a92cab2300b5a62e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void reserve_count</definition>
        <argsstring>(g *inp, long *ix)</argsstring>
        <name>reserve_count</name>
        <param>
          <type>g *</type>
          <declname>inp</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>ix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="39" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="39" bodyend="39"/>
        <referencedby refid="merge__cast_8h_1ad1bdb8ec0ae072760a395bb19165807e" compoundref="merge__cast_8h" startline="56" endline="61">contract_data</referencedby>
        <referencedby refid="merge__cast_8h_1afad517d4d28db3a38ccecc2e8ae63142" compoundref="merge__cast_8h" startline="42" endline="44">reserve_count</referencedby>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1afad517d4d28db3a38ccecc2e8ae63142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void reserve_count</definition>
        <argsstring>(std::vector&lt; g &gt; *inp, long *ix)</argsstring>
        <name>reserve_count</name>
        <param>
          <type>std::vector&lt; g &gt; *</type>
          <declname>inp</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>ix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="42" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="42" bodyend="44"/>
        <references refid="merge__cast_8h_1a038699fe5eb12405a92cab2300b5a62e" compoundref="merge__cast_8h" startline="39" endline="39">reserve_count</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1acd9a5341808f2b6416c6c1c9b0fb7d35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void contract_data</definition>
        <argsstring>(std::vector&lt; g &gt; *out, g *p2)</argsstring>
        <name>contract_data</name>
        <param>
          <type>std::vector&lt; g &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>g *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="47" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="47" bodyend="47"/>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <referencedby refid="merge__cast_8h_1ab81a13cf465b2bdd05d9eec11cfae874" compoundref="merge__cast_8h" startline="50" endline="52">contract_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1ab81a13cf465b2bdd05d9eec11cfae874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void contract_data</definition>
        <argsstring>(std::vector&lt; g &gt; *out, std::vector&lt; g &gt; *p2)</argsstring>
        <name>contract_data</name>
        <param>
          <type>std::vector&lt; g &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::vector&lt; g &gt; *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="50" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="50" bodyend="52"/>
        <references refid="merge__cast_8h_1acd9a5341808f2b6416c6c1c9b0fb7d35" compoundref="merge__cast_8h" startline="47" endline="47">contract_data</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
      </memberdef>
      <memberdef kind="function" id="merge__cast_8h_1ad1bdb8ec0ae072760a395bb19165807e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void contract_data</definition>
        <argsstring>(std::vector&lt; g &gt; *out, std::vector&lt; std::vector&lt; g &gt;&gt; *p2)</argsstring>
        <name>contract_data</name>
        <param>
          <type>std::vector&lt; g &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; g &gt;&gt; *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/typecasting/include/tools/merge_cast.h" line="56" column="6" bodyfile="modules/typecasting/include/tools/merge_cast.h" bodystart="56" bodyend="61"/>
        <references refid="merge__cast_8h_1acd9a5341808f2b6416c6c1c9b0fb7d35" compoundref="merge__cast_8h" startline="47" endline="47">contract_data</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="merge__cast_8h_1a038699fe5eb12405a92cab2300b5a62e" compoundref="merge__cast_8h" startline="39" endline="39">reserve_count</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TYPECASTING_MERGE_CAST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPECASTING_MERGE_CAST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="9" refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(std::vector&lt;G&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>std::vector&lt;G&gt;*<sp/>p2){</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/>insert(<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>(),<sp/>p2<sp/>-&gt;<sp/>begin(),<sp/>p2<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>());<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="14" refid="merge__cast_8h_1a0014316f5d80b653296fd84aed32a032" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(G*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>G*<sp/>p2){(*out)<sp/>=<sp/>*p2;}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="17" refid="merge__cast_8h_1ae137607c46405e7e2c40786984696a32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(std::map&lt;g,<sp/>G&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>std::map&lt;g,<sp/>G&gt;*<sp/>p2){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;g,<sp/>G&gt;::iterator<sp/>itr<sp/>=<sp/>p2<sp/>-&gt;<sp/>begin();<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/>p2<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++itr){<ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;(*<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>)[itr<sp/>-&gt;<sp/>first],<sp/>&amp;itr<sp/>-&gt;<sp/>second);}<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="24" refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(G*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>G*<sp/>p2){(*out)<sp/>+=<sp/>(*p2);}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="27" refid="merge__cast_8h_1a450bf7d0337071779d7f200a7d73a6fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(std::vector&lt;G&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>std::vector&lt;G&gt;*<sp/>p2){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/>insert(<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>(),<sp/>p2<sp/>-&gt;<sp/>begin(),<sp/>p2<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>());<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="32" refid="merge__cast_8h_1aa0782a3dc150f9ff00323eb872ec417f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(std::map&lt;g,<sp/>G&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>std::map&lt;g,<sp/>G&gt;*<sp/>p2){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;g,<sp/>G&gt;::iterator<sp/>itr<sp/>=<sp/>p2<sp/>-&gt;<sp/>begin();<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/>p2<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++itr){<ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(&amp;(*<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>)[itr<sp/>-&gt;<sp/>first],<sp/>&amp;itr<sp/>-&gt;<sp/>second);}<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>g&gt;</highlight></codeline>
<codeline lineno="39" refid="merge__cast_8h_1a038699fe5eb12405a92cab2300b5a62e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1a038699fe5eb12405a92cab2300b5a62e" kindref="member">reserve_count</ref>(g*<sp/>inp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>ix){*ix<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>g&gt;</highlight></codeline>
<codeline lineno="42" refid="merge__cast_8h_1afad517d4d28db3a38ccecc2e8ae63142" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1a038699fe5eb12405a92cab2300b5a62e" kindref="member">reserve_count</ref>(std::vector&lt;g&gt;*<sp/>inp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>ix){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>inp<sp/>-&gt;<sp/>size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){<ref refid="merge__cast_8h_1a038699fe5eb12405a92cab2300b5a62e" kindref="member">reserve_count</ref>(&amp;inp<sp/>-&gt;<sp/>at(<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>),<sp/>ix);}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>g&gt;</highlight></codeline>
<codeline lineno="47" refid="merge__cast_8h_1acd9a5341808f2b6416c6c1c9b0fb7d35" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1acd9a5341808f2b6416c6c1c9b0fb7d35" kindref="member">contract_data</ref>(std::vector&lt;g&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>g*<sp/>p2){<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/>push_back(*p2);}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>g&gt;</highlight></codeline>
<codeline lineno="50" refid="merge__cast_8h_1ab81a13cf465b2bdd05d9eec11cfae874" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1acd9a5341808f2b6416c6c1c9b0fb7d35" kindref="member">contract_data</ref>(std::vector&lt;g&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>std::vector&lt;g&gt;*<sp/>p2){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>p2<sp/>-&gt;<sp/>size();<sp/>++i){<ref refid="merge__cast_8h_1acd9a5341808f2b6416c6c1c9b0fb7d35" kindref="member">contract_data</ref>(<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>&amp;p2<sp/>-&gt;<sp/>at(i));}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>g&gt;</highlight></codeline>
<codeline lineno="56" refid="merge__cast_8h_1ad1bdb8ec0ae072760a395bb19165807e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge__cast_8h_1acd9a5341808f2b6416c6c1c9b0fb7d35" kindref="member">contract_data</ref>(std::vector&lt;g&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;g&gt;&gt;*<sp/>p2){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a038699fe5eb12405a92cab2300b5a62e" kindref="member">reserve_count</ref>(p2,<sp/>&amp;ix);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/>reserve(ix);<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>p2<sp/>-&gt;<sp/>size();<sp/>++i){<ref refid="merge__cast_8h_1acd9a5341808f2b6416c6c1c9b0fb7d35" kindref="member">contract_data</ref>(<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>&amp;p2<sp/>-&gt;<sp/>at(i));}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="modules/typecasting/include/tools/merge_cast.h"/>
  </compounddef>
</doxygen>
