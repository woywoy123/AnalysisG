<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structmodel__settings__t" kind="struct" language="C++" prot="public">
    <compoundname>model_settings_t</compoundname>
    <includes refid="model_8h" local="no">model.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmodel__settings__t_1a3c016c9792637bd1dc3f2988d83066bc" prot="public" static="no" mutable="no">
        <type><ref refid="enums_8h_1a090b1946b276b3292ab70edc3bf1e65d" kindref="member">opt_enum</ref></type>
        <definition>opt_enum model_settings_t::e_optim</definition>
        <argsstring></argsstring>
        <name>e_optim</name>
        <briefdescription>
<para>Optimizer type as an enumerated value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="28" column="17" bodyfile="modules/structs/include/structs/model.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a68c9d634c7c8fc75bca2aad1c83d9685" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string model_settings_t::s_optim</definition>
        <argsstring></argsstring>
        <name>s_optim</name>
        <briefdescription>
<para>Optimizer type as a string representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="29" column="17" bodyfile="modules/structs/include/structs/model.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a455ff09c35cf9e9580cd7a940c0a5d46" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string model_settings_t::weight_name</definition>
        <argsstring></argsstring>
        <name>weight_name</name>
        <briefdescription>
<para>Name of weight file to use for the model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="31" column="17" bodyfile="modules/structs/include/structs/model.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a8ca4c6f42c8a420e7c446b6af8d3654f" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string model_settings_t::tree_name</definition>
        <argsstring></argsstring>
        <name>tree_name</name>
        <briefdescription>
<para>Name of the tree to use for training/inference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="32" column="17" bodyfile="modules/structs/include/structs/model.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a2e4404a9dc62ef413839655f829e9829" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string model_settings_t::model_name</definition>
        <argsstring></argsstring>
        <name>model_name</name>
        <briefdescription>
<para>Unique identifier for the model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="34" column="17" bodyfile="modules/structs/include/structs/model.h" bodystart="34" bodyend="-1"/>
        <referencedby refid="structmodel__settings__t_1a220b4b928e4aeb2fcdd5446d6c8c410e" compoundref="model_8h" startline="58" endline="60">validate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a73543125e252c7cdf15cbaf0c6560700" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string model_settings_t::model_device</definition>
        <argsstring></argsstring>
        <name>model_device</name>
        <briefdescription>
<para>Device to use for model execution (e.g., &quot;cpu&quot;, &quot;cuda:0&quot;). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="35" column="17" bodyfile="modules/structs/include/structs/model.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a09a9663f561d699b06da7753072288ca" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string model_settings_t::model_checkpoint_path</definition>
        <argsstring></argsstring>
        <name>model_checkpoint_path</name>
        <briefdescription>
<para>Path where model checkpoints will be saved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="36" column="17" bodyfile="modules/structs/include/structs/model.h" bodystart="36" bodyend="-1"/>
        <referencedby refid="structmodel__settings__t_1a220b4b928e4aeb2fcdd5446d6c8c410e" compoundref="model_8h" startline="58" endline="60">validate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1ab97f945572d9df52ff14c4cb37b5b6d0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool model_settings_t::binary_classification</definition>
        <argsstring></argsstring>
        <name>binary_classification</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Flag indicating if the model performs binary classification. Default is true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="38" column="10" bodyfile="modules/structs/include/structs/model.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1ac396f8fed2690f1d6fe6591682370667" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; model_settings_t::i_graph_features</definition>
        <argsstring></argsstring>
        <name>i_graph_features</name>
        <briefdescription>
<para>Mapping of input graph feature names to their actual source names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="41" column="14" bodyfile="modules/structs/include/structs/model.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1ae8772e392ea40705faef5234a3870242" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; model_settings_t::i_node_features</definition>
        <argsstring></argsstring>
        <name>i_node_features</name>
        <briefdescription>
<para>Mapping of input node feature names to their actual source names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="42" column="14" bodyfile="modules/structs/include/structs/model.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1af7b6d3728f35ebb1fb70574ca3d0c7ea" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; model_settings_t::i_edge_features</definition>
        <argsstring></argsstring>
        <name>i_edge_features</name>
        <briefdescription>
<para>Mapping of input edge feature names to their actual source names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="43" column="14" bodyfile="modules/structs/include/structs/model.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a3d6ed2b8851e705de833df36a530863c" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; model_settings_t::o_graph_features</definition>
        <argsstring></argsstring>
        <name>o_graph_features</name>
        <briefdescription>
<para>Mapping of output graph feature names to their target names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="45" column="14" bodyfile="modules/structs/include/structs/model.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a2f68609ef59205537db2862ae8d7670d" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; model_settings_t::o_node_features</definition>
        <argsstring></argsstring>
        <name>o_node_features</name>
        <briefdescription>
<para>Mapping of output node feature names to their target names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="46" column="14" bodyfile="modules/structs/include/structs/model.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a0e57736009671cccc0e1cb48413f261e" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; model_settings_t::o_edge_features</definition>
        <argsstring></argsstring>
        <name>o_edge_features</name>
        <briefdescription>
<para>Mapping of output edge feature names to their target names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="47" column="14" bodyfile="modules/structs/include/structs/model.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1aa840480a8e710f725b39c76a37d56495" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, int &gt;</type>
        <definition>std::map&lt;std::string, int&gt; model_settings_t::model_integers</definition>
        <argsstring></argsstring>
        <name>model_integers</name>
        <briefdescription>
<para>Integer parameters for the model (e.g., layer sizes, feature counts). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="50" column="14" bodyfile="modules/structs/include/structs/model.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a63e2e541a0fd46c0bb885ff01d1349bf" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, float &gt;</type>
        <definition>std::map&lt;std::string, float&gt; model_settings_t::model_floats</definition>
        <argsstring></argsstring>
        <name>model_floats</name>
        <briefdescription>
<para>Float parameters for the model (e.g., learning rates, regularization factors). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="51" column="14" bodyfile="modules/structs/include/structs/model.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodel__settings__t_1a87945a10b634abd02a79035d92f70f86" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; model_settings_t::model_strings</definition>
        <argsstring></argsstring>
        <name>model_strings</name>
        <briefdescription>
<para>String parameters for the model (e.g., activation functions, layer types). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="52" column="14" bodyfile="modules/structs/include/structs/model.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmodel__settings__t_1a220b4b928e4aeb2fcdd5446d6c8c410e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool model_settings_t::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
<para>Validates the model settings to ensure all required parameters are set. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the settings are valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/structs/include/structs/model.h" line="58" column="10" bodyfile="modules/structs/include/structs/model.h" bodystart="58" bodyend="60"/>
        <references refid="structmodel__settings__t_1a09a9663f561d699b06da7753072288ca" compoundref="model_8h" startline="36">model_checkpoint_path</references>
        <references refid="structmodel__settings__t_1a2e4404a9dc62ef413839655f829e9829" compoundref="model_8h" startline="34">model_name</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure for storing model configuration settings. </para>
    </briefdescription>
    <detaileddescription>
<para>This structure holds various parameters that define how a machine learning model should be configured and trained. It includes settings for the optimizer, paths for checkpoints, device selection, and mappings for input and output features. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>K</label>
      </node>
      <node id="7">
        <label>T</label>
      </node>
      <node id="1">
        <label>model_settings_t</label>
        <link refid="structmodel__settings__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>model_integers</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>model_floats</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>i_node_features</edgelabel>
          <edgelabel>i_edge_features</edgelabel>
          <edgelabel>o_node_features</edgelabel>
          <edgelabel>o_graph_features</edgelabel>
          <edgelabel>o_edge_features</edgelabel>
          <edgelabel>model_strings</edgelabel>
          <edgelabel>i_graph_features</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>s_optim</edgelabel>
          <edgelabel>model_checkpoint_path</edgelabel>
          <edgelabel>model_device</edgelabel>
          <edgelabel>tree_name</edgelabel>
          <edgelabel>weight_name</edgelabel>
          <edgelabel>model_name</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="9">
        <label>std::map&lt; std::string, std::string &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>keys</edgelabel>
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; std::string, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::map&lt; std::string, float &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; std::string, float &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::map&lt; std::string, int &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; std::string, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/structs/include/structs/model.h" line="27" column="23" bodyfile="modules/structs/include/structs/model.h" bodystart="27" bodyend="61"/>
    <listofallmembers>
      <member refid="structmodel__settings__t_1ab97f945572d9df52ff14c4cb37b5b6d0" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>binary_classification</name></member>
      <member refid="structmodel__settings__t_1a3c016c9792637bd1dc3f2988d83066bc" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>e_optim</name></member>
      <member refid="structmodel__settings__t_1af7b6d3728f35ebb1fb70574ca3d0c7ea" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>i_edge_features</name></member>
      <member refid="structmodel__settings__t_1ac396f8fed2690f1d6fe6591682370667" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>i_graph_features</name></member>
      <member refid="structmodel__settings__t_1ae8772e392ea40705faef5234a3870242" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>i_node_features</name></member>
      <member refid="structmodel__settings__t_1a09a9663f561d699b06da7753072288ca" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>model_checkpoint_path</name></member>
      <member refid="structmodel__settings__t_1a73543125e252c7cdf15cbaf0c6560700" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>model_device</name></member>
      <member refid="structmodel__settings__t_1a63e2e541a0fd46c0bb885ff01d1349bf" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>model_floats</name></member>
      <member refid="structmodel__settings__t_1aa840480a8e710f725b39c76a37d56495" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>model_integers</name></member>
      <member refid="structmodel__settings__t_1a2e4404a9dc62ef413839655f829e9829" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>model_name</name></member>
      <member refid="structmodel__settings__t_1a87945a10b634abd02a79035d92f70f86" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>model_strings</name></member>
      <member refid="structmodel__settings__t_1a0e57736009671cccc0e1cb48413f261e" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>o_edge_features</name></member>
      <member refid="structmodel__settings__t_1a3d6ed2b8851e705de833df36a530863c" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>o_graph_features</name></member>
      <member refid="structmodel__settings__t_1a2f68609ef59205537db2862ae8d7670d" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>o_node_features</name></member>
      <member refid="structmodel__settings__t_1a68c9d634c7c8fc75bca2aad1c83d9685" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>s_optim</name></member>
      <member refid="structmodel__settings__t_1a8ca4c6f42c8a420e7c446b6af8d3654f" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>tree_name</name></member>
      <member refid="structmodel__settings__t_1a220b4b928e4aeb2fcdd5446d6c8c410e" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>validate</name></member>
      <member refid="structmodel__settings__t_1a455ff09c35cf9e9580cd7a940c0a5d46" prot="public" virt="non-virtual"><scope>model_settings_t</scope><name>weight_name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
