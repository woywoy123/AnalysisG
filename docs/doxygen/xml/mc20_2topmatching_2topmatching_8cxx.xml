<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="mc20_2topmatching_2topmatching_8cxx" kind="file" language="C++">
    <compoundname>mc20/topmatching/topmatching.cxx</compoundname>
    <includes refid="mc20_2topmatching_2topmatching_8h" local="yes">topmatching.h</includes>
    <incdepgraph>
      <node id="20">
        <label>c10/core/DeviceType.h</label>
      </node>
      <node id="11">
        <label>functional</label>
      </node>
      <node id="18">
        <label>TTreeReader.h</label>
      </node>
      <node id="31">
        <label>templates/event_template.h</label>
        <link refid="event__template_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>structs/element.h</label>
        <link refid="element_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>tools/vector_cast.h</label>
        <link refid="vector__cast_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>TTreeReaderArray.h</label>
      </node>
      <node id="27">
        <label>cstdint</label>
      </node>
      <node id="5">
        <label>templates/particle_template.h</label>
        <link refid="particle__template_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>topmatching.h</label>
        <link refid="mc20_2topmatching_2topmatching_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>templates/selection_template.h</label>
        <link refid="selection__template_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>structs/folds.h</label>
        <link refid="folds_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>cmath</label>
      </node>
      <node id="24">
        <label>structs/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="32">
        <label>structs/event.h</label>
        <link refid="modules_2structs_2include_2structs_2event_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>rapidjson/document.h</label>
      </node>
      <node id="21">
        <label>structs/meta.h</label>
        <link refid="structs_2include_2structs_2meta_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="36">
        <label>notification/notification.h</label>
        <link refid="notification_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>TFile.h</label>
      </node>
      <node id="28">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>structs/particles.h</label>
        <link refid="modules_2structs_2include_2structs_2particles_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tools/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>topmatching.cxx</label>
        <link refid="mc20_2topmatching_2topmatching_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>tools/merge_cast.h</label>
        <link refid="merge__cast_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>cstdlib</label>
      </node>
      <node id="25">
        <label>torch/torch.h</label>
      </node>
      <node id="37">
        <label>TH1F.h</label>
      </node>
      <node id="16">
        <label>TLeaf.h</label>
      </node>
      <node id="22">
        <label>iostream</label>
      </node>
      <node id="23">
        <label>structs/base.h</label>
        <link refid="modules_2structs_2include_2structs_2base_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>meta/meta.h</label>
        <link refid="meta_2include_2meta_2meta_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>TBranch.h</label>
      </node>
      <node id="4">
        <label>ssml_mc20/particles.h</label>
        <link refid="events_2ssml__mc20_2include_2ssml__mc20_2particles_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>structs/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>TTree.h</label>
      </node>
      <node id="3">
        <label>ssml_mc20/event.h</label>
        <link refid="events_2ssml__mc20_2include_2ssml__mc20_2event_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mc20_2topmatching_2topmatching_8h" kindref="compound">topmatching.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="classtopmatching_1a421d3a06261ba3962565a52c1680e8f0" kindref="member">topmatching::topmatching</ref>(){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;top-kinematics&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="classtopmatching_1a740f20cd1c6d57f46ea6b198709894de" kindref="member">topmatching::~topmatching</ref>(){}</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="classselection__template" kindref="compound">selection_template</ref>*<sp/><ref refid="classtopmatching_1a2b01b3113414af4ab646c31f2bc27d4b" kindref="member">topmatching::clone</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classselection__template" kindref="compound">selection_template</ref>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtopmatching_1a421d3a06261ba3962565a52c1680e8f0" kindref="member">topmatching</ref>();}</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtopmatching_1aa9492bb4ec6c768bfc25bedb1ac17106" kindref="member">topmatching::selection</ref>(<ref refid="classevent__template" kindref="compound">event_template</ref>*<sp/><ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtopmatching_1af2e67b27bf5c2cb999bb03c432bd0b5d" kindref="member">topmatching::merge</ref>(<ref refid="classselection__template" kindref="compound">selection_template</ref>*<sp/><ref refid="namespacemain_1a80457db91bd1110a9e4a8515839a2a4b" kindref="member">sl</ref>){</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetopmatching" kindref="compound">topmatching</ref>*<sp/>slt<sp/>=<sp/>(<ref refid="namespacetopmatching" kindref="compound">topmatching</ref>*)<ref refid="namespacemain_1a80457db91bd1110a9e4a8515839a2a4b" kindref="member">sl</ref>;<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2f4c3f425cd2bf09a2bfc5d57e886466" kindref="member">truth_top</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1a2f4c3f425cd2bf09a2bfc5d57e886466" kindref="member">truth_top</ref>);<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2fd31f386029bd809561c18d2bfb758f" kindref="member">no_children</ref><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1a2fd31f386029bd809561c18d2bfb758f" kindref="member">no_children</ref>);<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1ad3dd40e318593fb5fe36cda69afe29c8" kindref="member">truth_children</ref><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1ad3dd40e318593fb5fe36cda69afe29c8" kindref="member">truth_children</ref>);<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1aee29062e703eaaee6defbe5b8ef01864" kindref="member">truth_jets</ref><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1aee29062e703eaaee6defbe5b8ef01864" kindref="member">truth_jets</ref>);<sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2a594a183a2a1c23714480527749e871" kindref="member">n_truth_jets_lep</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1a2a594a183a2a1c23714480527749e871" kindref="member">n_truth_jets_lep</ref>);<sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2bd851e871c341806d0594db37e1c525" kindref="member">n_truth_jets_had</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1a2bd851e871c341806d0594db37e1c525" kindref="member">n_truth_jets_had</ref>);<sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a277d5365aca6871a3704d2022549bc58" kindref="member">jets_truth_leps</ref><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1a277d5365aca6871a3704d2022549bc58" kindref="member">jets_truth_leps</ref>);<sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2355a39dcb161c67596dfabf5fbf89e6" kindref="member">jet_leps</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1a2355a39dcb161c67596dfabf5fbf89e6" kindref="member">jet_leps</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a846dfa3a29d6266d42bf5fcb32d7eb4c" kindref="member">n_jets_lep</ref><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1a846dfa3a29d6266d42bf5fcb32d7eb4c" kindref="member">n_jets_lep</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1aa70f94046243864545a29223c2d724be" kindref="member">n_jets_had</ref><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopmatching_1aa70f94046243864545a29223c2d724be" kindref="member">n_jets_had</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtopmatching_1acbf5d299785f024b7a4b5bd92bbfcd6f" kindref="member">topmatching::strategy</ref>(<ref refid="classevent__template" kindref="compound">event_template</ref>*<sp/><ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classssml__mc20" kindref="compound">ssml_mc20</ref>*<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>=<sp/>(<ref refid="classssml__mc20" kindref="compound">ssml_mc20</ref>*)<ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>;<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;particle_template*&gt;<sp/>dleps<sp/>=<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>Leptons;<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;particle_template*&gt;<sp/>dtops<sp/>=<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>Tops;<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>dtops.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtop" kindref="compound">top</ref>*<sp/>top_i<sp/>=<sp/>(<ref refid="classtop" kindref="compound">top</ref>*)dtops[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2f4c3f425cd2bf09a2bfc5d57e886466" kindref="member">truth_top</ref>.push_back(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(top_i<sp/>-&gt;<sp/>mass)/1000);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>particle_template*&gt;<sp/>children_<sp/>=<sp/>top_i<sp/>-&gt;<sp/>children;<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;particle_template*&gt;<sp/>ch<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a52c1ba0fc6de218995e06036b1ed11a1" kindref="member">vectorize</ref>(&amp;children_);<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ch.size()){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2fd31f386029bd809561c18d2bfb758f" kindref="member">no_children</ref>.push_back(1);}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_lepton<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;particle_template*&gt;<sp/>ch_<sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref>(0);<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref><sp/>&lt;<sp/>ch.size();<sp/>++<ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref>){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ch[c]<sp/>-&gt;<sp/>is_lep<sp/>&amp;&amp;<sp/>!ch[c]<sp/>-&gt;<sp/>is_nu){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_.push_back(ch[c]);<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_lepton<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch.size()){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1ad3dd40e318593fb5fe36cda69afe29c8" kindref="member">truth_children</ref>[</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">].push_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(&amp;ch));<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_lepton){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1ad3dd40e318593fb5fe36cda69afe29c8" kindref="member">truth_children</ref>[</highlight><highlight class="stringliteral">&quot;lep&quot;</highlight><highlight class="normal">].push_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(&amp;ch));}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1ad3dd40e318593fb5fe36cda69afe29c8" kindref="member">truth_children</ref>[</highlight><highlight class="stringliteral">&quot;had&quot;</highlight><highlight class="normal">].push_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(&amp;ch));}<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;particle_template*&gt;<sp/>tj<sp/>=<sp/>top_i<sp/>-&gt;<sp/>truthjets;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;tj,<sp/>&amp;ch_);<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_i<sp/>-&gt;<sp/>truthjets.size()){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(&amp;tj);<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_lepton){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1aee29062e703eaaee6defbe5b8ef01864" kindref="member">truth_jets</ref>[</highlight><highlight class="stringliteral">&quot;lep&quot;</highlight><highlight class="normal">].push_back(mass);}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1aee29062e703eaaee6defbe5b8ef01864" kindref="member">truth_jets</ref>[</highlight><highlight class="stringliteral">&quot;had&quot;</highlight><highlight class="normal">].push_back(mass);}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1aee29062e703eaaee6defbe5b8ef01864" kindref="member">truth_jets</ref>[</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">].push_back(mass);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>number<sp/>of<sp/>truth<sp/>jet<sp/>contributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ntj<sp/>=<sp/>std::to_string(top_i<sp/>-&gt;<sp/>truthjets.size())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Truth<sp/>Jets&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_lepton){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2a594a183a2a1c23714480527749e871" kindref="member">n_truth_jets_lep</ref>[ntj].push_back(mass);}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2bd851e871c341806d0594db37e1c525" kindref="member">n_truth_jets_had</ref>[ntj].push_back(mass);}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!top_i<sp/>-&gt;<sp/>jets.size()){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;particle_template*&gt;<sp/>jt<sp/>=<sp/>top_i<sp/>-&gt;<sp/>jets;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;jt,<sp/>&amp;ch_);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mass_j<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(&amp;jt);<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_lepton){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a277d5365aca6871a3704d2022549bc58" kindref="member">jets_truth_leps</ref>[</highlight><highlight class="stringliteral">&quot;lep&quot;</highlight><highlight class="normal">].push_back(mass_j);}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a277d5365aca6871a3704d2022549bc58" kindref="member">jets_truth_leps</ref>[</highlight><highlight class="stringliteral">&quot;had&quot;</highlight><highlight class="normal">].push_back(mass_j);}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a277d5365aca6871a3704d2022549bc58" kindref="member">jets_truth_leps</ref>[</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">].push_back(mass_j);<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceparton_1_1figures_1a37561e3ff9d5bb64e81525708de0c175" kindref="member">pdgid</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;particle_template*&gt;<sp/>jts<sp/>=<sp/>top_i<sp/>-&gt;<sp/>jets;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref>(0);<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref><sp/>&lt;<sp/>dleps.size();<sp/>++<ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref>){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>particle_template*&gt;<sp/>pr<sp/>=<sp/>dleps[<ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref>]<sp/>-&gt;<sp/><ref refid="namespacemain_1aa6eea602ff3979e1ff2936eeeb7c1cd7" kindref="member">parents</ref>;<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lep_match<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>ch.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pr.count(ch[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>-&gt;<sp/><ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>)){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ch[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>-&gt;<sp/>is_lep){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparton_1_1figures_1a37561e3ff9d5bb64e81525708de0c175" kindref="member">pdgid</ref><sp/>=<sp/>ch[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>-&gt;<sp/><ref refid="namespaceparton_1_1figures_1a37561e3ff9d5bb64e81525708de0c175" kindref="member">pdgid</ref>;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lep_match<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lep_match){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jts.push_back(dleps[c]);<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref>(0);<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref><sp/>&lt;<sp/>ch_.size();<sp/>++<ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref>){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ch_[c]<sp/>-&gt;<sp/>is_nu){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jts.push_back(ch_[c]);<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mass_j_<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(&amp;jts);<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_lepton){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2355a39dcb161c67596dfabf5fbf89e6" kindref="member">jet_leps</ref>[</highlight><highlight class="stringliteral">&quot;lep&quot;</highlight><highlight class="normal">].push_back(mass_j_);}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2355a39dcb161c67596dfabf5fbf89e6" kindref="member">jet_leps</ref>[</highlight><highlight class="stringliteral">&quot;had&quot;</highlight><highlight class="normal">].push_back(mass_j_);}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2355a39dcb161c67596dfabf5fbf89e6" kindref="member">jet_leps</ref>[</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">].push_back(mass_j_);<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_lepton){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceparton_1_1figures_1a37561e3ff9d5bb64e81525708de0c175" kindref="member">pdgid</ref><sp/>=<sp/>std::abs(pdgid);<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdgid){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2355a39dcb161c67596dfabf5fbf89e6" kindref="member">jet_leps</ref>[</highlight><highlight class="stringliteral">&quot;lep-&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" kindref="member">to_string</ref>(pdgid)].push_back(mass_j_);}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a2355a39dcb161c67596dfabf5fbf89e6" kindref="member">jet_leps</ref>[</highlight><highlight class="stringliteral">&quot;lep-miss&quot;</highlight><highlight class="normal">].push_back(mass_j_);}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>_ntj<sp/>=<sp/>std::to_string(top_i<sp/>-&gt;<sp/>jets.size())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Jets&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_lepton){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1a846dfa3a29d6266d42bf5fcb32d7eb4c" kindref="member">n_jets_lep</ref>[_ntj].push_back(mass_j_);}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopmatching_1aa70f94046243864545a29223c2d724be" kindref="member">n_jets_had</ref>[_ntj].push_back(mass_j_);}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="selections/mc20/topmatching/topmatching.cxx"/>
  </compounddef>
</doxygen>
