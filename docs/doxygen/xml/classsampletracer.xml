<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsampletracer" kind="class" language="C++" prot="public">
    <compoundname>sampletracer</compoundname>
    <basecompoundref refid="classtools" prot="public" virt="non-virtual">tools</basecompoundref>
    <basecompoundref refid="classnotification" prot="public" virt="non-virtual">notification</basecompoundref>
    <includes refid="sampletracer_8h" local="no">sampletracer.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsampletracer_1a010bfac572ee9efbb7c571798084da46" prot="public" static="no" mutable="no">
        <type>std::string *</type>
        <definition>std::string* sampletracer::output_path</definition>
        <argsstring></argsstring>
        <name>output_path</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="29" column="21" bodyfile="modules/sampletracer/include/generators/sampletracer.h" bodystart="29" bodyend="-1"/>
        <referencedby refid="classsampletracer_1a30d25d5a298b3c5698aee99ede11ce79" compoundref="sampletracer_8cxx" startline="95" endline="146">compile_objects</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsampletracer_1a6632e0b862b42a1c34b3a22f9cb16d66" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classcontainer" kindref="compound">container</ref> &gt;</type>
        <definition>std::map&lt;std::string, container&gt; sampletracer::root_container</definition>
        <argsstring></argsstring>
        <name>root_container</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="31" column="18" bodyfile="modules/sampletracer/include/generators/sampletracer.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsampletracer_1a201b75f9a979b56dcc27de04c513410b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sampletracer::sampletracer</definition>
        <argsstring>()</argsstring>
        <name>sampletracer</name>
        <briefdescription>
<para>Constructor for the sampletracer class. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes a new sampletracer instance with default settings. Sets up initial state for containers and flags. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="13" column="9" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1a1f2af1681ab2ded3d00d51f85a054aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sampletracer::~sampletracer</definition>
        <argsstring>()</argsstring>
        <name>~sampletracer</name>
        <briefdescription>
<para>Destructor for the sampletracer class. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleans up resources used by the sampletracer instance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="14" column="9" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1aed400d02ddf5095d42f18ee4be8e58ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sampletracer::add_meta_data</definition>
        <argsstring>(meta *meta_, std::string filename)</argsstring>
        <name>add_meta_data</name>
        <param>
          <type><ref refid="classmeta" kindref="compound">meta</ref> *</type>
          <declname>meta_</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="16" column="14" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1a46fa87d13e0137456aac081c52a015e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmeta" kindref="compound">meta</ref> *</type>
        <definition>meta * sampletracer::get_meta_data</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>get_meta_data</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="17" column="14" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1ad7d52f2a227616505a89dd2ff3f9c843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classevent__template" kindref="compound">event_template</ref> * &gt;</type>
        <definition>std::vector&lt; event_template * &gt; sampletracer::get_events</definition>
        <argsstring>(std::string label)</argsstring>
        <name>get_events</name>
        <param>
          <type>std::string</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="19" column="21" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="68" bodyend="73"/>
        <references refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" compoundref="performance_2main_8py" startline="126">main.label</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1abcfa2a59affdbc7c6feade80f1236ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampletracer::fill_selections</definition>
        <argsstring>(std::map&lt; std::string, selection_template * &gt; *inpt)</argsstring>
        <name>fill_selections</name>
        <param>
          <type>std::map&lt; std::string, <ref refid="classselection__template" kindref="compound">selection_template</ref> * &gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="21" column="14" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1a144bc68d55ea31573b23e47a0e4954c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sampletracer::add_event</definition>
        <argsstring>(event_template *ev, std::string label)</argsstring>
        <name>add_event</name>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="22" column="14" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="75" bodyend="77"/>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" compoundref="performance_2main_8py" startline="126">main.label</references>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1ad73efb019d62fdf2b9acf9de1653ac16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sampletracer::add_graph</definition>
        <argsstring>(graph_template *gr, std::string label)</argsstring>
        <name>add_graph</name>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
          <declname>gr</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="23" column="14" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="79" bodyend="81"/>
        <references refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" compoundref="test__evaluation_8py" startline="10">test_evaluation.gr</references>
        <references refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" compoundref="performance_2main_8py" startline="126">main.label</references>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1ad026b22665f9dc62484a014b1b66106c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sampletracer::add_selection</definition>
        <argsstring>(selection_template *sel)</argsstring>
        <name>add_selection</name>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <declname>sel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="24" column="14" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="83" bodyend="85"/>
        <references refid="namespacemain_1a37e50d3a642b605bc387ae3703d9730b" compoundref="analysis_2main_8py" startline="11">main.sel</references>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1afd65d3dcb97d2465d210acec974c21b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampletracer::populate_dataloader</definition>
        <argsstring>(dataloader *dl)</argsstring>
        <name>populate_dataloader</name>
        <param>
          <type><ref refid="classdataloader" kindref="compound">dataloader</ref> *</type>
          <declname>dl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="26" column="14" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classsampletracer_1a30d25d5a298b3c5698aee99ede11ce79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampletracer::compile_objects</definition>
        <argsstring>(int threads)</argsstring>
        <name>compile_objects</name>
        <param>
          <type>int</type>
          <declname>threads</declname>
        </param>
        <briefdescription>
<para>Compiles objects concurrently using multiple threads. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threads</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of concurrent threads to use for processing.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This is the main processing method that distributes tasks across multiple threads, monitors their progress, and ensures proper cleanup of resources upon completion. It uses lambda functions for task execution and progress monitoring. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/sampletracer/include/generators/sampletracer.h" line="27" column="14" bodyfile="modules/sampletracer/cxx/sampletracer.cxx" bodystart="95" bodyend="146"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" compoundref="tools_8h" startline="167" endline="174">tools::flush</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a6a992d5529f459a44fee58c733255e86">index</references>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a2db95e8e1a9267b7a1188556b2013b33">l</references>
        <references refid="classsampletracer_1a010bfac572ee9efbb7c571798084da46" compoundref="sampletracer_8h" startline="29">output_path</references>
        <references refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" compoundref="strings_8cxx" startline="23" endline="36">tools::split</references>
        <references refid="classtools_1a7b784121d8b368a64995feddc7083469" compoundref="tools_8h" startline="183" endline="187">tools::sum</references>
        <references refid="namespacemain_1a80a24f910858581b24642a9a814be13d" compoundref="performance_2main_8py" startline="63">main.threads</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>sampletracer</label>
        <link refid="classsampletracer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>notification</label>
        <link refid="classnotification"/>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="1">
        <label>sampletracer</label>
        <link refid="classsampletracer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>output_path</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="4" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/sampletracer/include/generators/sampletracer.h" line="11" column="1" bodyfile="modules/sampletracer/include/generators/sampletracer.h" bodystart="8" bodyend="32"/>
    <listofallmembers>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>absolute_path</name></member>
      <member refid="classsampletracer_1a144bc68d55ea31573b23e47a0e4954c4" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>add_event</name></member>
      <member refid="classsampletracer_1ad73efb019d62fdf2b9acf9de1653ac16" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>add_graph</name></member>
      <member refid="classsampletracer_1aed400d02ddf5095d42f18ee4be8e58ca" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>add_meta_data</name></member>
      <member refid="classsampletracer_1ad026b22665f9dc62484a014b1b66106c" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>add_selection</name></member>
      <member refid="classsampletracer_1a30d25d5a298b3c5698aee99ede11ce79" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>compile_objects</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>create_path</name></member>
      <member refid="classnotification_1a8dd1ebb578269118b18bf7f0e176bf14" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>Debug</name></member>
      <member refid="classnotification_1aa14ded524569ac1d7fd121c161a733be" prot="protected" virt="non-virtual"><scope>sampletracer</scope><name>debug_mode</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>delete_path</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>ends_with</name></member>
      <member refid="classnotification_1ab0c3843575c157d799e532a9ea5acbd0" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>Error</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>extract</name></member>
      <member refid="classsampletracer_1abcfa2a59affdbc7c6feade80f1236ec6" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>fill_selections</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>flush</name></member>
      <member refid="classnotification_1ae25782afd10b3cb5fffe17afaf4fffc0" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>get_debug_mode</name></member>
      <member refid="classsampletracer_1ad7d52f2a227616505a89dd2ff3f9c843" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>get_events</name></member>
      <member refid="classsampletracer_1a46fa87d13e0137456aac081c52a015e2" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>get_meta_data</name></member>
      <member refid="classnotification_1aa0aad214cf167691e516ecc343306244" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>get_prefix</name></member>
      <member refid="classnotification_1a3a12e8eaf363a320abee5393436123f0" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>get_suppress_info</name></member>
      <member refid="classnotification_1ab53313e9343e9ef6deaefa2bdd3a837a" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>get_suppress_warning</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>has_value</name></member>
      <member refid="classnotification_1a2ea9e0828e3d323b5bb5cdecc8f018a8" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>Info</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>is_file</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>ls</name></member>
      <member refid="classnotification_1a47e2d300e33c44a24b0c51d9e9a83914" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>Message</name></member>
      <member refid="classnotification_1a3ec5fe2d8db29cf32853858ff58fdbd7" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>notification</name></member>
      <member refid="classsampletracer_1a010bfac572ee9efbb7c571798084da46" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>output_path</name></member>
      <member refid="classsampletracer_1afd65d3dcb97d2465d210acec974c21b6" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>populate_dataloader</name></member>
      <member refid="classnotification_1a913d4c8a7736df782f900dd436cfeaa6" prot="protected" virt="non-virtual"><scope>sampletracer</scope><name>prefix</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>put</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>replace</name></member>
      <member refid="classsampletracer_1a6632e0b862b42a1c34b3a22f9cb16d66" prot="private" virt="non-virtual"><scope>sampletracer</scope><name>root_container</name></member>
      <member refid="classsampletracer_1a201b75f9a979b56dcc27de04c513410b" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>sampletracer</name></member>
      <member refid="classnotification_1a5a69a50032f5dcf38bed2bb27dc048fc" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>set_debug_mode</name></member>
      <member refid="classnotification_1a575db6b2e3b67a7d679205600d83b576" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>set_prefix</name></member>
      <member refid="classnotification_1a58eec7023935cff9332ce21e58fc3f5a" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>set_suppress_info</name></member>
      <member refid="classnotification_1a9bb77ba73a5f25af292e9eea8a8de970" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>set_suppress_warning</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>split</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>sum</name></member>
      <member refid="classnotification_1a77a99c28092cf053b395805c75dde6da" prot="protected" virt="non-virtual"><scope>sampletracer</scope><name>suppress_info</name></member>
      <member refid="classnotification_1ab2d4ba20d7bc164eece8982b413eab13" prot="protected" virt="non-virtual"><scope>sampletracer</scope><name>suppress_warnings</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>to_string</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>tools</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>trim</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>type_name</name></member>
      <member refid="classnotification_1ab758dafbb449e142fb68e11c0470b5c9" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>Warning</name></member>
      <member refid="classnotification_1a0b7272463b149418caf592e398cae64e" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>~notification</name></member>
      <member refid="classsampletracer_1a1f2af1681ab2ded3d00d51f85a054aa1" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>~sampletracer</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>sampletracer</scope><name>~tools</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
