<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="lossfx_8h" kind="file" language="C++">
    <compoundname>lossfx.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes refid="tools_8h" local="no">tools/tools.h</includes>
    <includes local="no">torch/torch.h</includes>
    <includes refid="enums_8h" local="no">structs/enums.h</includes>
    <includes refid="structs_2include_2structs_2optimizer_8h" local="no">structs/optimizer.h</includes>
    <includedby refid="loss__config_8cxx" local="no">loss_config.cxx</includedby>
    <includedby refid="lossfx_8cxx" local="no">lossfx.cxx</includedby>
    <includedby refid="optimizer__config_8cxx" local="no">optimizer_config.cxx</includedby>
    <includedby refid="switching_8cxx" local="no">switching.cxx</includedby>
    <incdepgraph>
      <node id="12">
        <label>functional</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>structs/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="5">
        <label>tools/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>torch/torch.h</label>
      </node>
      <node id="10">
        <label>structs/optimizer.h</label>
        <link refid="structs_2include_2structs_2optimizer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>lossfx.h</label>
        <link refid="lossfx_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>structs/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>switching.cxx</label>
        <link refid="switching_8cxx"/>
      </node>
      <node id="3">
        <label>lossfx.cxx</label>
        <link refid="lossfx_8cxx"/>
      </node>
      <node id="4">
        <label>optimizer_config.cxx</label>
        <link refid="optimizer__config_8cxx"/>
      </node>
      <node id="2">
        <label>loss_config.cxx</label>
        <link refid="loss__config_8cxx"/>
      </node>
      <node id="1">
        <label>lossfx.h</label>
        <link refid="lossfx_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classlossfx" prot="public">lossfx</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LOSSFX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOSSFX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tools_8h" kindref="compound">tools/tools.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/torch.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="enums_8h" kindref="compound">structs/enums.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="structs_2include_2structs_2optimizer_8h" kindref="compound">structs/optimizer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classlossfx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlossfx" kindref="compound">lossfx</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtools" kindref="compound">tools</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlossfx_1a0dfb87cf32550ff80324405e91a4d683" kindref="member">lossfx</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlossfx_1a5a23ad796c36b71e6a87150d467a2b76" kindref="member">~lossfx</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enums_8h_1a2a4ec8e1c0c344aaecca227c72c2eeb4" kindref="member">loss_enum</ref><sp/><ref refid="classlossfx_1a1ff4ab72a5193a641f3184f2fa77daf9" kindref="member">loss_string</ref>(std::string<sp/><ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref>);<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enums_8h_1a090b1946b276b3292ab70edc3bf1e65d" kindref="member">opt_enum</ref><sp/><ref refid="classlossfx_1a7c434ad6cf74c729de1fa85674e93e04" kindref="member">optim_string</ref>(std::string<sp/><ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref>);<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/><ref refid="classlossfx_1a56f4dbeac9098b7dbcb8dbc25851b025" kindref="member">loss</ref>(torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth,<sp/><ref refid="enums_8h_1a2a4ec8e1c0c344aaecca227c72c2eeb4" kindref="member">loss_enum</ref><sp/>lss);<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlossfx_1a8afc0d1aa169bcebb072b8b4278b2e88" kindref="member">weight_init</ref>(torch::nn::Sequential*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/><ref refid="model__template_8h_1a04569a45296869bf184d4b79d10487dd" kindref="member">mlp_init</ref><sp/><ref refid="namespacemain_1aa7f7a57dd94ac214b133aba964145812" kindref="member">method</ref>);<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a828ca7c93fa2c84015e8eb871b2573e9" kindref="member">torch::optim::Optimizer</ref>*<sp/><ref refid="classlossfx_1a88bfc205a07cf9057bfd9f71dbd25638" kindref="member">build_optimizer</ref>(<ref refid="structoptimizer__params__t" kindref="compound">optimizer_params_t</ref>*<sp/><ref refid="namespacetest__generator_1adac66e982d9a2a89699bf61856f98823" kindref="member">op</ref>,<sp/>std::vector&lt;torch::Tensor&gt;*<sp/><ref refid="namespacernn__model_1a9f4e388fbf8accc0434484d8989dca0d" kindref="member">params</ref>);<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlossfx_1a04cb8aa2c016ad09ba210bce9b629c69" kindref="member">build_loss_function</ref>(<ref refid="enums_8h_1a2a4ec8e1c0c344aaecca227c72c2eeb4" kindref="member">loss_enum</ref><sp/>lss);<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlossfx_1a14679b5f9d19ef11d23b39b38d519b71" kindref="member">to</ref>(torch::TensorOptions*);<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_adam(<ref refid="structoptimizer__params__t" kindref="compound">optimizer_params_t</ref>*<sp/><ref refid="namespacetest__generator_1adac66e982d9a2a89699bf61856f98823" kindref="member">op</ref>,<sp/>std::vector&lt;torch::Tensor&gt;*<sp/><ref refid="namespacernn__model_1a9f4e388fbf8accc0434484d8989dca0d" kindref="member">params</ref>);<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_adagrad(<ref refid="structoptimizer__params__t" kindref="compound">optimizer_params_t</ref>*<sp/><ref refid="namespacetest__generator_1adac66e982d9a2a89699bf61856f98823" kindref="member">op</ref>,<sp/>std::vector&lt;torch::Tensor&gt;*<sp/><ref refid="namespacernn__model_1a9f4e388fbf8accc0434484d8989dca0d" kindref="member">params</ref>);<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_adamw(<ref refid="structoptimizer__params__t" kindref="compound">optimizer_params_t</ref>*<sp/><ref refid="namespacetest__generator_1adac66e982d9a2a89699bf61856f98823" kindref="member">op</ref>,<sp/>std::vector&lt;torch::Tensor&gt;*<sp/><ref refid="namespacernn__model_1a9f4e388fbf8accc0434484d8989dca0d" kindref="member">params</ref>);<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_lbfgs(<ref refid="structoptimizer__params__t" kindref="compound">optimizer_params_t</ref>*<sp/><ref refid="namespacetest__generator_1adac66e982d9a2a89699bf61856f98823" kindref="member">op</ref>,<sp/>std::vector&lt;torch::Tensor&gt;*<sp/><ref refid="namespacernn__model_1a9f4e388fbf8accc0434484d8989dca0d" kindref="member">params</ref>);<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_rmsprop(<ref refid="structoptimizer__params__t" kindref="compound">optimizer_params_t</ref>*<sp/><ref refid="namespacetest__generator_1adac66e982d9a2a89699bf61856f98823" kindref="member">op</ref>,<sp/>std::vector&lt;torch::Tensor&gt;*<sp/><ref refid="namespacernn__model_1a9f4e388fbf8accc0434484d8989dca0d" kindref="member">params</ref>);<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_sgd(<ref refid="structoptimizer__params__t" kindref="compound">optimizer_params_t</ref>*<sp/><ref refid="namespacetest__generator_1adac66e982d9a2a89699bf61856f98823" kindref="member">op</ref>,<sp/>std::vector&lt;torch::Tensor&gt;*<sp/><ref refid="namespacernn__model_1a9f4e388fbf8accc0434484d8989dca0d" kindref="member">params</ref>);<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loss<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::BCELossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::BCEWithLogitsLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::CosineEmbeddingLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::CrossEntropyLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::CTCLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::HingeEmbeddingLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::HuberLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::KLDivLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::L1LossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::MarginRankingLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::MSELossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::MultiLabelMarginLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::MultiLabelSoftMarginLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::MultiMarginLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::NLLLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::PoissonNLLLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::SmoothL1LossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::SoftMarginLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::TripletMarginLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>_fx_loss(torch::nn::TripletMarginWithDistanceLossImpl*<sp/>lossfx_,<sp/>torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optimizers<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::optim::Adam*<sp/><sp/><sp/><sp/><sp/>m_adam<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::optim::Adagrad*<sp/><sp/>m_adagrad<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::optim::AdamW*<sp/><sp/><sp/><sp/>m_adamw<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::optim::LBFGS*<sp/><sp/><sp/><sp/>m_lbfgs<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::optim::RMSprop*<sp/><sp/>m_rmsprop<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::optim::SGD*<sp/><sp/><sp/><sp/><sp/><sp/>m_sgd<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::BCELossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_bce<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::BCEWithLogitsLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_bce_with_logits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::CosineEmbeddingLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cosine_embedding<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::CrossEntropyLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cross_entropy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::CTCLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ctc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::HingeEmbeddingLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_hinge_embedding<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::HuberLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_huber<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::KLDivLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_kl_div<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::L1LossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_l1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::MarginRankingLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_margin_ranking<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::MSELossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_mse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::MultiLabelMarginLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_multi_label_margin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::MultiLabelSoftMarginLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/>m_multi_label_soft_margin<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::MultiMarginLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_multi_margin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::NLLLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nll<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::PoissonNLLLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_poisson_nll<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::SmoothL1LossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_smooth_l1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::SoftMarginLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_soft_margin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::TripletMarginLossImpl*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_triplet_margin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::nn::TripletMarginWithDistanceLossImpl*<sp/>m_triplet_margin_with_distance<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">};<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="modules/lossfx/include/templates/lossfx.h"/>
  </compounddef>
</doxygen>
