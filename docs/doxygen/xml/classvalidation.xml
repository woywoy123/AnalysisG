<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvalidation" kind="class" language="C++" prot="public">
    <compoundname>validation</compoundname>
    <basecompoundref refid="classselection__template" prot="public" virt="non-virtual">selection_template</basecompoundref>
    <includes refid="validation_8h" local="no">validation.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classvalidation_1af6f14366f46cdd9660c57c2485755116" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int validation::num_device</definition>
        <argsstring></argsstring>
        <name>num_device</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="49" column="13" bodyfile="selections/neutrino/validation/validation.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="classvalidation_1aef10864e0566e65df9d8af2a5485219f" compoundref="validation_8cxx" startline="13" endline="17">clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvalidation_1affbf4bc2e1d532380df027875b8bec8f" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double validation::masstop</definition>
        <argsstring></argsstring>
        <name>masstop</name>
        <initializer>= 172.62*1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="50" column="16" bodyfile="selections/neutrino/validation/validation.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="classvalidation_1aa436b348c281a3d676910cf7b7d575eb" compoundref="validation_8cxx" startline="58" endline="116">reconstruction</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classvalidation_1ac10dba439f4b6f6220fbd775474b7a49" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double validation::massw</definition>
        <argsstring></argsstring>
        <name>massw</name>
        <initializer>= 80.385*1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="51" column="16" bodyfile="selections/neutrino/validation/validation.h" bodystart="51" bodyend="-1"/>
        <referencedby refid="classvalidation_1aa436b348c281a3d676910cf7b7d575eb" compoundref="validation_8cxx" startline="58" endline="116">reconstruction</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvalidation_1a3686ae3406ed8e5ae1891d9db2da3dd8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structpacket__t" kindref="compound">packet_t</ref> * &gt;</type>
        <definition>std::vector&lt;packet_t*&gt; validation::storage</definition>
        <argsstring></argsstring>
        <name>storage</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="54" column="21" bodyfile="selections/neutrino/validation/validation.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvalidation_1af4cf033415f09fef603cd3300b557223" prot="private" static="no" mutable="no">
        <type><ref refid="classparticle__template" kindref="compound">particle_template</ref> *</type>
        <definition>particle_template* validation::nu_tru</definition>
        <argsstring></argsstring>
        <name>nu_tru</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="56" column="27" bodyfile="selections/neutrino/validation/validation.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvalidation_1a33738a241363bfe7fac6f31dcd7d6ad4" prot="private" static="no" mutable="no">
        <type><ref refid="classparticle__template" kindref="compound">particle_template</ref> *</type>
        <definition>particle_template* validation::b_qrk</definition>
        <argsstring></argsstring>
        <name>b_qrk</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="57" column="27" bodyfile="selections/neutrino/validation/validation.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvalidation_1ad55f3d38239af11e1150b9a5a26a7915" prot="private" static="no" mutable="no">
        <type><ref refid="classparticle__template" kindref="compound">particle_template</ref> *</type>
        <definition>particle_template* validation::lepton</definition>
        <argsstring></argsstring>
        <name>lepton</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="58" column="27" bodyfile="selections/neutrino/validation/validation.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvalidation_1af7971b5375679ccf457d463cb6b2d8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>validation::validation</definition>
        <argsstring>()</argsstring>
        <name>validation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="39" column="9" bodyfile="selections/neutrino/validation/validation.cxx" bodystart="12" bodyend="12"/>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">selection_template::name</references>
        <referencedby refid="classvalidation_1aef10864e0566e65df9d8af2a5485219f" compoundref="validation_8cxx" startline="13" endline="17">clone</referencedby>
        <referencedby refid="namespacevalidation_1_1figures_1acba1cf323987f6ac9397f5224f358933" compoundref="neutrino_2validation_2figures_8py" startline="350" endline="359">validation.figures.validation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classvalidation_1a49b20a8af71fb932b97a831aca4fd931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>validation::~validation</definition>
        <argsstring>() override</argsstring>
        <name>~validation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="40" column="9" bodyfile="selections/neutrino/validation/validation.cxx" bodystart="18" bodyend="18"/>
        <references refid="classselection__template_1a4faf71140920bc4cf0fc06072cecad07" compoundref="selection__template_8h" startline="92" endline="98">selection_template::safe_delete</references>
      </memberdef>
      <memberdef kind="function" id="classvalidation_1aef10864e0566e65df9d8af2a5485219f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
        <definition>selection_template * validation::clone</definition>
        <argsstring>() override</argsstring>
        <name>clone</name>
        <reimplements refid="classselection__template_1a094ce1eb2b6463f88a8ad5f7dfd8e4b6">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="41" column="28" bodyfile="selections/neutrino/validation/validation.cxx" bodystart="13" bodyend="17"/>
        <references refid="classvalidation_1af6f14366f46cdd9660c57c2485755116" compoundref="validation_8h" startline="49">num_device</references>
        <references refid="classvalidation_1af7971b5375679ccf457d463cb6b2d8d0" compoundref="validation_8cxx" startline="12" endline="12">validation</references>
      </memberdef>
      <memberdef kind="function" id="classvalidation_1a0b29bd038e3900496cc2de454fc52615" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool validation::selection</definition>
        <argsstring>(event_template *ev) override</argsstring>
        <name>selection</name>
        <reimplements refid="classselection__template_1a906e3f695a675e5a545fa4eab867cfd7">selection</reimplements>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="43" column="14" bodyfile="selections/neutrino/validation/validation.cxx" bodystart="40" bodyend="55"/>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" compoundref="test__normalization_8py" startline="9">test_normalization.evn</references>
      </memberdef>
      <memberdef kind="function" id="classvalidation_1af388ba0e867008a75602581fdc2ed0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool validation::strategy</definition>
        <argsstring>(event_template *ev) override</argsstring>
        <name>strategy</name>
        <reimplements refid="classselection__template_1a01a81c84699bb054a8c320fc5575e17b">strategy</reimplements>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="44" column="14" bodyfile="selections/neutrino/validation/validation.cxx" bodystart="136" bodyend="197"/>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33">c</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" compoundref="test__normalization_8py" startline="9">test_normalization.evn</references>
        <references refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" compoundref="selection__template_8h" startline="28">selection_template::hash</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ae0da17ca8558064e75c801fadc3537a4">is_b</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28acc9357767a613ec2e912943553e95778">is_lep</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ab09e705fe6108a37560c8173e04c822d">is_nu</references>
        <references refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" compoundref="merge__cast_8h" startline="9" endline="11">merge_data</references>
        <references refid="namespacemain_1aa6eea602ff3979e1ff2936eeeb7c1cd7" compoundref="performance_2main_8py" startline="157">main.parents</references>
        <references refid="classvalidation_1aa436b348c281a3d676910cf7b7d575eb" compoundref="validation_8cxx" startline="58" endline="116">reconstruction</references>
        <references refid="classvalidation_1aa4e1748ddaa534cfd26880d5cd2ae7a5" compoundref="validation_8cxx" startline="118" endline="134">update_state</references>
        <references refid="classselection__template_1a7e1560964237cf7b4846e24b300d7b9e" compoundref="selection__template_8h" startline="116" endline="121">selection_template::vectorize</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classvalidation_1a5bc9aad76ca75e21e70d5cf4e48c31e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void validation::merge</definition>
        <argsstring>(selection_template *sl) override</argsstring>
        <name>merge</name>
        <reimplements refid="classselection__template_1ad04ca3679a943defbd47c05a88448aba">merge</reimplements>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <declname>sl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="45" column="14" bodyfile="selections/neutrino/validation/validation.cxx" bodystart="20" bodyend="38"/>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">selection_template::name</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a29e700fac9f9a1121be10a785cb69e3a">pdgid</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ad949b87653e0e12c90d27f66d090f1c9">pmu</references>
        <references refid="namespacemain_1a80457db91bd1110a9e4a8515839a2a4b" compoundref="metrics_2main_8py" startline="4">main.sl</references>
        <references refid="classselection__template_1ae5606e994231fae57abe42e4f0ec6202" compoundref="selection__template_8cxx" startline="10" endline="55">selection_template::write</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classvalidation_1aa436b348c281a3d676910cf7b7d575eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void validation::reconstruction</definition>
        <argsstring>(packet_t *data)</argsstring>
        <name>reconstruction</name>
        <param>
          <type><ref refid="structpacket__t" kindref="compound">packet_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="46" column="14" bodyfile="selections/neutrino/validation/validation.cxx" bodystart="58" bodyend="116"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">selection_template::data</references>
        <references refid="namespacemain_1aa13220b81a6693a30ef1862bd1846aa1" compoundref="performance_2main_8py" startline="149">main.device</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f">mass</references>
        <references refid="classvalidation_1affbf4bc2e1d532380df027875b8bec8f" compoundref="validation_8h" startline="50">masstop</references>
        <references refid="classvalidation_1ac10dba439f4b6f6220fbd775474b7a49" compoundref="validation_8h" startline="51">massw</references>
        <references refid="namespacepyc_1_1nusol_1a9650527ae538fa27121bedfb79a1fbe6" compoundref="interface_2nusol_8cxx" startline="25" endline="34">pyc::nusol::NuNu</references>
        <references refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" compoundref="selection__template_8h" startline="77" endline="89">selection_template::sum</references>
        <references refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" compoundref="neutrino_2helper_8py" startline="35" endline="35">helper.vector</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classvalidation_1af388ba0e867008a75602581fdc2ed0f3" compoundref="validation_8cxx" startline="136" endline="197">strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classvalidation_1aa4e1748ddaa534cfd26880d5cd2ae7a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void validation::update_state</definition>
        <argsstring>(packet_t *data)</argsstring>
        <name>update_state</name>
        <param>
          <type><ref refid="structpacket__t" kindref="compound">packet_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="47" column="14" bodyfile="selections/neutrino/validation/validation.cxx" bodystart="118" bodyend="134"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">selection_template::data</references>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">selection_template::name</references>
        <referencedby refid="classvalidation_1af388ba0e867008a75602581fdc2ed0f3" compoundref="validation_8cxx" startline="136" endline="197">strategy</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvalidation_1a94d46945b4ecfbd2b5060edca848b931" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type><ref refid="structpacket__t" kindref="compound">packet_t</ref> *</type>
        <definition>packet_t* validation::build_packet</definition>
        <argsstring>(g *evnt, std::string name)</argsstring>
        <name>build_packet</name>
        <param>
          <type>g *</type>
          <declname>evnt</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="61" column="18" bodyfile="selections/neutrino/validation/validation.h" bodystart="61" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classvalidation_1a8666dc2669d7918247162b8f531c5b26" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; g * &gt;</type>
        <definition>std::vector&lt;g*&gt; validation::upcast</definition>
        <argsstring>(std::vector&lt; particle_template * &gt; *inpt)</argsstring>
        <name>upcast</name>
        <param>
          <type>std::vector&lt; <ref refid="classparticle__template" kindref="compound">particle_template</ref> * &gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="75" column="21" bodyfile="selections/neutrino/validation/validation.h" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classvalidation_1a2126fcd083f7ddd8fb395c16133ba94f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; g * &gt;</type>
        <definition>std::vector&lt;g*&gt; validation::upcast</definition>
        <argsstring>(std::map&lt; std::string, particle_template * &gt; *inpt)</argsstring>
        <name>upcast</name>
        <param>
          <type>std::map&lt; std::string, <ref refid="classparticle__template" kindref="compound">particle_template</ref> * &gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="selections/neutrino/validation/validation.h" line="82" column="21" bodyfile="selections/neutrino/validation/validation.h" bodystart="82" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>selection_template</label>
        <link refid="classselection__template"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>validation</label>
        <link refid="classvalidation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>cproperty&lt; std::vector&lt; int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>meta</label>
        <link refid="classmeta"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>dsid</edgelabel>
          <edgelabel>nFiles</edgelabel>
          <edgelabel>datasetNumber</edgelabel>
          <edgelabel>totalEvents</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>cross_section_nb</edgelabel>
          <edgelabel>completion</edgelabel>
          <edgelabel>cross_section_fb</edgelabel>
          <edgelabel>ecmEnergy</edgelabel>
          <edgelabel>event_index</edgelabel>
          <edgelabel>sum_of_weights</edgelabel>
          <edgelabel>beam_energy</edgelabel>
          <edgelabel>cross_section_pb</edgelabel>
          <edgelabel>genFiltEff</edgelabel>
          <edgelabel>eventNumber</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>isMC</edgelabel>
          <edgelabel>found</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>std::map&lt; std::string, meta_t &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, meta_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>K</label>
      </node>
      <node id="27">
        <label>T</label>
      </node>
      <node id="12">
        <label>cproperty&lt; unsigned int, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; unsigned int, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>weights_t</label>
        <link refid="structweights__t"/>
        <childnode refid="30" relation="usage">
          <edgelabel>hist_data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>generator</edgelabel>
          <edgelabel>ami_tag</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::vector&lt; double &gt;</label>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>cproperty&lt; long, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; long, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>cproperty&lt; std::string, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::string, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>std::map&lt; std::string, weights_t &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, weights_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>cproperty&lt; double, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::map&lt; int, std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; int, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>cproperty&lt; std::vector&lt; double &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; double &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>cproperty&lt; std::map&lt; int, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>std::map&lt; int, int &gt;</label>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; int, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>selection_template</label>
        <link refid="classselection__template"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>meta_data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>matched_meta</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>passed_weights</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>index</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>weight</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>cproperty&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>cproperty&lt; T, G &gt;</label>
        <link refid="classcproperty"/>
      </node>
      <node id="40">
        <label>cproperty&lt; std::string, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::string, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>cproperty&lt; std::map&lt; int, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="23">
        <label>meta_t</label>
        <link refid="structmeta__t"/>
        <childnode refid="24" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>validation</label>
        <link refid="classvalidation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>std::map&lt; std::string, std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>std::map&lt; std::string, std::map&lt; std::string, float &gt; &gt;</label>
        <childnode refid="30" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, std::map&lt; std::string, float &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>std::map&lt; std::string, float &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, float &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>cproperty&lt; bool, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; bool, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>event_t</label>
        <link refid="structevent__t"/>
        <childnode refid="5" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>cproperty&lt; std::map&lt; std::string, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>cproperty&lt; double, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>std::map&lt; std::string, int &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; std::string, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="5" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::vector&lt; int &gt;</label>
        <childnode refid="34" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>cproperty&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="selections/neutrino/validation/validation.h" line="37" column="1" bodyfile="selections/neutrino/validation/validation.h" bodystart="36" bodyend="90"/>
    <listofallmembers>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>validation</scope><name>absolute_path</name></member>
      <member refid="classvalidation_1a33738a241363bfe7fac6f31dcd7d6ad4" prot="private" virt="non-virtual"><scope>validation</scope><name>b_qrk</name></member>
      <member refid="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" prot="public" virt="non-virtual"><scope>validation</scope><name>build</name></member>
      <member refid="classvalidation_1a94d46945b4ecfbd2b5060edca848b931" prot="private" virt="non-virtual"><scope>validation</scope><name>build_packet</name></member>
      <member refid="classselection__template_1a6a9f6df015c9f8e48c65cacc249c4fdf" prot="public" virt="virtual"><scope>validation</scope><name>bulk_write</name></member>
      <member refid="classvalidation_1aef10864e0566e65df9d8af2a5485219f" prot="public" virt="virtual"><scope>validation</scope><name>clone</name></member>
      <member refid="classselection__template_1a9deff703f50fdff72bd1edf3664a9d75" prot="public" virt="non-virtual"><scope>validation</scope><name>CompileEvent</name></member>
      <member refid="classselection__template_1a3009dc4bb45c47d96a5bdc4096bd6870" prot="public" virt="non-virtual"><scope>validation</scope><name>contains</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>validation</scope><name>create_path</name></member>
      <member refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" prot="public" virt="non-virtual"><scope>validation</scope><name>data</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>validation</scope><name>delete_path</name></member>
      <member refid="classselection__template_1ab32b926ee893cf56dc27913271658d1e" prot="public" virt="non-virtual"><scope>validation</scope><name>downcast</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>validation</scope><name>ends_with</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>validation</scope><name>extract</name></member>
      <member refid="classselection__template_1ad220a2da4b57303d8a5b162b6733024f" prot="public" virt="non-virtual"><scope>validation</scope><name>filename</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>validation</scope><name>flush</name></member>
      <member refid="classselection__template_1a2f6cd45079e1fab94a163a38fbe005cd" prot="public" virt="non-virtual"><scope>validation</scope><name>get_hash</name></member>
      <member refid="classselection__template_1ad27d2cd85c19147b85b1e96ce73bdade" prot="public" virt="non-virtual"><scope>validation</scope><name>get_leptonics</name></member>
      <member refid="classselection__template_1ad0d6fa60bf0da8796a718532c0288d04" prot="public" virt="non-virtual"><scope>validation</scope><name>get_name</name></member>
      <member refid="classselection__template_1a4e61c1d63afdff7a6428fbf4c6297166" prot="public" virt="non-virtual"><scope>validation</scope><name>get_tree</name></member>
      <member refid="classselection__template_1ae04fb8767d15273f80c5343e2f73384b" prot="public" virt="non-virtual"><scope>validation</scope><name>get_weight</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>validation</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>validation</scope><name>has_value</name></member>
      <member refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" prot="public" virt="non-virtual"><scope>validation</scope><name>hash</name></member>
      <member refid="classselection__template_1a2e1c4a9239afbfea9cd510b774c9c1fe" prot="public" virt="non-virtual"><scope>validation</scope><name>index</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>validation</scope><name>is_file</name></member>
      <member refid="classvalidation_1ad55f3d38239af11e1150b9a5a26a7915" prot="private" virt="non-virtual"><scope>validation</scope><name>lepton</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>validation</scope><name>ls</name></member>
      <member refid="classselection__template_1ab760e9d895d74e62a9d4bfe436568a86" prot="public" virt="non-virtual"><scope>validation</scope><name>make_unique</name></member>
      <member refid="classvalidation_1affbf4bc2e1d532380df027875b8bec8f" prot="public" virt="non-virtual"><scope>validation</scope><name>masstop</name></member>
      <member refid="classvalidation_1ac10dba439f4b6f6220fbd775474b7a49" prot="public" virt="non-virtual"><scope>validation</scope><name>massw</name></member>
      <member refid="classselection__template_1a50e7d1939618dcb8b6386f5e7a247e12" prot="public" virt="non-virtual"><scope>validation</scope><name>matched_meta</name></member>
      <member refid="classvalidation_1a5bc9aad76ca75e21e70d5cf4e48c31e4" prot="public" virt="virtual"><scope>validation</scope><name>merge</name></member>
      <member refid="classselection__template_1a15113e43e1451e9e65b9f327fcfc7e15" prot="public" virt="non-virtual"><scope>validation</scope><name>meta_data</name></member>
      <member refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" prot="public" virt="non-virtual"><scope>validation</scope><name>name</name></member>
      <member refid="classvalidation_1af4cf033415f09fef603cd3300b557223" prot="private" virt="non-virtual"><scope>validation</scope><name>nu_tru</name></member>
      <member refid="classvalidation_1af6f14366f46cdd9660c57c2485755116" prot="public" virt="non-virtual"><scope>validation</scope><name>num_device</name></member>
      <member refid="classselection__template_1a0e423716b1439b853d39904998074ecd" prot="public" virt="non-virtual"><scope>validation</scope><name>operator==</name></member>
      <member refid="classselection__template_1ad472a18c63b8b1d6e41fbe626b13fc40" prot="public" virt="non-virtual"><scope>validation</scope><name>passed_weights</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>validation</scope><name>put</name></member>
      <member refid="classvalidation_1aa436b348c281a3d676910cf7b7d575eb" prot="public" virt="non-virtual"><scope>validation</scope><name>reconstruction</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>validation</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>validation</scope><name>replace</name></member>
      <member refid="classselection__template_1a2c99ad97301a85fc7c7257930d990cfd" prot="public" virt="non-virtual"><scope>validation</scope><name>reverse_hash</name></member>
      <member refid="classselection__template_1a4faf71140920bc4cf0fc06072cecad07" prot="public" virt="non-virtual"><scope>validation</scope><name>safe_delete</name></member>
      <member refid="classvalidation_1a0b29bd038e3900496cc2de454fc52615" prot="public" virt="virtual"><scope>validation</scope><name>selection</name></member>
      <member refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" prot="public" virt="non-virtual"><scope>validation</scope><name>selection_template</name></member>
      <member refid="classselection__template_1acd31f17488bcf97dd8a5f1b3a7da1cdd" prot="public" virt="non-virtual"><scope>validation</scope><name>set_hash</name></member>
      <member refid="classselection__template_1a8951c34758d3410f9d931b6011c3cca2" prot="public" virt="non-virtual"><scope>validation</scope><name>set_index</name></member>
      <member refid="classselection__template_1a19244d585754db14326c126a98000899" prot="public" virt="non-virtual"><scope>validation</scope><name>set_name</name></member>
      <member refid="classselection__template_1aa95e812106c1a933f1b65e82557939d3" prot="public" virt="non-virtual"><scope>validation</scope><name>set_weight</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>validation</scope><name>split</name></member>
      <member refid="classvalidation_1a3686ae3406ed8e5ae1891d9db2da3dd8" prot="private" virt="non-virtual"><scope>validation</scope><name>storage</name></member>
      <member refid="classvalidation_1af388ba0e867008a75602581fdc2ed0f3" prot="public" virt="virtual"><scope>validation</scope><name>strategy</name></member>
      <member refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" prot="public" virt="non-virtual"><scope>validation</scope><name>sum</name></member>
      <member refid="classselection__template_1af639e8d3a86f1fa5cdfd2fe58e2e5dfb" prot="public" virt="non-virtual"><scope>validation</scope><name>sum</name></member>
      <member refid="classselection__template_1aefb54851b728057af466bf7a78caeda8" prot="public" virt="non-virtual"><scope>validation</scope><name>sum</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual" ambiguityscope="tools::"><scope>validation</scope><name>sum</name></member>
      <member refid="classselection__template_1a41a437aca3bb2a7f854a66ff92942d46" prot="public" virt="non-virtual"><scope>validation</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a74558331b11dd6822a975a32203286ac" prot="public" virt="non-virtual"><scope>validation</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a3bde46eb8ab3699d6f3eab6077d9716c" prot="public" virt="non-virtual"><scope>validation</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a572f52e2758979cda89605e207e57c87" prot="public" virt="non-virtual"><scope>validation</scope><name>switch_board</name></member>
      <member refid="classselection__template_1ac565e3beb94b557fc947a6f8afebfc4d" prot="public" virt="non-virtual"><scope>validation</scope><name>threadIdx</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>validation</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>validation</scope><name>to_string</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>validation</scope><name>tools</name></member>
      <member refid="classselection__template_1a57ff66ff6c5ff5af5e81298faf6bf521" prot="public" virt="non-virtual"><scope>validation</scope><name>tree</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>validation</scope><name>trim</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>validation</scope><name>type_name</name></member>
      <member refid="classvalidation_1a8666dc2669d7918247162b8f531c5b26" prot="private" virt="non-virtual"><scope>validation</scope><name>upcast</name></member>
      <member refid="classvalidation_1a2126fcd083f7ddd8fb395c16133ba94f" prot="private" virt="non-virtual"><scope>validation</scope><name>upcast</name></member>
      <member refid="classselection__template_1a82f14833e404fbe0399a2a539eef75b1" prot="public" virt="non-virtual" ambiguityscope="selection_template::"><scope>validation</scope><name>upcast</name></member>
      <member refid="classselection__template_1ae5ce6c75d19fdbb2ab18ba05b3ea4c58" prot="public" virt="non-virtual" ambiguityscope="selection_template::"><scope>validation</scope><name>upcast</name></member>
      <member refid="classvalidation_1aa4e1748ddaa534cfd26880d5cd2ae7a5" prot="public" virt="non-virtual"><scope>validation</scope><name>update_state</name></member>
      <member refid="classvalidation_1af7971b5375679ccf457d463cb6b2d8d0" prot="public" virt="non-virtual"><scope>validation</scope><name>validation</name></member>
      <member refid="classselection__template_1a7e1560964237cf7b4846e24b300d7b9e" prot="public" virt="non-virtual"><scope>validation</scope><name>vectorize</name></member>
      <member refid="classselection__template_1a03816f18e6ce9351cd099525862c7c64" prot="public" virt="non-virtual"><scope>validation</scope><name>weight</name></member>
      <member refid="classselection__template_1ae5606e994231fae57abe42e4f0ec6202" prot="public" virt="virtual"><scope>validation</scope><name>write</name></member>
      <member refid="classselection__template_1a67768227c6c6a8e69edd0dc618a70eb9" prot="public" virt="non-virtual"><scope>validation</scope><name>write</name></member>
      <member refid="classselection__template_1a0983bf7c4582968c8c3b1a970fb3689e" prot="public" virt="non-virtual"><scope>validation</scope><name>write</name></member>
      <member refid="classselection__template_1af0b32265d850bfcd861a7f4744426856" prot="public" virt="virtual"><scope>validation</scope><name>~selection_template</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>validation</scope><name>~tools</name></member>
      <member refid="classvalidation_1a49b20a8af71fb932b97a831aca4fd931" prot="public" virt="non-virtual"><scope>validation</scope><name>~validation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
