<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="loss__plots_8cxx" kind="file" language="C++">
    <compoundname>loss_plots.cxx</compoundname>
    <includes refid="metrics_8h" local="no">metrics/metrics.h</includes>
    <incdepgraph>
      <node id="27">
        <label>c10/core/DeviceType.h</label>
      </node>
      <node id="44">
        <label>lossfx/lossfx.h</label>
      </node>
      <node id="18">
        <label>functional</label>
      </node>
      <node id="38">
        <label>structs/report.h</label>
        <link refid="report_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>structs/model.h</label>
        <link refid="model_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>TTreeReader.h</label>
      </node>
      <node id="19">
        <label>structs/element.h</label>
        <link refid="element_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tools/vector_cast.h</label>
        <link refid="vector__cast_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>TTreeReaderArray.h</label>
      </node>
      <node id="34">
        <label>cstdint</label>
      </node>
      <node id="42">
        <label>structs/graph.h</label>
      </node>
      <node id="12">
        <label>templates/particle_template.h</label>
        <link refid="particle__template_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>TMultiGraph.h</label>
      </node>
      <node id="2">
        <label>metrics/metrics.h</label>
        <link refid="metrics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>cmath</label>
      </node>
      <node id="31">
        <label>structs/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="11">
        <label>torch/all.h</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="39">
        <label>structs/settings.h</label>
        <link refid="settings_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pyc/pyc.h</label>
        <link refid="pyc_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>structs/meta.h</label>
        <link refid="structs_2include_2structs_2meta_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>TStyle.h</label>
      </node>
      <node id="10">
        <label>tuple</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
      <node id="41">
        <label>notification/notification.h</label>
        <link refid="notification_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>TFile.h</label>
      </node>
      <node id="5">
        <label>TCanvas.h</label>
      </node>
      <node id="35">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>structs/particles.h</label>
        <link refid="modules_2structs_2include_2structs_2particles_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>tools/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>cstdlib</label>
      </node>
      <node id="32">
        <label>torch/torch.h</label>
      </node>
      <node id="3">
        <label>TH1F.h</label>
      </node>
      <node id="23">
        <label>TLeaf.h</label>
      </node>
      <node id="29">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>loss_plots.cxx</label>
        <link refid="loss__plots_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>templates/model_template.h</label>
        <link refid="model__template_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>structs/base.h</label>
        <link refid="modules_2structs_2include_2structs_2base_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>TLegend.h</label>
      </node>
      <node id="22">
        <label>TBranch.h</label>
      </node>
      <node id="17">
        <label>structs/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>TTree.h</label>
      </node>
      <node id="4">
        <label>TGraph.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="metrics_8h" kindref="compound">metrics/metrics.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metrics::generic_painter(</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TGraph*&gt;<sp/>k_graphs,</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacechildrenkinematics_1_1figures_1a4b217acaa3fe7d5c60c04978cbf782dc" kindref="member">path</ref>,<sp/>std::string<sp/>title,<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>xtitle,<sp/>std::string<sp/>ytitle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a39107d6c0b192041f7af5301ba6e467c" kindref="member">epoch</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">){</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>TCanvas*<sp/>can<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCanvas();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetOptStat(0);<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetImageScaling(3);<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>SetTopMargin(0.1);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetTitleOffset(1.25);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetTitleSize(0.025);<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle<sp/>-&gt;<sp/>SetLabelSize(0.025,<sp/></highlight><highlight class="stringliteral">&quot;XY&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>TMultiGraph*<sp/>mtg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TMultiGraph();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>mtg<sp/>-&gt;<sp/>SetTitle(title.c_str());<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>k_graphs.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TGraph*<sp/><ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref><sp/>=<sp/>k_graphs[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref><sp/>-&gt;<sp/>SetLineWidth(1);<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref><sp/>-&gt;<sp/>SetLineColor(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1a528312b29510c40a161d3046d151498c" kindref="member">colors_h</ref>[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]);<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtg<sp/>-&gt;<sp/>Add(<ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref>);<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>mtg<sp/>-&gt;<sp/>Draw(</highlight><highlight class="stringliteral">&quot;APL&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>mtg<sp/>-&gt;<sp/>GetXaxis()<sp/>-&gt;<sp/>SetTitle(xtitle.c_str());<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>mtg<sp/>-&gt;<sp/>GetXaxis()<sp/>-&gt;<sp/>CenterTitle(xtitle.c_str());<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>mtg<sp/>-&gt;<sp/>GetYaxis()<sp/>-&gt;<sp/>SetTitle(ytitle.c_str());<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>mtg<sp/>-&gt;<sp/>GetYaxis()<sp/>-&gt;<sp/>CenterTitle(ytitle.c_str());<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>mtg<sp/>-&gt;<sp/>GetXaxis()<sp/>-&gt;<sp/>SetRangeUser(0,<sp/><ref refid="namespacemain_1a39107d6c0b192041f7af5301ba6e467c" kindref="member">epoch</ref>+1);<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>mtg<sp/>-&gt;<sp/>SetMinimum(0.);<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" kindref="member">has_string</ref>(&amp;ytitle,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">)){mtg<sp/>-&gt;<sp/>SetMaximum(100.);}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>gPad<sp/>-&gt;<sp/>Modified();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>Modified();<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>BuildLegend(0.85,<sp/>0.85,<sp/>0.995,<sp/>0.995);<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>Update();<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" kindref="member">create_path</ref>(<ref refid="namespacechildrenkinematics_1_1figures_1a4b217acaa3fe7d5c60c04978cbf782dc" kindref="member">path</ref>);<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>SaveAs(<ref refid="namespacechildrenkinematics_1_1figures_1a4b217acaa3fe7d5c60c04978cbf782dc" kindref="member">path</ref>.c_str());<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>can<sp/>-&gt;<sp/>Close();<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>can;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mtg;<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;<sp/>metrics::build_graphs(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>train,<sp/>std::map&lt;std::string,<sp/>float&gt;*<sp/>rep_tr,<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>valid,<sp/>std::map&lt;std::string,<sp/>float&gt;*<sp/>rep_va,<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>eval,<sp/><sp/>std::map&lt;std::string,<sp/>float&gt;*<sp/>rep_ev,<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a39107d6c0b192041f7af5301ba6e467c" kindref="member">epoch</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal">){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;<sp/>output<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;::iterator<sp/>thi<sp/>=<sp/>train<sp/>-&gt;<sp/>begin();<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>thi<sp/>!=<sp/>train<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++thi){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*rep_tr)[thi<sp/>-&gt;first]<sp/>=<sp/>thi<sp/>-&gt;<sp/>second<sp/>-&gt;<sp/>GetBinContent(<ref refid="namespacemain_1a39107d6c0b192041f7af5301ba6e467c" kindref="member">epoch</ref>+1);<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[thi<sp/>-&gt;<sp/>first].push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraph(thi<sp/>-&gt;<sp/>second));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>thi<sp/>=<sp/>valid<sp/>-&gt;<sp/>begin();<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>thi<sp/>!=<sp/>valid<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++thi){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*rep_va)[thi<sp/>-&gt;first]<sp/>=<sp/>thi<sp/>-&gt;<sp/>second<sp/>-&gt;<sp/>GetBinContent(<ref refid="namespacemain_1a39107d6c0b192041f7af5301ba6e467c" kindref="member">epoch</ref>+1);<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[thi<sp/>-&gt;<sp/>first].push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraph(thi<sp/>-&gt;<sp/>second));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>thi<sp/>=<sp/>eval<sp/>-&gt;<sp/>begin();<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>thi<sp/>!=<sp/>eval<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++thi){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*rep_ev)[thi<sp/>-&gt;first]<sp/>=<sp/>thi<sp/>-&gt;<sp/>second<sp/>-&gt;<sp/>GetBinContent(<ref refid="namespacemain_1a39107d6c0b192041f7af5301ba6e467c" kindref="member">epoch</ref>+1);<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[thi<sp/>-&gt;<sp/>first].push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraph(thi<sp/>-&gt;<sp/>second));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classmetrics_1a85ac60407efe672dd1ba1c067a06afb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmetrics_1a85ac60407efe672dd1ba1c067a06afb2" kindref="member">metrics::dump_loss_plots</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;::iterator<sp/>gri;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>analytics_t&gt;::iterator<sp/>itr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry.begin();<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry.end();<sp/>++itr){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>-&gt;<sp/>first<sp/>!=<sp/>k){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_<sp/>=<sp/>itr<sp/>-&gt;<sp/>first+1;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>itr<sp/>-&gt;<sp/>second.this_epoch;<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>graphs<sp/>-<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;<sp/>k_graph<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>build_graphs(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.loss_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>]<sp/><sp/>,<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>loss_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.loss_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>loss_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.loss_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>loss_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gri<sp/>=<sp/>k_graph.begin();<sp/>gri<sp/>!=<sp/>k_graph.end();<sp/>++gri){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>gri<sp/>-&gt;<sp/>first;<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Loss<sp/>of:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>k-fold:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_);<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ptx<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1adfb471fcc454bdfb97309137a9c75d9e" kindref="member">output_path</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;loss-graph/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptx<sp/>+=<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-kfold_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>generic_painter(gri<sp/>-&gt;<sp/>second,<sp/>ptx,<sp/>title,<sp/></highlight><highlight class="stringliteral">&quot;Epochs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Loss<sp/>(Arb.)&quot;</highlight><highlight class="normal">,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nodes<sp/>-<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;<sp/>k_nodes<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>build_graphs(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.loss_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],<sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>loss_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.loss_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>loss_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.loss_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>loss_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gri<sp/>=<sp/>k_nodes.begin();<sp/>gri<sp/>!=<sp/>k_nodes.end();<sp/>++gri){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>gri<sp/>-&gt;<sp/>first;<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Loss<sp/>of:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>k-fold:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_);<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ptx<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1adfb471fcc454bdfb97309137a9c75d9e" kindref="member">output_path</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;loss-node/&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptx<sp/>+=<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-kfold_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>generic_painter(gri<sp/>-&gt;<sp/>second,<sp/>ptx,<sp/>title,<sp/></highlight><highlight class="stringliteral">&quot;Epochs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Loss<sp/>(Arb.)&quot;</highlight><highlight class="normal">,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edges<sp/>-<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;<sp/>k_edge<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>build_graphs(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.loss_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],<sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>loss_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.loss_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>loss_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],<sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.loss_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>loss_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gri<sp/>=<sp/>k_edge.begin();<sp/>gri<sp/>!=<sp/>k_edge.end();<sp/>++gri){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>gri<sp/>-&gt;<sp/>first;<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Loss<sp/>of:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>k-fold:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_);<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ptx<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1adfb471fcc454bdfb97309137a9c75d9e" kindref="member">output_path</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;loss-edge/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptx<sp/>+=<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-kfold_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>generic_painter(gri<sp/>-&gt;<sp/>second,<sp/>ptx,<sp/>title,<sp/></highlight><highlight class="stringliteral">&quot;Epochs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Loss<sp/>(Arb.)&quot;</highlight><highlight class="normal">,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metrics::add_th1f_loss(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>torch::Tensor&gt;*<sp/>type,<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;*<sp/>lss_type,<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len</highlight></codeline>
<codeline lineno="138"><highlight class="normal">){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structanalytics__t" kindref="compound">analytics_t</ref>*<sp/>an<sp/>=<sp/>&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry[<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>];<sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>torch::Tensor&gt;::iterator<sp/>itx<sp/>=<sp/>type<sp/>-&gt;<sp/>begin();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itx<sp/>!=<sp/>type<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++itx){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*lss_type)[itx<sp/>-&gt;<sp/>first]<sp/>-&gt;<sp/>Fill(an<sp/>-&gt;<sp/>this_epoch,<sp/>itx<sp/>-&gt;<sp/>second.item&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;()/</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(len));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metrics::build_th1f_loss(</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::tuple&lt;torch::Tensor*,<sp/>loss_enum&gt;&gt;*<sp/>type,<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref><sp/>g_num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref></highlight></codeline>
<codeline lineno="149"><highlight class="normal">){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structanalytics__t" kindref="compound">analytics_t</ref>*<sp/>an<sp/>=<sp/>&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry[<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>];<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::tuple&lt;torch::Tensor*,<sp/>loss_enum&gt;&gt;::iterator<sp/>itx;<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itx<sp/>=<sp/>type<sp/>-&gt;<sp/>begin();<sp/>itx<sp/>!=<sp/>type<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++itx){</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>itx<sp/>-&gt;<sp/>first;<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;mode_enum,<sp/>std::map&lt;std::string,<sp/>TH1F*&gt;&gt;*<sp/>type_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(g_num){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587" kindref="member">graph_enum::truth_graph</ref>:<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Graph&quot;</highlight><highlight class="normal">;<sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>loss_graph;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5" kindref="member">graph_enum::truth_node</ref>:<sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Node&quot;</highlight><highlight class="normal">;<sp/><sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>loss_node;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00" kindref="member">graph_enum::truth_edge</ref>:<sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Edge&quot;</highlight><highlight class="normal">;<sp/><sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>loss_edge;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1ab1ea0b6cb2fcc7c77af0424e55c39e1e" kindref="member">epochs</ref>;<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>run_name<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1a48599c1af0e6a91c4ded28d191f17981" kindref="member">run_name</ref>;<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>base_name<sp/>=<sp/>run_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>title;<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tr<sp/>=<sp/>base_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Parameter<sp/>(training)<sp/>Loss<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-fold&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*type_)[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>][var_name]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(tr.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;training&quot;</highlight><highlight class="normal">,<sp/>ep,<sp/>0,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>va<sp/>=<sp/>base_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Parameter<sp/>(validation)<sp/>Loss&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-fold&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*type_)[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>][var_name]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(va.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;validation&quot;</highlight><highlight class="normal">,<sp/>ep,<sp/>0,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref><sp/>=<sp/>base_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Parameter<sp/>(evaluation)<sp/>Loss&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-fold&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*type_)[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>][var_name]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(<ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;evaluation&quot;</highlight><highlight class="normal">,<sp/>ep,<sp/>0,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metrics::build_th1f_accuracy(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::tuple&lt;torch::Tensor*,<sp/>loss_enum&gt;&gt;*<sp/>type,<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref><sp/>g_num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal">){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structanalytics__t" kindref="compound">analytics_t</ref>*<sp/>an<sp/>=<sp/>&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry[<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>];<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::tuple&lt;torch::Tensor*,<sp/>loss_enum&gt;&gt;::iterator<sp/>itx;<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itx<sp/>=<sp/>type<sp/>-&gt;<sp/>begin();<sp/>itx<sp/>!=<sp/>type<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>();<sp/>++itx){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>itx<sp/>-&gt;<sp/>first;<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;mode_enum,<sp/>std::map&lt;std::string,<sp/>TH1F*&gt;&gt;*<sp/>type_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(g_num){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587" kindref="member">graph_enum::truth_graph</ref>:<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Graph&quot;</highlight><highlight class="normal">;<sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>accuracy_graph;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5" kindref="member">graph_enum::truth_node</ref>:<sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Node&quot;</highlight><highlight class="normal">;<sp/><sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>accuracy_node;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00" kindref="member">graph_enum::truth_edge</ref>:<sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Edge&quot;</highlight><highlight class="normal">;<sp/><sp/>type_<sp/>=<sp/>&amp;an<sp/>-&gt;<sp/>accuracy_edge;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1ab1ea0b6cb2fcc7c77af0424e55c39e1e" kindref="member">epochs</ref>;<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>run_name<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1a48599c1af0e6a91c4ded28d191f17981" kindref="member">run_name</ref>;<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>base_name<sp/>=<sp/>run_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>title;<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tr<sp/>=<sp/>base_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Parameter<sp/>(training)<sp/>Accuracy<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-fold&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1F*<sp/>tr_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(tr.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;training&quot;</highlight><highlight class="normal">,<sp/>ep,<sp/>0,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr_<sp/>-&gt;<sp/>GetYaxis()<sp/>-&gt;<sp/>SetRangeUser(0,<sp/>100);<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*type_)[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>][var_name]<sp/>=<sp/>tr_;<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>va<sp/>=<sp/>base_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Parameter<sp/>(validation)<sp/>Accuracy&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-fold&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1F*<sp/>va_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(va.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;validation&quot;</highlight><highlight class="normal">,<sp/>ep,<sp/>0,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_<sp/>-&gt;<sp/>GetYaxis()<sp/>-&gt;<sp/>SetRangeUser(0,<sp/>100);<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*type_)[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>][var_name]<sp/>=<sp/>va_;<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref><sp/>=<sp/>base_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Parameter<sp/>(evaluation)<sp/>Accuracy&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-fold&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1F*<sp/>ev_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(<ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;evaluation&quot;</highlight><highlight class="normal">,<sp/>ep,<sp/>0,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev_<sp/>-&gt;<sp/>GetYaxis()<sp/>-&gt;<sp/>SetRangeUser(0,<sp/>100);<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*type_)[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>][var_name]<sp/>=<sp/>ev_;<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metrics::add_th1f_accuracy(torch::Tensor*<sp/>pred,<sp/>torch::Tensor*<sp/>truth,<sp/>TH1F*<sp/>hist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len){</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structanalytics__t" kindref="compound">analytics_t</ref>*<sp/>an<sp/>=<sp/>&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry[<ref refid="namespacemain_1a03af30b15df550f87e1dd197bb3679e1" kindref="member">kfold</ref>];<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>pred_<sp/><sp/>=<sp/>std::get&lt;1&gt;(pred<sp/>-&gt;<sp/>max({-1})).view({-1});<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>truth_<sp/>=<sp/>truth<sp/>-&gt;<sp/>view({-1});</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>acc<sp/>=<sp/>(truth_<sp/>==<sp/>pred_).<ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref>({-1}).to(torch::kFloat)/float(pred_.size({-1}));<sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>hist<sp/>-&gt;<sp/>Fill(an<sp/>-&gt;<sp/>this_epoch,<sp/>100*acc.item&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;()/</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(len));</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classmetrics_1a2ed5da3a9b6c0e0e9b711afafaeed7ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmetrics_1a2ed5da3a9b6c0e0e9b711afafaeed7ab" kindref="member">metrics::dump_accuracy_plots</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>analytics_t&gt;::iterator<sp/>itr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry.begin();<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>registry.end();<sp/>++itr){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>-&gt;<sp/>first<sp/>!=<sp/>k){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;::iterator<sp/>gri;<sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_<sp/>=<sp/>itr<sp/>-&gt;<sp/>first+1;<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>itr<sp/>-&gt;<sp/>second.this_epoch;<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>graphs<sp/>-<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;<sp/>k_graph<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>build_graphs(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.accuracy_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],<sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>accuracy_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.accuracy_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>accuracy_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.accuracy_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>accuracy_graph[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>base_name<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1adfb471fcc454bdfb97309137a9c75d9e" kindref="member">output_path</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;accuracy-graph/&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gri<sp/>=<sp/>k_graph.begin();<sp/>gri<sp/>!=<sp/>k_graph.end();<sp/>++gri){</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>gri<sp/>-&gt;<sp/>first;<sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Accuracy<sp/>of:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>k-fold:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_);<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ptx<sp/>=<sp/>base_name<sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-kfold_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>generic_painter(gri<sp/>-&gt;<sp/>second,<sp/>ptx,<sp/>title,<sp/></highlight><highlight class="stringliteral">&quot;Epochs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Accuracy<sp/>(%)&quot;</highlight><highlight class="normal">,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nodes<sp/>-<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;<sp/>k_nodes<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>build_graphs(</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.accuracy_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],<sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>accuracy_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.accuracy_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>accuracy_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.accuracy_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>accuracy_node[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_name<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1adfb471fcc454bdfb97309137a9c75d9e" kindref="member">output_path</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;accuracy-node/&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gri<sp/>=<sp/>k_nodes.begin();<sp/>gri<sp/>!=<sp/>k_nodes.end();<sp/>++gri){</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>gri<sp/>-&gt;<sp/>first;<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Accuracy<sp/>of:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>k-fold:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_);<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ptx<sp/>=<sp/>base_name<sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-kfold_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>generic_painter(gri<sp/>-&gt;<sp/>second,<sp/>ptx,<sp/>title,<sp/></highlight><highlight class="stringliteral">&quot;Epochs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Accuracy<sp/>(%)&quot;</highlight><highlight class="normal">,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edges<sp/>-<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::vector&lt;TGraph*&gt;&gt;<sp/>k_edge<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>build_graphs(</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.accuracy_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],<sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>accuracy_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214" kindref="member">mode_enum::training</ref>],</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.accuracy_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>accuracy_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0" kindref="member">mode_enum::validation</ref>],</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;itr<sp/>-&gt;<sp/>second.accuracy_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],<sp/>&amp;itr<sp/>-&gt;<sp/>second.report<sp/>-&gt;<sp/>accuracy_edge[<ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277" kindref="member">mode_enum::evaluation</ref>],</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_name<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classmetrics_1adcede726826a5825c9e302ccbcb738d2" kindref="member">m_settings</ref>.<ref refid="structsettings__t_1adfb471fcc454bdfb97309137a9c75d9e" kindref="member">output_path</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;accuracy-edge/&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gri<sp/>=<sp/>k_edge.begin();<sp/>gri<sp/>!=<sp/>k_edge.end();<sp/>++gri){</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>gri<sp/>-&gt;<sp/>first;<sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Accuracy<sp/>of:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>k-fold:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_);<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ptx<sp/>=<sp/>base_name<sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-kfold_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(k_)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>generic_painter(gri<sp/>-&gt;<sp/>second,<sp/>ptx,<sp/>title,<sp/></highlight><highlight class="stringliteral">&quot;Epochs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Accuracy<sp/>(%)&quot;</highlight><highlight class="normal">,<sp/>ep);<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="modules/metrics/cxx/loss_plots.cxx"/>
  </compounddef>
</doxygen>
