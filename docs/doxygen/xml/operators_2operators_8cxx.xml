<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="operators_2operators_8cxx" kind="file" language="C++">
    <compoundname>operators/operators.cxx</compoundname>
    <includes refid="operators_8h" local="no">operators/operators.h</includes>
    <includes refid="utils_8h" local="no">utils/utils.h</includes>
    <incdepgraph>
      <node id="2">
        <label>operators/operators.h</label>
        <link refid="operators_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>utils/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="1">
        <label>operators.cxx</label>
        <link refid="operators_2operators_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>torch/torch.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="operators_8h" kindref="compound">operators/operators.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="utils_8h" kindref="compound">utils/utils.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="namespaceoperators___1a9c06ae4b1ec4e5f50d3db14bc1da2ef6" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespaceoperators___1a9c06ae4b1ec4e5f50d3db14bc1da2ef6" kindref="member">operators_::Dot</ref>(torch::Tensor*<sp/>v1,<sp/>torch::Tensor*<sp/>v2){</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sx<sp/>=<sp/>v2<sp/>-&gt;<sp/>size({-1});<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v1<sp/>-&gt;<sp/>matmul(v2<sp/>-&gt;<sp/>view({-1,<sp/>sx,<sp/>sx}));<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespaceoperators___1af012532b8e034b7d6cb733360e14f8d7" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespaceoperators___1af012532b8e034b7d6cb733360e14f8d7" kindref="member">operators_::CosTheta</ref>(torch::Tensor*<sp/>v1,<sp/>torch::Tensor*<sp/>v2){</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>v1_2<sp/>=<sp/>((*v1)*(*v1)).sum(-1);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>v2_2<sp/>=<sp/>((*v2)*(*v2)).sum(-1);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>dot<sp/><sp/>=<sp/>((*v1)*(*v2)).sum(-1);<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dot/(<sp/>torch::sqrt(<sp/>(v1_2<sp/>*<sp/>v2_2)<sp/>))).view({-1,<sp/>1});<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespaceoperators___1a0335a4a853f7cff5faa4bc7bc68e3a8a" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespaceoperators___1a0335a4a853f7cff5faa4bc7bc68e3a8a" kindref="member">operators_::SinTheta</ref>(torch::Tensor*<sp/>v1,<sp/>torch::Tensor*<sp/>v2){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>v1_2<sp/>=<sp/>((*v1)*(*v1)).sum(-1);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>v2_2<sp/>=<sp/>((*v2)*(*v2)).sum(-1);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>dot2<sp/><sp/>=<sp/>torch::pow(<sp/>((*v1)*(*v2)).sum(-1)<sp/>,<sp/>2);<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::sqrt(1<sp/>-<sp/>dot2/(v1_2*v2_2)).view({-1,<sp/>1});<sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespaceoperators___1a7ce1f1b4f84306a157386ac5fd54ea1a" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespaceoperators___1a7ce1f1b4f84306a157386ac5fd54ea1a" kindref="member">operators_::Rx</ref>(torch::Tensor*<sp/>angle){<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>agl<sp/>=<sp/>angle<sp/>-&gt;<sp/>view({-1,<sp/>1});</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>cos<sp/>=<sp/>torch::cos(agl);<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>sin<sp/>=<sp/>torch::sin(agl);<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>t0<sp/>=<sp/>torch::zeros_like(agl);<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>t1<sp/>=<sp/>torch::ones_like(agl);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::cat({t1,<sp/><sp/>t0,<sp/><sp/><sp/>t0,<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0,<sp/>cos,<sp/>-sin,<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0,<sp/>sin,<sp/><sp/>cos</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/>-1).view({-1,<sp/>3,<sp/>3});<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespaceoperators___1a7f4dbc7ab056202b3b43d621f6c8df50" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespaceoperators___1a7f4dbc7ab056202b3b43d621f6c8df50" kindref="member">operators_::Ry</ref>(torch::Tensor*<sp/>angle){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>agl<sp/>=<sp/>angle<sp/>-&gt;<sp/>view({-1,<sp/>1});</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>cos<sp/>=<sp/>torch::cos(agl);<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>sin<sp/>=<sp/>torch::sin(agl);<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>t0<sp/>=<sp/>torch::zeros_like(agl);<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>t1<sp/>=<sp/>torch::ones_like(agl);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::cat({cos,<sp/>t0,<sp/>sin,<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0,<sp/>t1,<sp/><sp/>t0,<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-sin,<sp/>t0,<sp/>cos</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/>-1).view({-1,<sp/>3,<sp/>3});</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="namespaceoperators___1a38a28124e97111d3a1f2809ce2039769" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespaceoperators___1a38a28124e97111d3a1f2809ce2039769" kindref="member">operators_::Rz</ref>(torch::Tensor*<sp/>angle){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>agl<sp/>=<sp/>angle<sp/>-&gt;<sp/>view({-1,<sp/>1});</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>cos<sp/>=<sp/>torch::cos(agl);<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>sin<sp/>=<sp/>torch::sin(agl);<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>t0<sp/>=<sp/>torch::zeros_like(agl);<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>t1<sp/>=<sp/>torch::ones_like(agl);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::cat({cos,<sp/>-sin,<sp/>t0,<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin,<sp/><sp/>cos,<sp/>t0,<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>,<sp/><sp/><sp/>t0,<sp/>t1</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/>-1).view({-1,<sp/>3,<sp/>3});<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="namespaceoperators___1a3d017da3c5169dfb4e1ca5da7cae0703" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespaceoperators___1a3d017da3c5169dfb4e1ca5da7cae0703" kindref="member">operators_::CoFactors</ref>(torch::Tensor*<sp/>matrix){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_x[]<sp/>=<sp/>{1,<sp/>1,<sp/>2,<sp/>2,<sp/>0,<sp/>0,<sp/>2,<sp/>2,<sp/>0,<sp/>0,<sp/>1,<sp/>1};<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_y[]<sp/>=<sp/>{1,<sp/>2,<sp/>1,<sp/>2,<sp/>0,<sp/>2,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>1};<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;torch::Tensor&gt;<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>3;<sp/>++i){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j(0);<sp/>j<sp/>&lt;<sp/>3;<sp/>++j){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>4*i;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idy<sp/>=<sp/>4*j;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>a<sp/>=<sp/>matrix<sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>_x[idx<sp/><sp/>],<sp/>_y[idy<sp/><sp/>]}).view({-1,<sp/>1});<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref><sp/>=<sp/>matrix<sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>_x[idx+1],<sp/>_y[idy+1]}).view({-1,<sp/>1});<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref><sp/>=<sp/>matrix<sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>_x[idx+2],<sp/>_y[idy+2]}).view({-1,<sp/>1});<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref><sp/>=<sp/>matrix<sp/>-&gt;<sp/>index({torch::indexing::Slice(),<sp/>_x[idx+3],<sp/>_y[idy+3]}).view({-1,<sp/>1});<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::Tensor<sp/>minor<sp/>=<sp/>a*<ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad" kindref="member">d</ref><sp/>-<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref>*<ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a4a8a08f09d37b73795649038408b5f33" kindref="member">c</ref>;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minor<sp/>=<sp/>minor*(<sp/>1<sp/>-<sp/>((i+j)%2)*2<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>.push_back(minor);<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::cat(<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/>-1).view({-1,<sp/>3,<sp/>3});<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="namespaceoperators___1a123a2d44cfea06825875800ebf21ae0d" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespaceoperators___1a123a2d44cfea06825875800ebf21ae0d" kindref="member">operators_::Determinant</ref>(torch::Tensor*<sp/>matrix){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::det(*matrix);<sp/>}</highlight></codeline>
<codeline lineno="87" refid="namespaceoperators___1aaf20282e41ff4961e01d222feb86bc47" refkind="member"><highlight class="normal">torch::Tensor<sp/><ref refid="namespaceoperators___1aaf20282e41ff4961e01d222feb86bc47" kindref="member">operators_::Inverse</ref>(torch::Tensor*<sp/>matrix){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::inverse(*matrix);<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="pyc/operators/operators.cxx"/>
  </compounddef>
</doxygen>
