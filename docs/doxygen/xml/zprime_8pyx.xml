<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="zprime_8pyx" kind="file" language="C++">
    <compoundname>zprime.pyx</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>distutils:<sp/>language=c++</highlight></codeline>
<codeline><highlight class="normal">#<sp/>cython:<sp/>language_level=3</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">from<sp/>AnalysisG.core.tools<sp/>cimport<sp/>as_dict,<sp/>as_list</highlight></codeline>
<codeline><highlight class="normal">from<sp/>AnalysisG.core.selection_template<sp/>cimport<sp/>*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">def<sp/>fx(zp,<sp/>data):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name,<sp/>vx<sp/>=<sp/>data</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>getattr(zp,<sp/>name)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>val<sp/>is<sp/>not<sp/>None:<sp/>setattr(zp,<sp/>name,<sp/>val<sp/>+<sp/>vx)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>else:<sp/>setattr(zp,<sp/>name,<sp/>[]);<sp/>fx(zp,<sp/>data)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">cdef<sp/>class<sp/>ZPrime(SelectionTemplate):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.root_leaves<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;zprime_truth_tops&quot;:<sp/>fx,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;zprime_children&quot;<sp/><sp/>:<sp/>fx,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;zprime_truthjets&quot;<sp/>:<sp/>fx,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;zprime_jets&quot;<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>fx,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ptr<sp/>=<sp/>new<sp/>zprime()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.tt<sp/>=<sp/>&lt;zprime*&gt;self.ptr</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/>del<sp/>self.tt</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>void<sp/>transform_dict_keys(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.zprime_truth_tops<sp/>=<sp/>self.tt.zprime_truth_tops</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.zprime_children<sp/><sp/><sp/>=<sp/>self.tt.zprime_children</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.zprime_truthjets<sp/><sp/>=<sp/>self.tt.zprime_truthjets</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.zprime_jets<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>self.tt.zprime_jets</highlight></codeline>
    </programlisting>
    <location file="selections/mc16/zprime/zprime.pyx"/>
  </compounddef>
</doxygen>
