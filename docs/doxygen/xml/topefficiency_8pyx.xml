<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="topefficiency_8pyx" kind="file" language="C++">
    <compoundname>topefficiency.pyx</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>distutils:<sp/>language=c++</highlight></codeline>
<codeline><highlight class="normal">#<sp/>cython:<sp/>language_level=3</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">from<sp/>AnalysisG.selections.performance.topefficiency.topefficiency<sp/>cimport<sp/>*</highlight></codeline>
<codeline><highlight class="normal">from<sp/>AnalysisG.core.selection_template<sp/>cimport<sp/>*</highlight></codeline>
<codeline><highlight class="normal">from<sp/>AnalysisG.core.tools<sp/>cimport<sp/>*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">cdef<sp/>class<sp/>TopEfficiency(SelectionTemplate):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ptr<sp/>=<sp/>new<sp/>topefficiency()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.tt<sp/>=<sp/>&lt;topefficiency*&gt;self.ptr</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/>del<sp/>self.tt</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>void<sp/>transform_dict_keys(self):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.p_topmass<sp/><sp/><sp/>=<sp/>as_dict_dict(&amp;self.tt.p_topmass)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.t_topmass<sp/><sp/><sp/>=<sp/>as_dict_dict(&amp;self.tt.t_topmass)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.p_zmass<sp/><sp/><sp/><sp/><sp/>=<sp/>as_dict_dict(&amp;self.tt.p_zmass)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.t_zmass<sp/><sp/><sp/><sp/><sp/>=<sp/>as_dict_dict(&amp;self.tt.t_zmass)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.prob_tops<sp/><sp/><sp/>=<sp/>as_dict_dict(&amp;self.tt.prob_tops)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.prob_zprime<sp/>=<sp/>as_dict_dict(&amp;self.tt.prob_zprime)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.t_decay_region<sp/>=<sp/>as_dict_dict(&amp;self.tt.t_decay_region)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.p_decay_region<sp/>=<sp/>as_dict_dict(&amp;self.tt.p_decay_region)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.n_tru_tops<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>as_basic_dict(&amp;self.tt.n_tru_tops)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.n_pred_tops<sp/><sp/><sp/><sp/><sp/>=<sp/>as_basic_dict_dict_f(&amp;self.tt.n_pred_tops)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.n_perfect_tops<sp/><sp/>=<sp/>as_basic_dict_dict_f(&amp;self.tt.n_perfect_tops)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.t_nodes<sp/><sp/>=<sp/>as_basic_dict_dict_f(&amp;self.tt.t_nodes)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.p_nodes<sp/><sp/>=<sp/>as_basic_dict_dict_f(&amp;self.tt.p_nodes)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.truth_res_edge<sp/><sp/><sp/>=<sp/>self.tt.truth_res_edge</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.truth_top_edge<sp/><sp/><sp/>=<sp/>self.tt.truth_top_edge</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.truth_ntops<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>self.tt.truth_ntops</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.truth_signal<sp/><sp/><sp/><sp/><sp/>=<sp/>self.tt.truth_signal</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pred_res_edge_score<sp/>=<sp/>self.tt.pred_res_edge_score</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pred_top_edge_score<sp/>=<sp/>self.tt.pred_top_edge_score</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pred_ntops_score<sp/><sp/><sp/><sp/>=<sp/>self.tt.pred_ntops_score</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pred_signal_score<sp/><sp/><sp/>=<sp/>self.tt.pred_signal_score</highlight></codeline>
<codeline></codeline>
    </programlisting>
    <location file="selections/performance/topefficiency/topefficiency.pyx"/>
  </compounddef>
</doxygen>
