<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_3model-name_4_8cxx" kind="file" language="C++">
    <compoundname>&lt;model-name&gt;.cxx</compoundname>
    <includes local="no">model-name</includes>
    <incdepgraph>
      <node id="2">
        <label>model-name</label>
      </node>
      <node id="1">
        <label>&lt;model-name&gt;.cxx</label>
        <link refid="_3model-name_4_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_3model-name_4_8cxx_1a0df2baa002d1059361fd688e329398a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>h&lt; <ref refid="_3model-name_4_8h_1ad0ded42ec33a25917cb08450648f7c49" kindref="member">model</ref>-<ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref> &gt; ::&lt; <ref refid="_3model-name_4_8h_1ad0ded42ec33a25917cb08450648f7c49" kindref="member">model</ref>-<ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref> &gt; <ref refid="_3event-name_4_8cxx_1ad909c3cfb5bcea8ede732f1c3da64879" kindref="member">this</ref></type>
        <definition>h&lt;model-name&gt; ::&lt;model-name&gt; this register_module</definition>
        <argsstring>(this -&gt; example)</argsstring>
        <name>register_module</name>
        <param>
          <type><ref refid="_3event-name_4_8cxx_1ad909c3cfb5bcea8ede732f1c3da64879" kindref="member">this</ref> -&gt;</type>
          <declname>example</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/model/cxx/&lt;model-name&gt;.cxx" line="11" column="11" declfile="templates/model/cxx/&lt;model-name&gt;.cxx" declline="11" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;&lt;model-name&gt;</highlight><highlight class="normal">.h&gt;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">&lt;<ref refid="namespacemodel" kindref="compound">model</ref>-<ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref>&gt;::&lt;<ref refid="namespacemodel" kindref="compound">model</ref>-<ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref>&gt;(){</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="_3model-name_4_8h_1a0317235414ce1934611611b42476d127" kindref="member">example</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>torch::nn::Sequential({</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;L1&quot;</highlight><highlight class="normal">,<sp/>torch::nn::Linear(2,<sp/>2)},</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;RELU&quot;</highlight><highlight class="normal">,<sp/>torch::nn::ReLU()},</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;L2&quot;</highlight><highlight class="normal">,<sp/>torch::nn::Linear(2,<sp/>2)}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>});<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="_3model-name_4_8cxx_1a0df2baa002d1059361fd688e329398a9" kindref="member">register_module</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="_3model-name_4_8h_1a0317235414ce1934611611b42476d127" kindref="member">example</ref>);<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>&lt;<ref refid="namespacemodel" kindref="compound">model</ref>-<ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref>&gt;<ref refid="_3model-name_4_8h_1a0a0ba0f78d5bb43fb316dc5609a2b8de" kindref="member">::forward</ref>(<ref refid="structgraph__t" kindref="compound">graph_t</ref>*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fetch<sp/>the<sp/>input<sp/>data<sp/>of<sp/>the<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>variable<sp/>is<sp/>not<sp/>available,<sp/>this<sp/>will<sp/>return<sp/>a<sp/>nullptr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>graph<sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_data_graph(</highlight><highlight class="stringliteral">&quot;graph&quot;</highlight><highlight class="normal">)<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a288a32e73fa14ea1042eac9569469fab" kindref="member">clone</ref>();<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>node<sp/><sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_data_node(</highlight><highlight class="stringliteral">&quot;node&quot;</highlight><highlight class="normal">)<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a288a32e73fa14ea1042eac9569469fab" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/>edge<sp/><sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>get_data_edge(</highlight><highlight class="stringliteral">&quot;edge&quot;</highlight><highlight class="normal">)<sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a288a32e73fa14ea1042eac9569469fab" kindref="member">clone</ref>();<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Tensor<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>=<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>-&gt;<sp/><ref refid="_3name_4_8h_1a288a32e73fa14ea1042eac9569469fab" kindref="member">clone</ref>();<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>the<sp/>prediction<sp/>weights<sp/>for<sp/>edges,<sp/>nodes,<sp/>graphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>prediction_graph_feature(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">;<sp/>&lt;some-tensor&gt;);<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>prediction_node_feature(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">,<sp/>&lt;some-tensor&gt;);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>prediction_edge_feature(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">,<sp/>&lt;some-tensor&gt;);<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="namespacemain_1ab9bc6d691b605a742f37553e360bf09b" kindref="member">inference_mode</ref>){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}<sp/></highlight><highlight class="comment">//<sp/>skips<sp/>any<sp/>variables<sp/>not<sp/>avaliable<sp/>during<sp/>inference<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>prediction_extra(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">,<sp/>&lt;some-tensor&gt;);<sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>variables<sp/>that<sp/>should<sp/>be<sp/>dumped<sp/>during<sp/>the<sp/>inference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">&lt;<ref refid="namespacemodel" kindref="compound">model</ref>-<ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref>&gt;::~&lt;<ref refid="namespacemodel" kindref="compound">model</ref>-<ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref>&gt;(){}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classmodel__template" kindref="compound">model_template</ref>*<sp/>&lt;<ref refid="namespacemodel" kindref="compound">model</ref>-<ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref>&gt;<ref refid="_3name_4_8h_1a288a32e73fa14ea1042eac9569469fab" kindref="member">::clone</ref>(){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>&lt;<ref refid="namespacemodel" kindref="compound">model</ref>-<ref refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e" kindref="member">name</ref>&gt;();<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="templates/model/cxx/&lt;model-name&gt;.cxx"/>
  </compounddef>
</doxygen>
