<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmodel__template" kind="class" language="C++" prot="public">
    <compoundname>model_template</compoundname>
    <basecompoundref refid="classtools" prot="public" virt="non-virtual">tools</basecompoundref>
    <basecompoundref refid="classnotification" prot="public" virt="non-virtual">notification</basecompoundref>
    <derivedcompoundref refid="classgrift" prot="public" virt="non-virtual">grift</derivedcompoundref>
    <derivedcompoundref refid="classrecursivegraphneuralnetwork" prot="public" virt="non-virtual">recursivegraphneuralnetwork</derivedcompoundref>
    <includes refid="model__template_8h" local="no">model_template.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::string, <ref refid="classmodel__template" kindref="compound">model_template</ref> &gt;</type>
        <definition>cproperty&lt;std::string, model_template&gt; model_template::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Property: The name of this model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="138" column="15" bodyfile="modules/model/include/templates/model_template.h" bodystart="138" bodyend="-1"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::string, <ref refid="classmodel__template" kindref="compound">model_template</ref> &gt;</type>
        <definition>cproperty&lt;std::string, model_template&gt; model_template::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <briefdescription>
<para>Property: The device this model runs on (e.g., &quot;cpu&quot;, &quot;cuda:0&quot;). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="148" column="15" bodyfile="modules/model/include/templates/model_template.h" bodystart="148" bodyend="-1"/>
        <referencedby refid="classmodel__template_1a1ccf58b3ee8f6daa0e032fb316934cbd" compoundref="model__configuration_8cxx" startline="84" endline="88">get_dev_index</referencedby>
        <referencedby refid="classloader_1_1data_1a46dab2b8dedbccccf6caf85ca0fae742" compoundref="loader_8py" startline="31" endline="49">loader.data.interpret</referencedby>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
        <referencedby refid="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" compoundref="model__template_8cxx" startline="69" endline="72">register_module</referencedby>
        <referencedby refid="classmodel__template_1ad6ea8f7ffac83bd49123286ed4cd9fda" compoundref="model__configuration_8cxx" startline="63" endline="82">set_device</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a72d13c3d3b7444e8d6a2a5e8d9b7969e" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; int, <ref refid="classmodel__template" kindref="compound">model_template</ref> &gt;</type>
        <definition>cproperty&lt;int, model_template&gt; model_template::device_index</definition>
        <argsstring></argsstring>
        <name>device_index</name>
        <briefdescription>
<para>Property: The numerical index of the device this model runs on. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="154" column="15" bodyfile="modules/model/include/templates/model_template.h" bodystart="154" bodyend="-1"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1aed99e1a8ff065523a63a0b816cfa2b65" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</type>
        <definition>cproperty&lt;std::vector&lt;std::string&gt;, std::map&lt;std::string, torch::Tensor*&gt; &gt; model_template::i_graph</definition>
        <argsstring></argsstring>
        <name>i_graph</name>
        <briefdescription>
<para>Property: Graph-level input features. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="165" column="15" bodyfile="modules/model/include/templates/model_template.h" bodystart="165" bodyend="-1"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a08760c35dc8eff882f9b0d4e39c84ead" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</type>
        <definition>cproperty&lt;std::vector&lt;std::string&gt;, std::map&lt;std::string, torch::Tensor*&gt; &gt; model_template::i_node</definition>
        <argsstring></argsstring>
        <name>i_node</name>
        <briefdescription>
<para>Property: Node-level input features. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="166" column="15" bodyfile="modules/model/include/templates/model_template.h" bodystart="166" bodyend="-1"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a7bcc136fa8a82e33800a2cef7b5f1dea" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</type>
        <definition>cproperty&lt;std::vector&lt;std::string&gt;, std::map&lt;std::string, torch::Tensor*&gt; &gt; model_template::i_edge</definition>
        <argsstring></argsstring>
        <name>i_edge</name>
        <briefdescription>
<para>Property: Edge-level input features. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="167" column="15" bodyfile="modules/model/include/templates/model_template.h" bodystart="167" bodyend="-1"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a4d890527f81e130c4882941619e0008b" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</type>
        <definition>cproperty&lt;std::vector&lt;std::string&gt;, std::map&lt;std::string, torch::Tensor*&gt; &gt; model_template::o_graph</definition>
        <argsstring></argsstring>
        <name>o_graph</name>
        <briefdescription>
<para>Property: Graph-level output features. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="170" column="15" bodyfile="modules/model/include/templates/model_template.h" bodystart="170" bodyend="-1"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a11d6087907ddd31994bfad5f98583761" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</type>
        <definition>cproperty&lt;std::vector&lt;std::string&gt;, std::map&lt;std::string, torch::Tensor*&gt; &gt; model_template::o_node</definition>
        <argsstring></argsstring>
        <name>o_node</name>
        <briefdescription>
<para>Property: Node-level output features. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="171" column="15" bodyfile="modules/model/include/templates/model_template.h" bodystart="171" bodyend="-1"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a4afc692af0708c956868caddf4645b13" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</type>
        <definition>cproperty&lt;std::vector&lt;std::string&gt;, std::map&lt;std::string, torch::Tensor*&gt; &gt; model_template::o_edge</definition>
        <argsstring></argsstring>
        <name>o_edge</name>
        <briefdescription>
<para>Property: Edge-level output features. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="172" column="15" bodyfile="modules/model/include/templates/model_template.h" bodystart="172" bodyend="-1"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, torch::Tensor * &gt;</type>
        <definition>std::map&lt;std::string, torch::Tensor*&gt; model_template::m_i_graph</definition>
        <argsstring></argsstring>
        <name>m_i_graph</name>
        <briefdescription>
<para>Map of graph-level input features to tensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="189" column="14" bodyfile="modules/model/include/templates/model_template.h" bodystart="189" bodyend="-1"/>
        <referencedby refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" compoundref="model__template_8cxx" startline="118" endline="130">assign_features</referencedby>
        <referencedby refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" compoundref="model__template_8cxx" startline="248" endline="284">flush_outputs</referencedby>
        <referencedby refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" compoundref="model__template_8cxx" startline="182" endline="197">forward</referencedby>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, torch::Tensor * &gt;</type>
        <definition>std::map&lt;std::string, torch::Tensor*&gt; model_template::m_i_node</definition>
        <argsstring></argsstring>
        <name>m_i_node</name>
        <briefdescription>
<para>Map of node-level input features to tensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="190" column="14" bodyfile="modules/model/include/templates/model_template.h" bodystart="190" bodyend="-1"/>
        <referencedby refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" compoundref="model__template_8cxx" startline="118" endline="130">assign_features</referencedby>
        <referencedby refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" compoundref="model__template_8cxx" startline="248" endline="284">flush_outputs</referencedby>
        <referencedby refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" compoundref="model__template_8cxx" startline="182" endline="197">forward</referencedby>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a4af457aed96a7f7090142c86195b1427" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, torch::Tensor * &gt;</type>
        <definition>std::map&lt;std::string, torch::Tensor*&gt; model_template::m_i_edge</definition>
        <argsstring></argsstring>
        <name>m_i_edge</name>
        <briefdescription>
<para>Map of edge-level input features to tensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="191" column="14" bodyfile="modules/model/include/templates/model_template.h" bodystart="191" bodyend="-1"/>
        <referencedby refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" compoundref="model__template_8cxx" startline="118" endline="130">assign_features</referencedby>
        <referencedby refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" compoundref="model__template_8cxx" startline="248" endline="284">flush_outputs</referencedby>
        <referencedby refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" compoundref="model__template_8cxx" startline="182" endline="197">forward</referencedby>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a04d8afa2416ad97d09469648308829ba" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, torch::Tensor * &gt;</type>
        <definition>std::map&lt;std::string, torch::Tensor*&gt; model_template::m_o_graph</definition>
        <argsstring></argsstring>
        <name>m_o_graph</name>
        <briefdescription>
<para>Map of graph-level output features to tensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="193" column="14" bodyfile="modules/model/include/templates/model_template.h" bodystart="193" bodyend="-1"/>
        <referencedby refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" compoundref="model__template_8cxx" startline="118" endline="130">assign_features</referencedby>
        <referencedby refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" compoundref="model__template_8cxx" startline="248" endline="284">flush_outputs</referencedby>
        <referencedby refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" compoundref="model__template_8cxx" startline="182" endline="197">forward</referencedby>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, torch::Tensor * &gt;</type>
        <definition>std::map&lt;std::string, torch::Tensor*&gt; model_template::m_o_node</definition>
        <argsstring></argsstring>
        <name>m_o_node</name>
        <briefdescription>
<para>Map of node-level output features to tensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="194" column="14" bodyfile="modules/model/include/templates/model_template.h" bodystart="194" bodyend="-1"/>
        <referencedby refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" compoundref="model__template_8cxx" startline="118" endline="130">assign_features</referencedby>
        <referencedby refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" compoundref="model__template_8cxx" startline="248" endline="284">flush_outputs</referencedby>
        <referencedby refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" compoundref="model__template_8cxx" startline="182" endline="197">forward</referencedby>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, torch::Tensor * &gt;</type>
        <definition>std::map&lt;std::string, torch::Tensor*&gt; model_template::m_o_edge</definition>
        <argsstring></argsstring>
        <name>m_o_edge</name>
        <briefdescription>
<para>Map of edge-level output features to tensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="195" column="14" bodyfile="modules/model/include/templates/model_template.h" bodystart="195" bodyend="-1"/>
        <referencedby refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" compoundref="model__template_8cxx" startline="118" endline="130">assign_features</referencedby>
        <referencedby refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" compoundref="model__template_8cxx" startline="248" endline="284">flush_outputs</referencedby>
        <referencedby refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" compoundref="model__template_8cxx" startline="182" endline="197">forward</referencedby>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a7b963ead986da475a0c6540971ac675b" prot="public" static="no" mutable="no">
        <type>torch::TensorOptions *</type>
        <definition>torch::TensorOptions* model_template::m_option</definition>
        <argsstring></argsstring>
        <name>m_option</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Pointer to tensor options for configuring tensor creation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="197" column="26" bodyfile="modules/model/include/templates/model_template.h" bodystart="197" bodyend="-1"/>
        <referencedby refid="classmodel__template_1a1ccf58b3ee8f6daa0e032fb316934cbd" compoundref="model__configuration_8cxx" startline="84" endline="88">get_dev_index</referencedby>
        <referencedby refid="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" compoundref="model__template_8cxx" startline="69" endline="72">register_module</referencedby>
        <referencedby refid="classmodel__template_1ad6ea8f7ffac83bd49123286ed4cd9fda" compoundref="model__configuration_8cxx" startline="63" endline="82">set_device</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" prot="public" static="no" mutable="no">
        <type>std::vector&lt; torch::nn::Sequential * &gt;</type>
        <definition>std::vector&lt;torch::nn::Sequential*&gt; model_template::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
<para>Vector of pointers to sequential modules in the model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="198" column="17" bodyfile="modules/model/include/templates/model_template.h" bodystart="198" bodyend="-1"/>
        <referencedby refid="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" compoundref="model__template_8cxx" startline="69" endline="72">register_module</referencedby>
        <referencedby refid="classmodel__template_1ad6ea8f7ffac83bd49123286ed4cd9fda" compoundref="model__configuration_8cxx" startline="63" endline="82">set_device</referencedby>
        <referencedby refid="classmodel__template_1ab6ce719a1c6262912927d4fc33e8842a" compoundref="model__template_8cxx" startline="102" endline="107">~model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" prot="public" static="no" mutable="no">
        <type><ref refid="classlossfx" kindref="compound">lossfx</ref> *</type>
        <definition>lossfx* model_template::m_loss</definition>
        <argsstring></argsstring>
        <name>m_loss</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Pointer to the loss function manager. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="199" column="12" bodyfile="modules/model/include/templates/model_template.h" bodystart="199" bodyend="-1"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
        <referencedby refid="classmodel__template_1a8929bec347c8d7a7cb3b6c355d6139d8" compoundref="model__template_8cxx" startline="82" endline="86">register_module</referencedby>
        <referencedby refid="classmodel__template_1ab6ce719a1c6262912927d4fc33e8842a" compoundref="model__template_8cxx" startline="102" endline="107">~model_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmodel__template_1a95ac60e080148009edd1e00c3ed7fae7" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string model_template::model_checkpoint_path</definition>
        <argsstring></argsstring>
        <name>model_checkpoint_path</name>
        <briefdescription>
<para>Path for saving/loading model checkpoints. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="201" column="17" bodyfile="modules/model/include/templates/model_template.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>model_template::model_template</definition>
        <argsstring>()</argsstring>
        <name>model_template</name>
        <briefdescription>
<para>Constructor for the <computeroutput><ref refid="classmodel__template" kindref="compound">model_template</ref></computeroutput> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes a new model template with default settings.</para>
<para>Sets up property bindings for input and output features, device settings, and initializes the loss function manager. Each property is bound to its appropriate setter and getter methods. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="55" column="5" bodyfile="modules/model/cxx/model_template.cxx" bodystart="18" bodyend="55"/>
        <references refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" compoundref="model__template_8h" startline="148">device</references>
        <references refid="classmodel__template_1a72d13c3d3b7444e8d6a2a5e8d9b7969e" compoundref="model__template_8h" startline="154">device_index</references>
        <references refid="classmodel__template_1a1ccf58b3ee8f6daa0e032fb316934cbd" compoundref="model__configuration_8cxx" startline="84" endline="88">get_dev_index</references>
        <references refid="classmodel__template_1a3e2ae9bb1ff5cb88411fa35d04fbaf8b" compoundref="model__configuration_8cxx" startline="61" endline="61">get_name</references>
        <references refid="classmodel__template_1a7bcc136fa8a82e33800a2cef7b5f1dea" compoundref="model__template_8h" startline="167">i_edge</references>
        <references refid="classmodel__template_1aed99e1a8ff065523a63a0b816cfa2b65" compoundref="model__template_8h" startline="165">i_graph</references>
        <references refid="classmodel__template_1a08760c35dc8eff882f9b0d4e39c84ead" compoundref="model__template_8h" startline="166">i_node</references>
        <references refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" compoundref="model__template_8h" startline="191">m_i_edge</references>
        <references refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" compoundref="model__template_8h" startline="189">m_i_graph</references>
        <references refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" compoundref="model__template_8h" startline="190">m_i_node</references>
        <references refid="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" compoundref="model__template_8h" startline="199">m_loss</references>
        <references refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" compoundref="model__template_8h" startline="195">m_o_edge</references>
        <references refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" compoundref="model__template_8h" startline="193">m_o_graph</references>
        <references refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" compoundref="model__template_8h" startline="194">m_o_node</references>
        <references refid="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" compoundref="model__template_8h" startline="138">name</references>
        <references refid="classmodel__template_1a4afc692af0708c956868caddf4645b13" compoundref="model__template_8h" startline="172">o_edge</references>
        <references refid="classmodel__template_1a4d890527f81e130c4882941619e0008b" compoundref="model__template_8h" startline="170">o_graph</references>
        <references refid="classmodel__template_1a11d6087907ddd31994bfad5f98583761" compoundref="model__template_8h" startline="171">o_node</references>
        <references refid="classmodel__template_1ac4b5cf9bc73437cd847dc80cc5c1c75b" compoundref="model__configuration_8cxx" startline="89" endline="89">set_dev_index</references>
        <references refid="classmodel__template_1ad6ea8f7ffac83bd49123286ed4cd9fda" compoundref="model__configuration_8cxx" startline="63" endline="82">set_device</references>
        <references refid="classcproperty_1a31b26b5ffb20bbf8d8ee38e0755a9819" compoundref="property_8h" startline="22" endline="25">cproperty&lt; T, G &gt;::set_getter</references>
        <references refid="classmodel__template_1a042ce754045343eade6e54d556854859" compoundref="model__template_8cxx" startline="239" endline="241">set_input_features</references>
        <references refid="classmodel__template_1ad1a321ec8ca5e79c79322c83ef70b7c5" compoundref="model__configuration_8cxx" startline="60" endline="60">set_name</references>
        <references refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" compoundref="property_8h" startline="27" endline="27">cproperty&lt; T, G &gt;::set_object</references>
        <references refid="classmodel__template_1a977402549135f0f763157b1282b44173" compoundref="model__lossfx_8cxx" startline="3" endline="14">set_output_features</references>
        <references refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" compoundref="property_8h" startline="17" endline="20">cproperty&lt; T, G &gt;::set_setter</references>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1ab6ce719a1c6262912927d4fc33e8842a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>model_template::~model_template</definition>
        <argsstring>()</argsstring>
        <name>~model_template</name>
        <briefdescription>
<para>Virtual destructor for the <computeroutput><ref refid="classmodel__template" kindref="compound">model_template</ref></computeroutput> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Destructor for the <ref refid="classmodel__template" kindref="compound">model_template</ref> class.</para>
<para>Ensures proper cleanup of resources, including module containers and outputs.</para>
<para>Cleans up all resources used by the model, including registered modules, output tensors, and the loss function manager. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="61" column="13" bodyfile="modules/model/cxx/model_template.cxx" bodystart="102" bodyend="107"/>
        <references refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" compoundref="model__template_8cxx" startline="248" endline="284">flush_outputs</references>
        <references refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" compoundref="model__template_8h" startline="198">m_data</references>
        <references refid="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" compoundref="model__template_8h" startline="199">m_loss</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1aa4342444b93659e670d921fcba9bd689" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classmodel__template" kindref="compound">model_template</ref> *</type>
        <definition>model_template * model_template::clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <reimplementedby refid="classrecursivegraphneuralnetwork_1ab814577681dd9fcc979ebe9b8cdfe0f6">clone</reimplementedby>
        <reimplementedby refid="classgrift_1aaa79c30c964e2edac2d6d49f2f95b9a3">clone</reimplementedby>
        <briefdescription>
<para>Creates a clone of the model template. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates and returns a clone of this model template.</para>
<para><simplesect kind="return"><para>A pointer to a new <ref refid="classmodel__template" kindref="compound">model_template</ref> instance that is a copy of this one.</para>
</simplesect>
<simplesect kind="return"><para>A new <ref refid="classmodel__template" kindref="compound">model_template</ref> instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="67" column="28" bodyfile="modules/model/cxx/model_configuration.cxx" bodystart="27" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::register_module</definition>
        <argsstring>(torch::nn::Sequential *data)</argsstring>
        <name>register_module</name>
        <param>
          <type>torch::nn::Sequential *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Registers a PyTorch sequential module with the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sequential module to register.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Adds the module to the model&apos;s collection and places it on the appropriate device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sequential module to register.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If a device option is set, the module is transferred to that device before registration. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="75" column="10" bodyfile="modules/model/cxx/model_template.cxx" bodystart="69" bodyend="72"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" compoundref="model__template_8h" startline="148">device</references>
        <references refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" compoundref="model__template_8h" startline="198">m_data</references>
        <references refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" compoundref="model__template_8h" startline="197">m_option</references>
        <referencedby refid="classgrift_1a8c3babc97f67eedd8105da8e245bdcef" compoundref="grift_8cxx" startline="4" endline="81">grift::grift</referencedby>
        <referencedby refid="classrecursivegraphneuralnetwork_1aa3a248bd7e709fbd082389be9a37c57c" compoundref="_recursive_graph_neural_network_8cxx" startline="4" endline="103">recursivegraphneuralnetwork::recursivegraphneuralnetwork</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1a8929bec347c8d7a7cb3b6c355d6139d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::register_module</definition>
        <argsstring>(torch::nn::Sequential *data, mlp_init method)</argsstring>
        <name>register_module</name>
        <param>
          <type>torch::nn::Sequential *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="model__template_8h_1a04569a45296869bf184d4b79d10487dd" kindref="member">mlp_init</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
<para>Registers a PyTorch sequential module with the model and initializes its weights. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sequential module to register. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>The initialization method to use for the module&apos;s weights.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Adds the module to the model&apos;s collection, places it on the appropriate device, and initializes its weights according to the specified method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sequential module to register. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>The initialization method to use for the module&apos;s weights.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If a device option is set, the module is transferred to that device before registration. The module&apos;s weights are initialized according to the specified method. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="85" column="10" bodyfile="modules/model/cxx/model_template.cxx" bodystart="82" bodyend="86"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" compoundref="model__template_8h" startline="148">device</references>
        <references refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" compoundref="model__template_8h" startline="198">m_data</references>
        <references refid="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" compoundref="model__template_8h" startline="199">m_loss</references>
        <references refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" compoundref="model__template_8h" startline="197">m_option</references>
        <references refid="namespacemain_1aa7f7a57dd94ac214b133aba964145812" compoundref="mc16__matching_2main_8py" startline="117">main.method</references>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void model_template::forward</definition>
        <argsstring>(graph_t *data)</argsstring>
        <name>forward</name>
        <reimplementedby refid="classrecursivegraphneuralnetwork_1a4b09bc8de8d9ecd0b4ff1ffa94deea98">forward</reimplementedby>
        <reimplementedby refid="classgrift_1a72f7575fbd1d744d4f9053e5b8b7ee38">forward</reimplementedby>
        <param>
          <type><ref refid="structgraph__t" kindref="compound">graph_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Virtual forward pass method for a single graph. </para>
        </briefdescription>
        <detaileddescription>
<para>Default implementation of the forward pass for a single graph.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structgraph__t" kindref="compound">graph_t</ref> structure containing input data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This method should be overridden by derived classes to implement the forward pass logic.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structgraph__t" kindref="compound">graph_t</ref> structure containing input data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This is a placeholder that derived classes should override with their specific implementation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="93" column="18" bodyfile="modules/model/cxx/model_template.cxx" bodystart="94" bodyend="94"/>
        <referencedby refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" compoundref="model__template_8cxx" startline="182" endline="197">forward</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void model_template::forward</definition>
        <argsstring>(graph_t *data, bool train)</argsstring>
        <name>forward</name>
        <param>
          <type><ref refid="structgraph__t" kindref="compound">graph_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>train</declname>
        </param>
        <briefdescription>
<para>Forward pass for a single graph with training mode flag. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs forward pass on a single graph, with optional training mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structgraph__t" kindref="compound">graph_t</ref> structure containing input data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>train</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating if the model is in training mode (true) or evaluation mode (false).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Executes the model&apos;s forward pass on a single graph, optionally in training mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structgraph__t" kindref="compound">graph_t</ref> structure containing input data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>train</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating if the model is in training mode (true) or evaluation mode (false).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Sets the model&apos;s modules to training or evaluation mode as specified, then performs the forward pass. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="102" column="18" bodyfile="modules/model/cxx/model_template.cxx" bodystart="182" bodyend="197"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe">data_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a05e49555101f3239adff74b7ab84b12b">data_graph</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a552cd5bfd507d39d3351ee8b6bc95445">data_node</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7">edge_index</references>
        <references refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" compoundref="model__template_8cxx" startline="248" endline="284">flush_outputs</references>
        <references refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" compoundref="model__template_8cxx" startline="94" endline="94">forward</references>
        <references refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" compoundref="model__template_8h" startline="191">m_i_edge</references>
        <references refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" compoundref="model__template_8h" startline="189">m_i_graph</references>
        <references refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" compoundref="model__template_8h" startline="190">m_i_node</references>
        <references refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" compoundref="model__template_8h" startline="195">m_o_edge</references>
        <references refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" compoundref="model__template_8h" startline="193">m_o_graph</references>
        <references refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" compoundref="model__template_8h" startline="194">m_o_node</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00">truth_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587">truth_graph</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5">truth_node</references>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1a3f4085b3bae7b25b1dfc6f94fa509f94" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void model_template::forward</definition>
        <argsstring>(std::vector&lt; graph_t * &gt; data, bool train)</argsstring>
        <name>forward</name>
        <param>
          <type>std::vector&lt; <ref refid="structgraph__t" kindref="compound">graph_t</ref> * &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>train</declname>
        </param>
        <briefdescription>
<para>Forward pass for multiple graphs with training mode flag. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs forward pass on multiple graphs, with optional training mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of pointers to <ref refid="structgraph__t" kindref="compound">graph_t</ref> structures containing input data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>train</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating if the model is in training mode (true) or evaluation mode (false).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Executes the model&apos;s forward pass on multiple graphs, optionally in training mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of pointers to <ref refid="structgraph__t" kindref="compound">graph_t</ref> structures containing input data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>train</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating if the model is in training mode (true) or evaluation mode (false).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Sets the model&apos;s modules to training or evaluation mode as specified, then performs the forward pass on each graph in the input vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="111" column="18" bodyfile="modules/model/cxx/model_template.cxx" bodystart="207" bodyend="230"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe">data_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a05e49555101f3239adff74b7ab84b12b">data_graph</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a552cd5bfd507d39d3351ee8b6bc95445">data_node</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7">edge_index</references>
        <references refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" compoundref="model__template_8cxx" startline="248" endline="284">flush_outputs</references>
        <references refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" compoundref="model__template_8cxx" startline="94" endline="94">forward</references>
        <references refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" compoundref="test__evaluation_8py" startline="10">test_evaluation.gr</references>
        <references refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" compoundref="model__template_8h" startline="191">m_i_edge</references>
        <references refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" compoundref="model__template_8h" startline="189">m_i_graph</references>
        <references refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" compoundref="model__template_8h" startline="190">m_i_node</references>
        <references refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" compoundref="model__template_8h" startline="195">m_o_edge</references>
        <references refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" compoundref="model__template_8h" startline="193">m_o_graph</references>
        <references refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" compoundref="model__template_8h" startline="194">m_o_node</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00">truth_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587">truth_graph</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5">truth_node</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1afd196d00ade10419642d541a1eaaef21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Tensor *</type>
        <definition>torch::Tensor * model_template::assign_features</definition>
        <argsstring>(std::string inpt, graph_enum type, graph_t *data)</argsstring>
        <name>assign_features</name>
        <param>
          <type>std::string</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structgraph__t" kindref="compound">graph_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Assigns features from a graph to tensors based on feature name and type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature name to assign. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of graph component (node, edge, or graph). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structgraph__t" kindref="compound">graph_t</ref> structure containing the features. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the resulting tensor containing the assigned features.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature name to assign. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of graph component (node, edge, or graph). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structgraph__t" kindref="compound">graph_t</ref> structure containing the features. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the resulting tensor containing the assigned features.</para>
</simplesect>
Extracts specified features from the graph and converts them to PyTorch tensors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="120" column="19" bodyfile="modules/model/cxx/model_template.cxx" bodystart="118" bodyend="130"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe">data_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a05e49555101f3239adff74b7ab84b12b">data_graph</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a552cd5bfd507d39d3351ee8b6bc95445">data_node</references>
        <references refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" compoundref="model__template_8h" startline="191">m_i_edge</references>
        <references refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" compoundref="model__template_8h" startline="189">m_i_graph</references>
        <references refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" compoundref="model__template_8h" startline="190">m_i_node</references>
        <references refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" compoundref="model__template_8h" startline="195">m_o_edge</references>
        <references refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" compoundref="model__template_8h" startline="193">m_o_graph</references>
        <references refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" compoundref="model__template_8h" startline="194">m_o_node</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00">truth_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587">truth_graph</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5">truth_node</references>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1ad443a513269e2a5f95d6063c840bc324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch::Tensor *</type>
        <definition>torch::Tensor * model_template::assign_features</definition>
        <argsstring>(std::string inpt, graph_enum type, std::vector&lt; graph_t * &gt; *data)</argsstring>
        <name>assign_features</name>
        <param>
          <type>std::string</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structgraph__t" kindref="compound">graph_t</ref> * &gt; *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Assigns features from multiple graphs to tensors based on feature name and type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature name to assign. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of graph component (node, edge, or graph). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a vector of <ref refid="structgraph__t" kindref="compound">graph_t</ref> structures containing the features. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the resulting tensor containing the assigned features.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature name to assign. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of graph component (node, edge, or graph). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a vector of <ref refid="structgraph__t" kindref="compound">graph_t</ref> structures containing the features. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the resulting tensor containing the assigned features.</para>
</simplesect>
Extracts specified features from multiple graphs and converts them to batched PyTorch tensors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="129" column="19" bodyfile="modules/model/cxx/model_template.cxx" bodystart="141" bodyend="173"/>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a8277e0910d750195b448797616e091ad">d</references>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9af14d031091d837e57007a1fdea58e5fe">data_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a05e49555101f3239adff74b7ab84b12b">data_graph</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a552cd5bfd507d39d3351ee8b6bc95445">data_node</references>
        <references refid="namespacemain_1a1eba0669b3d0fd1cef430ae99c82cc59" compoundref="benchmarks_2main_8py" startline="21">main.fx</references>
        <references refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" compoundref="model__template_8h" startline="191">m_i_edge</references>
        <references refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" compoundref="model__template_8h" startline="189">m_i_graph</references>
        <references refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" compoundref="model__template_8h" startline="190">m_i_node</references>
        <references refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" compoundref="model__template_8h" startline="195">m_o_edge</references>
        <references refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" compoundref="model__template_8h" startline="193">m_o_graph</references>
        <references refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" compoundref="model__template_8h" startline="194">m_o_node</references>
        <references refid="_3selection-name_4_8h_1aacdcf64980359329e5e8442cb72446a9">merge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9afc5bd8c8855a5bb98c0a2ffcf7d83a00">truth_edge</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9a1d41882240fd339ed7bacd69ea90f587">truth_graph</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9ae895cb1e23c56f371dafbef2634572f5">truth_node</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::flush_outputs</definition>
        <argsstring>()</argsstring>
        <name>flush_outputs</name>
        <briefdescription>
<para>Clears all output tensors, freeing memory. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to reset the model&apos;s output state between forward passes.</para>
<para>Iterates through all output feature maps and deletes their tensor contents. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="135" column="10" bodyfile="modules/model/cxx/model_template.cxx" bodystart="248" bodyend="284"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7">edge_index</references>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" compoundref="model__template_8h" startline="191">m_i_edge</references>
        <references refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" compoundref="model__template_8h" startline="189">m_i_graph</references>
        <references refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" compoundref="model__template_8h" startline="190">m_i_node</references>
        <references refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" compoundref="model__template_8h" startline="195">m_o_edge</references>
        <references refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" compoundref="model__template_8h" startline="193">m_o_graph</references>
        <references refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" compoundref="model__template_8h" startline="194">m_o_node</references>
        <referencedby refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" compoundref="model__template_8cxx" startline="182" endline="197">forward</referencedby>
        <referencedby refid="classmodel__template_1ab6ce719a1c6262912927d4fc33e8842a" compoundref="model__template_8cxx" startline="102" endline="107">~model_template</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodel__template_1ad1a321ec8ca5e79c79322c83ef70b7c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::set_name</definition>
        <argsstring>(std::string *name, model_template *model)</argsstring>
        <name>set_name</name>
        <param>
          <type>std::string *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classmodel__template" kindref="compound">model_template</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Static setter for the <computeroutput>name</computeroutput> property. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a string containing the name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <computeroutput><ref refid="classmodel__template" kindref="compound">model_template</ref></computeroutput> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="142" column="17" bodyfile="modules/model/cxx/model_configuration.cxx" bodystart="60" bodyend="60"/>
        <references refid="namespacetest__ssml__mc20_1ad4a9e3d60bf633862d5fba7060e80633" compoundref="test__ssml__mc20_8py" startline="13">test_ssml_mc20.md</references>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1a3e2ae9bb1ff5cb88411fa35d04fbaf8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::get_name</definition>
        <argsstring>(std::string *name, model_template *model)</argsstring>
        <name>get_name</name>
        <param>
          <type>std::string *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classmodel__template" kindref="compound">model_template</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Static getter for the <computeroutput>name</computeroutput> property. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a string to store the name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <computeroutput><ref refid="classmodel__template" kindref="compound">model_template</ref></computeroutput> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="146" column="17" bodyfile="modules/model/cxx/model_configuration.cxx" bodystart="61" bodyend="61"/>
        <references refid="namespacetest__ssml__mc20_1ad4a9e3d60bf633862d5fba7060e80633" compoundref="test__ssml__mc20_8py" startline="13">test_ssml_mc20.md</references>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1ad6ea8f7ffac83bd49123286ed4cd9fda" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::set_device</definition>
        <argsstring>(std::string *dev, model_template *model)</argsstring>
        <name>set_device</name>
        <param>
          <type>std::string *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="classmodel__template" kindref="compound">model_template</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Static setter for the <computeroutput>device</computeroutput> property. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a string containing the device name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <computeroutput><ref refid="classmodel__template" kindref="compound">model_template</ref></computeroutput> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="152" column="17" bodyfile="modules/model/cxx/model_configuration.cxx" bodystart="63" bodyend="82"/>
        <references refid="namespacemain_1a7036efb6f19b478d668e5ba8e23d215d" compoundref="performance_2main_8py" startline="142">main.dev</references>
        <references refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" compoundref="model__template_8h" startline="148">device</references>
        <references refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" compoundref="strings_8cxx" startline="65" endline="69">tools::has_string</references>
        <references refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" compoundref="model__template_8h" startline="198">m_data</references>
        <references refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" compoundref="model__template_8h" startline="197">m_option</references>
        <references refid="namespacetest__ssml__mc20_1ad4a9e3d60bf633862d5fba7060e80633" compoundref="test__ssml__mc20_8py" startline="13">test_ssml_mc20.md</references>
        <references refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" compoundref="strings_8cxx" startline="23" endline="36">tools::split</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1ac4b5cf9bc73437cd847dc80cc5c1c75b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::set_dev_index</definition>
        <argsstring>(int *dev_idx, model_template *model)</argsstring>
        <name>set_dev_index</name>
        <param>
          <type>int *</type>
          <declname>dev_idx</declname>
        </param>
        <param>
          <type><ref refid="classmodel__template" kindref="compound">model_template</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Static setter for the <computeroutput>device_index</computeroutput> property. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an integer containing the device index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <computeroutput><ref refid="classmodel__template" kindref="compound">model_template</ref></computeroutput> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="158" column="17" bodyfile="modules/model/cxx/model_configuration.cxx" bodystart="89" bodyend="89"/>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1a1ccf58b3ee8f6daa0e032fb316934cbd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::get_dev_index</definition>
        <argsstring>(int *dev_idx, model_template *model)</argsstring>
        <name>get_dev_index</name>
        <param>
          <type>int *</type>
          <declname>dev_idx</declname>
        </param>
        <param>
          <type><ref refid="classmodel__template" kindref="compound">model_template</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Static getter for the <computeroutput>device_index</computeroutput> property. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dev_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an integer to store the device index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <computeroutput><ref refid="classmodel__template" kindref="compound">model_template</ref></computeroutput> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="162" column="17" bodyfile="modules/model/cxx/model_configuration.cxx" bodystart="84" bodyend="88"/>
        <references refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" compoundref="model__template_8h" startline="148">device</references>
        <references refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" compoundref="model__template_8h" startline="197">m_option</references>
        <references refid="namespacetest__ssml__mc20_1ad4a9e3d60bf633862d5fba7060e80633" compoundref="test__ssml__mc20_8py" startline="13">test_ssml_mc20.md</references>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1a042ce754045343eade6e54d556854859" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::set_input_features</definition>
        <argsstring>(std::vector&lt; std::string &gt; *inpt, std::map&lt; std::string, torch::Tensor * &gt; *in_fx)</argsstring>
        <name>set_input_features</name>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, torch::Tensor * &gt; *</type>
          <declname>in_fx</declname>
        </param>
        <briefdescription>
<para>Sets input features for a specific feature map. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a vector of strings containing feature names. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_fx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the feature map to set.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a vector of strings containing feature names. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_fx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the feature map to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Initializes map entries for each feature name in the input vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="179" column="17" bodyfile="modules/model/cxx/model_template.cxx" bodystart="239" bodyend="241"/>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmodel__template_1a977402549135f0f763157b1282b44173" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void model_template::set_output_features</definition>
        <argsstring>(std::vector&lt; std::string &gt; *inpt, std::map&lt; std::string, torch::Tensor * &gt; *in_fx)</argsstring>
        <name>set_output_features</name>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, torch::Tensor * &gt; *</type>
          <declname>in_fx</declname>
        </param>
        <briefdescription>
<para>Sets output features for a specific feature map. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a vector of strings containing feature names. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_fx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the feature map to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/model/include/templates/model_template.h" line="186" column="17" bodyfile="modules/model/cxx/model_lossfx.cxx" bodystart="3" bodyend="14"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="classlossfx_1a1ff4ab72a5193a641f3184f2fa77daf9" compoundref="switching_8cxx" startline="3" endline="26">lossfx::loss_string</references>
        <referencedby refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" compoundref="model__template_8cxx" startline="18" endline="55">model_template</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base template class for machine learning models. </para>
    </briefdescription>
    <detaileddescription>
<para>Inherits from <computeroutput>tools</computeroutput> and <computeroutput>notification</computeroutput> to provide utility functions and logging capabilities. This class serves as a foundation for implementing various neural network architectures, with particular focus on graph neural networks. It provides mechanisms for managing model parameters, feature assignment, forward propagation, and more. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>grift</label>
        <link refid="classgrift"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>model_template</label>
        <link refid="classmodel__template"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>notification</label>
        <link refid="classnotification"/>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="5">
        <label>recursivegraphneuralnetwork</label>
        <link refid="classrecursivegraphneuralnetwork"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16">
        <label>K</label>
      </node>
      <node id="11">
        <label>T</label>
      </node>
      <node id="10">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>lossfx</label>
        <link refid="classlossfx"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, std::map&lt; std::string, torch::Tensor * &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>cproperty&lt; T, G &gt;</label>
        <link refid="classcproperty"/>
      </node>
      <node id="1">
        <label>model_template</label>
        <link refid="classmodel__template"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>o_node</edgelabel>
          <edgelabel>o_graph</edgelabel>
          <edgelabel>i_edge</edgelabel>
          <edgelabel>i_node</edgelabel>
          <edgelabel>o_edge</edgelabel>
          <edgelabel>i_graph</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_loss</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>device</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>model_checkpoint_path</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>device_index</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_o_node</edgelabel>
          <edgelabel>m_o_graph</edgelabel>
          <edgelabel>m_i_edge</edgelabel>
          <edgelabel>m_i_node</edgelabel>
          <edgelabel>m_i_graph</edgelabel>
          <edgelabel>m_o_edge</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="14">
        <label>std::map&lt; std::string, torch::Tensor * &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; std::string, torch::Tensor * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>cproperty&lt; int, model_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; int, model_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>cproperty&lt; std::string, model_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; std::string, model_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::vector&lt; torch::nn::Sequential * &gt;</label>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; torch::nn::Sequential * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="4" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/model/include/templates/model_template.h" line="49" column="1" bodyfile="modules/model/include/templates/model_template.h" bodystart="46" bodyend="202"/>
    <listofallmembers>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>model_template</scope><name>absolute_path</name></member>
      <member refid="classmodel__template_1afd196d00ade10419642d541a1eaaef21" prot="public" virt="non-virtual"><scope>model_template</scope><name>assign_features</name></member>
      <member refid="classmodel__template_1ad443a513269e2a5f95d6063c840bc324" prot="public" virt="non-virtual"><scope>model_template</scope><name>assign_features</name></member>
      <member refid="classmodel__template_1aa4342444b93659e670d921fcba9bd689" prot="public" virt="virtual"><scope>model_template</scope><name>clone</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>model_template</scope><name>create_path</name></member>
      <member refid="classnotification_1a8dd1ebb578269118b18bf7f0e176bf14" prot="public" virt="non-virtual"><scope>model_template</scope><name>Debug</name></member>
      <member refid="classnotification_1aa14ded524569ac1d7fd121c161a733be" prot="protected" virt="non-virtual"><scope>model_template</scope><name>debug_mode</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>model_template</scope><name>delete_path</name></member>
      <member refid="classmodel__template_1ada63515f11116b4fa42e9cf75e79a77c" prot="public" virt="non-virtual"><scope>model_template</scope><name>device</name></member>
      <member refid="classmodel__template_1a72d13c3d3b7444e8d6a2a5e8d9b7969e" prot="public" virt="non-virtual"><scope>model_template</scope><name>device_index</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>model_template</scope><name>ends_with</name></member>
      <member refid="classnotification_1ab0c3843575c157d799e532a9ea5acbd0" prot="public" virt="non-virtual"><scope>model_template</scope><name>Error</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>model_template</scope><name>extract</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>model_template</scope><name>flush</name></member>
      <member refid="classmodel__template_1ac393d52139a06ce55e9b7872954ef17f" prot="public" virt="non-virtual"><scope>model_template</scope><name>flush_outputs</name></member>
      <member refid="classmodel__template_1ac6d8ddbdaf334cfefbe1e6361fd4ebbb" prot="public" virt="virtual"><scope>model_template</scope><name>forward</name></member>
      <member refid="classmodel__template_1a6b9c9f24d7800179c2d8f1f7eff59acc" prot="public" virt="virtual"><scope>model_template</scope><name>forward</name></member>
      <member refid="classmodel__template_1a3f4085b3bae7b25b1dfc6f94fa509f94" prot="public" virt="virtual"><scope>model_template</scope><name>forward</name></member>
      <member refid="classnotification_1ae25782afd10b3cb5fffe17afaf4fffc0" prot="public" virt="non-virtual"><scope>model_template</scope><name>get_debug_mode</name></member>
      <member refid="classmodel__template_1a1ccf58b3ee8f6daa0e032fb316934cbd" prot="public" virt="non-virtual"><scope>model_template</scope><name>get_dev_index</name></member>
      <member refid="classmodel__template_1a3e2ae9bb1ff5cb88411fa35d04fbaf8b" prot="public" virt="non-virtual"><scope>model_template</scope><name>get_name</name></member>
      <member refid="classnotification_1aa0aad214cf167691e516ecc343306244" prot="public" virt="non-virtual"><scope>model_template</scope><name>get_prefix</name></member>
      <member refid="classnotification_1a3a12e8eaf363a320abee5393436123f0" prot="public" virt="non-virtual"><scope>model_template</scope><name>get_suppress_info</name></member>
      <member refid="classnotification_1ab53313e9343e9ef6deaefa2bdd3a837a" prot="public" virt="non-virtual"><scope>model_template</scope><name>get_suppress_warning</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>model_template</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>model_template</scope><name>has_value</name></member>
      <member refid="classmodel__template_1a7bcc136fa8a82e33800a2cef7b5f1dea" prot="public" virt="non-virtual"><scope>model_template</scope><name>i_edge</name></member>
      <member refid="classmodel__template_1aed99e1a8ff065523a63a0b816cfa2b65" prot="public" virt="non-virtual"><scope>model_template</scope><name>i_graph</name></member>
      <member refid="classmodel__template_1a08760c35dc8eff882f9b0d4e39c84ead" prot="public" virt="non-virtual"><scope>model_template</scope><name>i_node</name></member>
      <member refid="classnotification_1a2ea9e0828e3d323b5bb5cdecc8f018a8" prot="public" virt="non-virtual"><scope>model_template</scope><name>Info</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>model_template</scope><name>is_file</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>model_template</scope><name>ls</name></member>
      <member refid="classmodel__template_1ad5ad4c3451f1b6732e91dc8949d656d0" prot="public" virt="non-virtual"><scope>model_template</scope><name>m_data</name></member>
      <member refid="classmodel__template_1a4af457aed96a7f7090142c86195b1427" prot="public" virt="non-virtual"><scope>model_template</scope><name>m_i_edge</name></member>
      <member refid="classmodel__template_1aeba2a7f8f13f4534b5eaccc93ff51628" prot="public" virt="non-virtual"><scope>model_template</scope><name>m_i_graph</name></member>
      <member refid="classmodel__template_1a92beed8d89fccea381550c27e91e11cd" prot="public" virt="non-virtual"><scope>model_template</scope><name>m_i_node</name></member>
      <member refid="classmodel__template_1a3c50a6d40e2e2ad445189439107ed7ef" prot="public" virt="non-virtual"><scope>model_template</scope><name>m_loss</name></member>
      <member refid="classmodel__template_1a984ca129eee3c012038f53f5280be3ba" prot="public" virt="non-virtual"><scope>model_template</scope><name>m_o_edge</name></member>
      <member refid="classmodel__template_1a04d8afa2416ad97d09469648308829ba" prot="public" virt="non-virtual"><scope>model_template</scope><name>m_o_graph</name></member>
      <member refid="classmodel__template_1ac85acc672d6579d8e7ccbbaa5e153c64" prot="public" virt="non-virtual"><scope>model_template</scope><name>m_o_node</name></member>
      <member refid="classmodel__template_1a7b963ead986da475a0c6540971ac675b" prot="public" virt="non-virtual"><scope>model_template</scope><name>m_option</name></member>
      <member refid="classnotification_1a47e2d300e33c44a24b0c51d9e9a83914" prot="public" virt="non-virtual"><scope>model_template</scope><name>Message</name></member>
      <member refid="classmodel__template_1a95ac60e080148009edd1e00c3ed7fae7" prot="public" virt="non-virtual"><scope>model_template</scope><name>model_checkpoint_path</name></member>
      <member refid="classmodel__template_1af47db8a6a8514fda6e3b714813c07f6d" prot="public" virt="non-virtual"><scope>model_template</scope><name>model_template</name></member>
      <member refid="classmodel__template_1ad54c75a638641e0bb68d14554011de2f" prot="public" virt="non-virtual"><scope>model_template</scope><name>name</name></member>
      <member refid="classnotification_1a3ec5fe2d8db29cf32853858ff58fdbd7" prot="public" virt="non-virtual"><scope>model_template</scope><name>notification</name></member>
      <member refid="classmodel__template_1a4afc692af0708c956868caddf4645b13" prot="public" virt="non-virtual"><scope>model_template</scope><name>o_edge</name></member>
      <member refid="classmodel__template_1a4d890527f81e130c4882941619e0008b" prot="public" virt="non-virtual"><scope>model_template</scope><name>o_graph</name></member>
      <member refid="classmodel__template_1a11d6087907ddd31994bfad5f98583761" prot="public" virt="non-virtual"><scope>model_template</scope><name>o_node</name></member>
      <member refid="classnotification_1a913d4c8a7736df782f900dd436cfeaa6" prot="protected" virt="non-virtual"><scope>model_template</scope><name>prefix</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>model_template</scope><name>put</name></member>
      <member refid="classmodel__template_1a456e96f75278fed9c8d6f4dbff885e39" prot="public" virt="non-virtual"><scope>model_template</scope><name>register_module</name></member>
      <member refid="classmodel__template_1a8929bec347c8d7a7cb3b6c355d6139d8" prot="public" virt="non-virtual"><scope>model_template</scope><name>register_module</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>model_template</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>model_template</scope><name>replace</name></member>
      <member refid="classnotification_1a5a69a50032f5dcf38bed2bb27dc048fc" prot="public" virt="non-virtual"><scope>model_template</scope><name>set_debug_mode</name></member>
      <member refid="classmodel__template_1ac4b5cf9bc73437cd847dc80cc5c1c75b" prot="public" virt="non-virtual"><scope>model_template</scope><name>set_dev_index</name></member>
      <member refid="classmodel__template_1ad6ea8f7ffac83bd49123286ed4cd9fda" prot="public" virt="non-virtual"><scope>model_template</scope><name>set_device</name></member>
      <member refid="classmodel__template_1a042ce754045343eade6e54d556854859" prot="public" virt="non-virtual"><scope>model_template</scope><name>set_input_features</name></member>
      <member refid="classmodel__template_1ad1a321ec8ca5e79c79322c83ef70b7c5" prot="public" virt="non-virtual"><scope>model_template</scope><name>set_name</name></member>
      <member refid="classmodel__template_1a977402549135f0f763157b1282b44173" prot="public" virt="non-virtual"><scope>model_template</scope><name>set_output_features</name></member>
      <member refid="classnotification_1a575db6b2e3b67a7d679205600d83b576" prot="public" virt="non-virtual"><scope>model_template</scope><name>set_prefix</name></member>
      <member refid="classnotification_1a58eec7023935cff9332ce21e58fc3f5a" prot="public" virt="non-virtual"><scope>model_template</scope><name>set_suppress_info</name></member>
      <member refid="classnotification_1a9bb77ba73a5f25af292e9eea8a8de970" prot="public" virt="non-virtual"><scope>model_template</scope><name>set_suppress_warning</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>model_template</scope><name>split</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual"><scope>model_template</scope><name>sum</name></member>
      <member refid="classnotification_1a77a99c28092cf053b395805c75dde6da" prot="protected" virt="non-virtual"><scope>model_template</scope><name>suppress_info</name></member>
      <member refid="classnotification_1ab2d4ba20d7bc164eece8982b413eab13" prot="protected" virt="non-virtual"><scope>model_template</scope><name>suppress_warnings</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>model_template</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>model_template</scope><name>to_string</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>model_template</scope><name>tools</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>model_template</scope><name>trim</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>model_template</scope><name>type_name</name></member>
      <member refid="classnotification_1ab758dafbb449e142fb68e11c0470b5c9" prot="public" virt="non-virtual"><scope>model_template</scope><name>Warning</name></member>
      <member refid="classmodel__template_1ab6ce719a1c6262912927d4fc33e8842a" prot="public" virt="virtual"><scope>model_template</scope><name>~model_template</name></member>
      <member refid="classnotification_1a0b7272463b149418caf592e398cae64e" prot="public" virt="non-virtual"><scope>model_template</scope><name>~notification</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>model_template</scope><name>~tools</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
