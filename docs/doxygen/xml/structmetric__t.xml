<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structmetric__t" kind="struct" language="C++" prot="public">
    <compoundname>metric_t</compoundname>
    <includes refid="metric__template_8h" local="no">metric_template.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmetric__t_1a6f3cc3ecd6804dbb719e5aaa54a7bdeb" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int metric_t::kfold</definition>
        <argsstring></argsstring>
        <name>kfold</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="26" column="13" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1a7629a8a0a1be67d25e7053180625258b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int metric_t::epoch</definition>
        <argsstring></argsstring>
        <name>epoch</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="27" column="13" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1ab4fd83081d72812242a3f7583e5dfb08" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int metric_t::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="28" column="13" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="classloader_1_1data_1a46dab2b8dedbccccf6caf85ca0fae742" compoundref="loader_8py" startline="31" endline="49">loader.data.interpret</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structmetric__t_1a1afe88fa0ace3e2c4cbf0f2da0c3c3c5" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend metric_t::metric_template</definition>
        <argsstring></argsstring>
        <name>metric_template</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="51" column="16" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1aa01f83c0765c26b5e04c1cd77bdceed9" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend metric_t::analysis</definition>
        <argsstring></argsstring>
        <name>analysis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="52" column="16" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1a6c7bc800ca5c49d8e526c7762f131b26" prot="private" static="no" mutable="no">
        <type><ref refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03f" kindref="member">mode_enum</ref></type>
        <definition>mode_enum metric_t::train_mode</definition>
        <argsstring></argsstring>
        <name>train_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="55" column="19" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1a334a48d57205a48d0f41f2fda4a5546b" prot="private" static="no" mutable="no">
        <type>std::string *</type>
        <definition>std::string* metric_t::pth</definition>
        <argsstring></argsstring>
        <name>pth</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="56" column="21" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="56" bodyend="-1"/>
        <referencedby refid="classloader_1_1data_1a46dab2b8dedbccccf6caf85ca0fae742" compoundref="loader_8py" startline="31" endline="49">loader.data.interpret</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1a6ffaddaf4c20416ccef7a157dbca8ae9" prot="private" static="no" mutable="no">
        <type><ref refid="classmodel__template" kindref="compound">model_template</ref> *</type>
        <definition>model_template* metric_t::mdlx</definition>
        <argsstring></argsstring>
        <name>mdlx</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="57" column="24" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1a529453c51d1f3205888d7787885aaa7e" prot="private" static="no" mutable="no">
        <type><ref refid="classmetric__template" kindref="compound">metric_template</ref> *</type>
        <definition>metric_template* metric_t::mtx</definition>
        <argsstring></argsstring>
        <name>mtx</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="58" column="25" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1a9d926edb80ee44e3c87eac5fecbb3ed0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t metric_t::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="59" column="16" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1adfa0d5f697d93326d2195010e15b9bc1" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref>, std::vector&lt; std::string &gt; &gt; *</type>
        <definition>std::map&lt;graph_enum, std::vector&lt;std::string&gt; &gt;* metric_t::vars</definition>
        <argsstring></argsstring>
        <name>vars</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="61" column="18" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1aff8ec81a39fbaec76d73d13ad94655e0" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref>, std::vector&lt; <ref refid="structvariable__t" kindref="compound">variable_t</ref> * &gt; &gt; *</type>
        <definition>std::map&lt;graph_enum, std::vector&lt;variable_t*&gt; &gt;* metric_t::handl</definition>
        <argsstring></argsstring>
        <name>handl</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="62" column="18" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1ab41baeddd8c8c86777701b2e8e5e983c" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref>, std::map&lt; std::string, size_t &gt; &gt;</type>
        <definition>std::map&lt;graph_enum, std::map&lt;std::string, size_t&gt; &gt; metric_t::v_maps</definition>
        <argsstring></argsstring>
        <name>v_maps</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="63" column="18" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmetric__t_1a6eefb9b0a2ec64e61aa7d765d4732aa9" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref>, std::map&lt; std::string, bool &gt; &gt;</type>
        <definition>std::map&lt;graph_enum, std::map&lt;std::string, bool&gt; &gt; metric_t::h_maps</definition>
        <argsstring></argsstring>
        <name>h_maps</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="64" column="20" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmetric__t_1aa02aa3edae560591830a8671e72b333d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>metric_t::~metric_t</definition>
        <argsstring>()</argsstring>
        <name>~metric_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="24" column="9" bodyfile="modules/metric/cxx/metric.cxx" bodystart="3" bodyend="13"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="structmetric__t_1a66b64829633703dc3482013691e894eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>g</type>
        <definition>g metric_t::get</definition>
        <argsstring>(graph_enum grx, std::string name)</argsstring>
        <name>get</name>
        <param>
          <type><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9" kindref="member">graph_enum</ref></type>
          <declname>grx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="31" column="11" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="31" bodyend="47"/>
        <references refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e">name</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
      </memberdef>
      <memberdef kind="function" id="structmetric__t_1a6dde161b195d16d2851a6bb4c25b21e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string metric_t::mode</definition>
        <argsstring>()</argsstring>
        <name>mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="48" column="21" bodyfile="modules/metric/cxx/metric.cxx" bodystart="26" bodyend="33"/>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fad07182257bce13d49a5c183864e4a277">evaluation</references>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03fac185ddac8b5a8f5aa23c5b80bc12d214">training</references>
        <references refid="enums_8h_1adfa5b6ae994fc9e6e30dd3330929c03faa617908b172c473cb8e8cda059e55bf0">validation</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structmetric__t_1a53a0c02b91b94a055adae0f357747913" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void metric_t::build</definition>
        <argsstring>()</argsstring>
        <name>build</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/metric/include/templates/metric_template.h" line="54" column="14" bodyfile="modules/metric/cxx/metric.cxx" bodystart="15" bodyend="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="modules/metric/include/templates/metric_template.h" line="22" column="15" bodyfile="modules/metric/include/templates/metric_template.h" bodystart="22" bodyend="65"/>
    <listofallmembers>
      <member refid="structmetric__t_1aa01f83c0765c26b5e04c1cd77bdceed9" prot="private" virt="non-virtual"><scope>metric_t</scope><name>analysis</name></member>
      <member refid="structmetric__t_1a53a0c02b91b94a055adae0f357747913" prot="private" virt="non-virtual"><scope>metric_t</scope><name>build</name></member>
      <member refid="structmetric__t_1ab4fd83081d72812242a3f7583e5dfb08" prot="public" virt="non-virtual"><scope>metric_t</scope><name>device</name></member>
      <member refid="structmetric__t_1a7629a8a0a1be67d25e7053180625258b" prot="public" virt="non-virtual"><scope>metric_t</scope><name>epoch</name></member>
      <member refid="structmetric__t_1a66b64829633703dc3482013691e894eb" prot="public" virt="non-virtual"><scope>metric_t</scope><name>get</name></member>
      <member refid="structmetric__t_1a6eefb9b0a2ec64e61aa7d765d4732aa9" prot="private" virt="non-virtual"><scope>metric_t</scope><name>h_maps</name></member>
      <member refid="structmetric__t_1aff8ec81a39fbaec76d73d13ad94655e0" prot="private" virt="non-virtual"><scope>metric_t</scope><name>handl</name></member>
      <member refid="structmetric__t_1a9d926edb80ee44e3c87eac5fecbb3ed0" prot="private" virt="non-virtual"><scope>metric_t</scope><name>index</name></member>
      <member refid="structmetric__t_1a6f3cc3ecd6804dbb719e5aaa54a7bdeb" prot="public" virt="non-virtual"><scope>metric_t</scope><name>kfold</name></member>
      <member refid="structmetric__t_1a6ffaddaf4c20416ccef7a157dbca8ae9" prot="private" virt="non-virtual"><scope>metric_t</scope><name>mdlx</name></member>
      <member refid="structmetric__t_1a1afe88fa0ace3e2c4cbf0f2da0c3c3c5" prot="private" virt="non-virtual"><scope>metric_t</scope><name>metric_template</name></member>
      <member refid="structmetric__t_1a6dde161b195d16d2851a6bb4c25b21e6" prot="public" virt="non-virtual"><scope>metric_t</scope><name>mode</name></member>
      <member refid="structmetric__t_1a529453c51d1f3205888d7787885aaa7e" prot="private" virt="non-virtual"><scope>metric_t</scope><name>mtx</name></member>
      <member refid="structmetric__t_1a334a48d57205a48d0f41f2fda4a5546b" prot="private" virt="non-virtual"><scope>metric_t</scope><name>pth</name></member>
      <member refid="structmetric__t_1a6c7bc800ca5c49d8e526c7762f131b26" prot="private" virt="non-virtual"><scope>metric_t</scope><name>train_mode</name></member>
      <member refid="structmetric__t_1ab41baeddd8c8c86777701b2e8e5e983c" prot="private" virt="non-virtual"><scope>metric_t</scope><name>v_maps</name></member>
      <member refid="structmetric__t_1adfa0d5f697d93326d2195010e15b9bc1" prot="private" virt="non-virtual"><scope>metric_t</scope><name>vars</name></member>
      <member refid="structmetric__t_1aa02aa3edae560591830a8671e72b333d" prot="public" virt="non-virtual"><scope>metric_t</scope><name>~metric_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
