<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="modules_2particle_2cxx_2physics_8cxx" kind="file" language="C++">
    <compoundname>modules/particle/cxx/physics.cxx</compoundname>
    <includes refid="particle__template_8h" local="no">templates/particle_template.h</includes>
    <incdepgraph>
      <node id="17">
        <label>c10/core/DeviceType.h</label>
      </node>
      <node id="8">
        <label>functional</label>
      </node>
      <node id="15">
        <label>TTreeReader.h</label>
      </node>
      <node id="9">
        <label>structs/element.h</label>
        <link refid="element_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>tools/vector_cast.h</label>
        <link refid="vector__cast_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>TTreeReaderArray.h</label>
      </node>
      <node id="24">
        <label>cstdint</label>
      </node>
      <node id="2">
        <label>templates/particle_template.h</label>
        <link refid="particle__template_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>cmath</label>
      </node>
      <node id="21">
        <label>structs/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="18">
        <label>structs/meta.h</label>
        <link refid="structs_2include_2structs_2meta_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="10">
        <label>TFile.h</label>
      </node>
      <node id="25">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>structs/particles.h</label>
        <link refid="modules_2structs_2include_2structs_2particles_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>tools/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cstdlib</label>
      </node>
      <node id="22">
        <label>torch/torch.h</label>
      </node>
      <node id="13">
        <label>TLeaf.h</label>
      </node>
      <node id="19">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>structs/base.h</label>
        <link refid="modules_2structs_2include_2structs_2base_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>TBranch.h</label>
      </node>
      <node id="7">
        <label>structs/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>TTree.h</label>
      </node>
      <node id="1">
        <label>physics.cxx</label>
        <link refid="modules_2particle_2cxx_2physics_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="particle__template_8h" kindref="compound">templates/particle_template.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="classparticle__template_1a575d99bd23ac34125328e4d23518ff52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classparticle__template_1a575d99bd23ac34125328e4d23518ff52" kindref="member">particle_template::DeltaR</ref>(<ref refid="classparticle__template" kindref="compound">particle_template</ref>*<sp/>part){</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref><sp/>=<sp/>std::fabs(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classparticle__template_1abfac6830f134139d5d052bc5241d3ffc" kindref="member">phi</ref><sp/>-<sp/>part<sp/>-&gt;<sp/><ref refid="classparticle__template_1abfac6830f134139d5d052bc5241d3ffc" kindref="member">phi</ref>);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref><sp/>=<sp/>std::fmod(<ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref>,<sp/>2*M_PI);<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref><sp/>=<sp/>M_PI<sp/>-<sp/>std::fabs(<ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref><sp/>-<sp/>M_PI);<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref><sp/>=<sp/>std::pow(<ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref><sp/>+=<sp/>std::pow(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classparticle__template_1a6ccf90765599baffd591653a70d87d7c" kindref="member">eta</ref><sp/>-<sp/>part<sp/>-&gt;<sp/><ref refid="classparticle__template_1a6ccf90765599baffd591653a70d87d7c" kindref="member">eta</ref>,<sp/>2);<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(<ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">sum</ref>,<sp/>0.5);<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classparticle__template_1ab0927b6be583340a0b8c4d12a5ff3ebf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparticle__template_1ab0927b6be583340a0b8c4d12a5ff3ebf" kindref="member">particle_template::get_e</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>v,<sp/><ref refid="classparticle__template" kindref="compound">particle_template</ref>*<sp/>prt)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparticle__t" kindref="compound">particle_t</ref>*<sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>=<sp/>&amp;prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1a90d0427adec2bbdc76f61a0fe725c6e0" kindref="member">data</ref>;<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref><sp/>&gt;=<sp/>0){*v<sp/>=<sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref><sp/>+=<sp/>std::pow(prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1aaea285da722e05111a27bc6496fc3fc5" kindref="member">px</ref>,<sp/>2);<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref><sp/>+=<sp/>std::pow(prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1a1f9bfad685427e7c6ef5d16163eb6ea4" kindref="member">py</ref>,<sp/>2);<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref><sp/>+=<sp/>std::pow(prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1a8d8e132523d5d11fab02bd3814c3c682" kindref="member">pz</ref>,<sp/>2);<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref><sp/>&gt;=<sp/>0){<ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref><sp/>+=<sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref>;}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref><sp/><sp/>=<sp/>std::pow(<ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref>,<sp/>0.5);<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>*v<sp/>=<sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref>;<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classparticle__template_1afd797e25024bf1203b7524dc6aae703f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparticle__template_1afd797e25024bf1203b7524dc6aae703f" kindref="member">particle_template::set_e</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>val,<sp/><ref refid="classparticle__template" kindref="compound">particle_template</ref>*<sp/>prt){<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1a90d0427adec2bbdc76f61a0fe725c6e0" kindref="member">data</ref>.<ref refid="structparticle__t_1af13afc7a9792be844fb4cd1997464891" kindref="member">e</ref><sp/>=<sp/>*val;<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classparticle__template_1a0900578e2e9c96bddada2963b4a1b141" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparticle__template_1a0900578e2e9c96bddada2963b4a1b141" kindref="member">particle_template::set_mass</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>val,<sp/><ref refid="classparticle__template" kindref="compound">particle_template</ref>*<sp/>prt){<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1a90d0427adec2bbdc76f61a0fe725c6e0" kindref="member">data</ref>.<ref refid="structparticle__t_1adc16299c88cb0a17d6dc7bc4eb3e0f19" kindref="member">mass</ref><sp/>=<sp/>*val;<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classparticle__template_1af5837057bd00b72689117beb704839bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classparticle__template_1af5837057bd00b72689117beb704839bb" kindref="member">particle_template::get_mass</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>val,<sp/><ref refid="classparticle__template" kindref="compound">particle_template</ref>*<sp/>prt){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparticle__t" kindref="compound">particle_t</ref>*<sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>=<sp/>&amp;prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1a90d0427adec2bbdc76f61a0fe725c6e0" kindref="member">data</ref>;<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref><sp/>&gt;<sp/>-1){<sp/>*val<sp/>=<sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref><sp/>-=<sp/>std::pow(prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1aaea285da722e05111a27bc6496fc3fc5" kindref="member">px</ref>,<sp/>2);<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref><sp/>-=<sp/>std::pow(prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1a1f9bfad685427e7c6ef5d16163eb6ea4" kindref="member">py</ref>,<sp/>2);<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref><sp/>-=<sp/>std::pow(prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1a8d8e132523d5d11fab02bd3814c3c682" kindref="member">pz</ref>,<sp/>2);<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref><sp/>+=<sp/>std::pow(prt<sp/>-&gt;<sp/><ref refid="classparticle__template_1a662321de0323372654542f6cd60464b7" kindref="member">e</ref><sp/>,<sp/>2);<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref><sp/>=<sp/>(<ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref><sp/>&gt;=<sp/>0)<sp/>?<sp/>std::pow(<ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref>,<sp/>0.5)<sp/>:<sp/>-1;<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>*val<sp/>=<sp/><ref refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" kindref="member">p</ref><sp/>-&gt;<sp/><ref refid="classparticle__template_1a566197d07c6aba326fdad5f781ede40c" kindref="member">mass</ref>;<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="modules/particle/cxx/physics.cxx"/>
  </compounddef>
</doxygen>
