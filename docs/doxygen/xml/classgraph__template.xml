<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgraph__template" kind="class" language="C++" prot="public">
    <compoundname>graph_template</compoundname>
    <basecompoundref refid="classtools" prot="public" virt="non-virtual">tools</basecompoundref>
    <derivedcompoundref refid="classgraph__children" prot="public" virt="non-virtual">graph_children</derivedcompoundref>
    <derivedcompoundref refid="classgraph__detector" prot="public" virt="non-virtual">graph_detector</derivedcompoundref>
    <derivedcompoundref refid="classgraph__jets" prot="public" virt="non-virtual">graph_jets</derivedcompoundref>
    <derivedcompoundref refid="classgraph__jets__detector__lep" prot="public" virt="non-virtual">graph_jets_detector_lep</derivedcompoundref>
    <derivedcompoundref refid="classgraph__jets__nonu" prot="public" virt="non-virtual">graph_jets_nonu</derivedcompoundref>
    <derivedcompoundref refid="classgraph__tops" prot="public" virt="non-virtual">graph_tops</derivedcompoundref>
    <derivedcompoundref refid="classgraph__truthjets" prot="public" virt="non-virtual">graph_truthjets</derivedcompoundref>
    <derivedcompoundref refid="classgraph__truthjets__nonu" prot="public" virt="non-virtual">graph_truthjets_nonu</derivedcompoundref>
    <includes refid="graph__template_8h" local="no">graph_template.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraph__template_1a4e4936c3db17a37ef5b351b4ee614fc7" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; long, <ref refid="classgraph__template" kindref="compound">graph_template</ref> &gt;</type>
        <definition>cproperty&lt;long , graph_template&gt; graph_template::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="193" column="19" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="193" bodyend="-1"/>
        <referencedby refid="classgraph__template_1ad496a2818827b70a95f491889b71663a" compoundref="graph__template_8cxx" startline="3" endline="23">graph_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1af57627b35bdb1004238679138f3e4fb2" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; double, <ref refid="classgraph__template" kindref="compound">graph_template</ref> &gt;</type>
        <definition>cproperty&lt;double, graph_template&gt; graph_template::weight</definition>
        <argsstring></argsstring>
        <name>weight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="194" column="19" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="194" bodyend="-1"/>
        <referencedby refid="classgraph__template_1ad496a2818827b70a95f491889b71663a" compoundref="graph__template_8cxx" startline="3" endline="23">graph_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a5f4936125af525795b14a0858e100826" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; bool, <ref refid="classgraph__template" kindref="compound">graph_template</ref> &gt;</type>
        <definition>cproperty&lt;bool , graph_template&gt; graph_template::preselection</definition>
        <argsstring></argsstring>
        <name>preselection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="195" column="19" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="195" bodyend="-1"/>
        <referencedby refid="classgraph__template_1ad496a2818827b70a95f491889b71663a" compoundref="graph__template_8cxx" startline="3" endline="23">graph_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a0b788130a844a3c492b4066af45692ed" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::string, <ref refid="classgraph__template" kindref="compound">graph_template</ref> &gt;</type>
        <definition>cproperty&lt;std::string, graph_template&gt; graph_template::hash</definition>
        <argsstring></argsstring>
        <name>hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="197" column="19" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="197" bodyend="-1"/>
        <referencedby refid="classgraph__template_1a18725eb3da8ab2866b415fed685465d1" compoundref="graph__template_8cxx" startline="47" endline="56">define_particle_nodes</referencedby>
        <referencedby refid="classgraph__template_1ad496a2818827b70a95f491889b71663a" compoundref="graph__template_8cxx" startline="3" endline="23">graph_template</referencedby>
        <referencedby refid="classgraph__template_1ab40b594f7eb68cd9a5c8a2fc688bdd53" compoundref="graph__template_8cxx" startline="30" endline="32">operator==</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1ab63ea3b522ea06888cd300dd503d5ed9" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::string, <ref refid="classgraph__template" kindref="compound">graph_template</ref> &gt;</type>
        <definition>cproperty&lt;std::string, graph_template&gt; graph_template::tree</definition>
        <argsstring></argsstring>
        <name>tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="198" column="19" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="198" bodyend="-1"/>
        <referencedby refid="classgraph__template_1ad496a2818827b70a95f491889b71663a" compoundref="graph__template_8cxx" startline="3" endline="23">graph_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a11480635ca6d3d6901b92eeb6a6d1b92" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::string, <ref refid="classgraph__template" kindref="compound">graph_template</ref> &gt;</type>
        <definition>cproperty&lt;std::string, graph_template&gt; graph_template::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="199" column="19" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="199" bodyend="-1"/>
        <referencedby refid="classgraph__template_1a1a49a06e30768be2815531f478dbb035" compoundref="graph__template_8h" startline="219" endline="225">add_graph_data_feature</referencedby>
        <referencedby refid="classgraph__template_1aa76fa2728ad46132846ae09e9db93386" compoundref="graph__template_8h" startline="209" endline="215">add_graph_truth_feature</referencedby>
        <referencedby refid="classgraph__template_1aa9d58009001be66e52c75e95357860ac" compoundref="graph__template_8h" startline="242" endline="253">add_node_data_feature</referencedby>
        <referencedby refid="classgraph__template_1ad9f0102011d63e5571bb52e25c5d440e" compoundref="graph__template_8h" startline="228" endline="238">add_node_truth_feature</referencedby>
        <referencedby refid="classgraph__children_1ad608393e1b322d3f78be29999f9e8a51" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="39" endline="39">graph_children::graph_children</referencedby>
        <referencedby refid="classgraph__detector_1a4d0f30bee619f6bb3e1448dc27d8f82e" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="332" endline="332">graph_detector::graph_detector</referencedby>
        <referencedby refid="classgraph__jets_1aa2b347887f3d9ca2e2973d277f02db02" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="178" endline="178">graph_jets::graph_jets</referencedby>
        <referencedby refid="classgraph__jets__detector__lep_1a4b2ffb36f8f3386c33b6c086e722f2a6" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="283" endline="283">graph_jets_detector_lep::graph_jets_detector_lep</referencedby>
        <referencedby refid="classgraph__jets__nonu_1aea99d314f68f8df43877b7ec587e879e" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="234" endline="234">graph_jets_nonu::graph_jets_nonu</referencedby>
        <referencedby refid="classgraph__template_1ad496a2818827b70a95f491889b71663a" compoundref="graph__template_8cxx" startline="3" endline="23">graph_template</referencedby>
        <referencedby refid="classgraph__tops_1a2578c3f525ab612936815c55f3ff1c77" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="7" endline="7">graph_tops::graph_tops</referencedby>
        <referencedby refid="classgraph__truthjets_1adbbd8ee48a363e096ae5298e56876e8e" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="80" endline="80">graph_truthjets::graph_truthjets</referencedby>
        <referencedby refid="classgraph__truthjets__nonu_1ad9c31944b87029fabe57b3223663c756" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="129" endline="129">graph_truthjets_nonu::graph_truthjets_nonu</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a8f934be76e9802956c4208153825b835" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int graph_template::threadIdx</definition>
        <argsstring></argsstring>
        <name>threadIdx</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="201" column="13" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1ac1482a79b63e7d990f72778ce2fae6e0" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string graph_template::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="202" column="21" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1ad1e698939baa2f62972bd7090758000e" prot="public" static="no" mutable="no">
        <type><ref refid="classmeta" kindref="compound">meta</ref> *</type>
        <definition>meta* graph_template::meta_data</definition>
        <argsstring></argsstring>
        <name>meta_data</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="203" column="14" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraph__template_1a3a30d788a2133f758d28950adcb44c05" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend graph_template::container</definition>
        <argsstring></argsstring>
        <name>container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="307" column="16" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1ae3d4b702c86a22aa0f5f22763cafea01" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend graph_template::analysis</definition>
        <argsstring></argsstring>
        <name>analysis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="308" column="16" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a47741209e482d0d451488cfe9e1a859b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int graph_template::num_nodes</definition>
        <argsstring></argsstring>
        <name>num_nodes</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="383" column="13" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a8fba0d9a21531f3f98fcd8abc45ba0c5" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, int &gt;</type>
        <definition>std::map&lt;std::string, int&gt; graph_template::nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="384" column="18" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a7e5d05029895f0c1a2f0198c68d4533b" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, <ref refid="classparticle__template" kindref="compound">particle_template</ref> * &gt;</type>
        <definition>std::map&lt;int, particle_template*&gt; graph_template::node_particles</definition>
        <argsstring></argsstring>
        <name>node_particles</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="385" column="18" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1accdc465db499ba018cf1baf3adedefa4" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, torch::Tensor &gt;</type>
        <definition>std::map&lt;std::string, torch::Tensor&gt; graph_template::graph_fx</definition>
        <argsstring></argsstring>
        <name>graph_fx</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="386" column="18" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a33190ca3ec011eb8c8f84bfe1e97ca9b" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, torch::Tensor &gt;</type>
        <definition>std::map&lt;std::string, torch::Tensor&gt; graph_template::node_fx</definition>
        <argsstring></argsstring>
        <name>node_fx</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="387" column="18" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a0c13baea90fdd407ee7ba1756cd9f403" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, torch::Tensor &gt;</type>
        <definition>std::map&lt;std::string, torch::Tensor&gt; graph_template::edge_fx</definition>
        <argsstring></argsstring>
        <name>edge_fx</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="388" column="18" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a2e0d4d232ecb0f77e18f73a29188bc4d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;int&gt; &gt; graph_template::_topology</definition>
        <argsstring></argsstring>
        <name>_topology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="390" column="21" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a0a8e352dc6dd57a1a78c0506b7101960" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; graph_template::_topological_index</definition>
        <argsstring></argsstring>
        <name>_topological_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="391" column="21" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a3ff9e6a22dc66fec72dbe81ad5e0270b" prot="private" static="no" mutable="no">
        <type>torch::Tensor</type>
        <definition>torch::Tensor graph_template::m_topology</definition>
        <argsstring></argsstring>
        <name>m_topology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="392" column="23" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a66c14384597c07176abf262c8dfadc2b" prot="private" static="no" mutable="no">
        <type>torch::TensorOptions *</type>
        <definition>torch::TensorOptions* graph_template::op</definition>
        <argsstring></argsstring>
        <name>op</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="394" column="30" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1a1c1c2276d720ccb3d6af20a72d001bd4" prot="private" static="no" mutable="no">
        <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
        <definition>event_template* graph_template::m_event</definition>
        <argsstring></argsstring>
        <name>m_event</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="395" column="24" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1ad3a795a02e1ba77e30aafe170670ea13" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graph_template::m_preselection</definition>
        <argsstring></argsstring>
        <name>m_preselection</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="397" column="14" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraph__template_1ac6a986b3095026298a035e57ca08433e" prot="private" static="no" mutable="no">
        <type><ref refid="structevent__t" kindref="compound">event_t</ref></type>
        <definition>event_t graph_template::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="400" column="17" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="400" bodyend="-1"/>
        <referencedby refid="classsimply__plot_1_1_data_x_1aaacf4239206d59867e979e047388effe" compoundref="simply__plot_8py" startline="531" endline="532">simply_plot.DataX.num_events</referencedby>
        <referencedby refid="classsimply__plot_1_1_data_x_1a41f0e58c621248ecb74fbe1deb30cc7e" compoundref="simply__plot_8py" startline="538" endline="544">simply_plot.DataX.hist</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraph__template_1ad496a2818827b70a95f491889b71663a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graph_template::graph_template</definition>
        <argsstring>()</argsstring>
        <name>graph_template</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="181" column="9" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="3" bodyend="23"/>
        <references refid="classgraph__template_1a0b788130a844a3c492b4066af45692ed" compoundref="graph__template_8h" startline="197">hash</references>
        <references refid="classgraph__template_1a4e4936c3db17a37ef5b351b4ee614fc7" compoundref="graph__template_8h" startline="193">index</references>
        <references refid="classgraph__template_1a11480635ca6d3d6901b92eeb6a6d1b92" compoundref="graph__template_8h" startline="199">name</references>
        <references refid="classgraph__template_1a5f4936125af525795b14a0858e100826" compoundref="graph__template_8h" startline="195">preselection</references>
        <references refid="classcproperty_1a31b26b5ffb20bbf8d8ee38e0755a9819" compoundref="property_8h" startline="22" endline="25">cproperty&lt; T, G &gt;::set_getter</references>
        <references refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" compoundref="property_8h" startline="27" endline="27">cproperty&lt; T, G &gt;::set_object</references>
        <references refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" compoundref="property_8h" startline="17" endline="20">cproperty&lt; T, G &gt;::set_setter</references>
        <references refid="classgraph__template_1ab63ea3b522ea06888cd300dd503d5ed9" compoundref="graph__template_8h" startline="198">tree</references>
        <references refid="classgraph__template_1af57627b35bdb1004238679138f3e4fb2" compoundref="graph__template_8h" startline="194">weight</references>
        <referencedby refid="classgraph__template_1a010ead65c4f69b55b480f425e4f676e6" compoundref="graph__template_8cxx" startline="34" endline="36">clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a6ffa9e79ebf30fa1accdcf64b302c4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>graph_template::~graph_template</definition>
        <argsstring>()</argsstring>
        <name>~graph_template</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="182" column="17" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a010ead65c4f69b55b480f425e4f676e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
        <definition>graph_template * graph_template::clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <reimplementedby refid="classgraph__jets_1a7309142b56341ce8cc03c1927e220e20">clone</reimplementedby>
        <reimplementedby refid="classgraph__jets_1a7309142b56341ce8cc03c1927e220e20">clone</reimplementedby>
        <reimplementedby refid="classgraph__tops_1a0613d0d405870346b88a6aa39f2a6f39">clone</reimplementedby>
        <reimplementedby refid="classgraph__children_1a5ef722d407cccbd00a257b1cf8403004">clone</reimplementedby>
        <reimplementedby refid="classgraph__jets__nonu_1a607570a6ce7f4a06d6398226082ed34a">clone</reimplementedby>
        <reimplementedby refid="classgraph__jets__nonu_1a607570a6ce7f4a06d6398226082ed34a">clone</reimplementedby>
        <reimplementedby refid="classgraph__truthjets_1a4935eb779913e57d0eeccac43f14c2e8">clone</reimplementedby>
        <reimplementedby refid="classgraph__jets__detector__lep_1a2d4b4294655459bc6164a5d2a69e66fe">clone</reimplementedby>
        <reimplementedby refid="classgraph__jets__detector__lep_1a2d4b4294655459bc6164a5d2a69e66fe">clone</reimplementedby>
        <reimplementedby refid="classgraph__truthjets__nonu_1a42dc4df32ba6e65c9164d10df6729d5f">clone</reimplementedby>
        <reimplementedby refid="classgraph__detector_1a45c0e20a90ba18692afd4efe91f981a9">clone</reimplementedby>
        <reimplementedby refid="classgraph__detector_1a45c0e20a90ba18692afd4efe91f981a9">clone</reimplementedby>
        <reimplementedby refid="classgraph__jets_1a554446a4518fb9711a1d9375048712ed">clone</reimplementedby>
        <reimplementedby refid="classgraph__jets__nonu_1a381b4a04349093754c5ad06a1b575f21">clone</reimplementedby>
        <reimplementedby refid="classgraph__jets__detector__lep_1a25627b5200e435e6e973b26a641f42bb">clone</reimplementedby>
        <reimplementedby refid="classgraph__detector_1afe397b0875e9e800dc50f255fc5334c3">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="183" column="32" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="34" bodyend="36"/>
        <references refid="classgraph__template_1ad496a2818827b70a95f491889b71663a" compoundref="graph__template_8cxx" startline="3" endline="23">graph_template</references>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1af6db04c1f266cc1d7da481e52784a30d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graph_template::CompileEvent</definition>
        <argsstring>()</argsstring>
        <name>CompileEvent</name>
        <reimplementedby refid="classgraph__jets_1a568114127973b28c968493e79ca67cd7">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__jets_1a568114127973b28c968493e79ca67cd7">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__tops_1aeeb26c4ab2ef88d0b3799205efc90efc">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__children_1af069fe630b6bbf6ffacca8243761e829">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__jets__nonu_1a3d76d9b5885af9d1ef9c2a150acc1300">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__jets__nonu_1a3d76d9b5885af9d1ef9c2a150acc1300">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__truthjets_1ad64c5a15f0406d8a6c9705d50934b81f">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__jets__detector__lep_1a8da8c93bcdece302cb06b34e6b9db801">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__jets__detector__lep_1a8da8c93bcdece302cb06b34e6b9db801">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__truthjets__nonu_1add03a6d564186c150f7c907737b77eeb">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__detector_1a9524462481e7c9e42df5cf73f999737e">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__detector_1a9524462481e7c9e42df5cf73f999737e">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__jets_1a568114127973b28c968493e79ca67cd7">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__jets__nonu_1a3d76d9b5885af9d1ef9c2a150acc1300">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__jets__detector__lep_1a8da8c93bcdece302cb06b34e6b9db801">CompileEvent</reimplementedby>
        <reimplementedby refid="classgraph__detector_1a9524462481e7c9e42df5cf73f999737e">CompileEvent</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="184" column="22" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1afb21d1d87f82570a516f9e7b678bb115" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool graph_template::PreSelection</definition>
        <argsstring>()</argsstring>
        <name>PreSelection</name>
        <reimplementedby refid="classgraph__jets_1ab7cab70d54cd9f433bd70290ad691cdd">PreSelection</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="185" column="22" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a18725eb3da8ab2866b415fed685465d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::define_particle_nodes</definition>
        <argsstring>(std::vector&lt; particle_template * &gt; *prt)</argsstring>
        <name>define_particle_nodes</name>
        <param>
          <type>std::vector&lt; <ref refid="classparticle__template" kindref="compound">particle_template</ref> * &gt; *</type>
          <declname>prt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="187" column="14" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="47" bodyend="56"/>
        <references refid="classgraph__template_1a0b788130a844a3c492b4066af45692ed" compoundref="graph__template_8h" startline="197">hash</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classgraph__tops_1aeeb26c4ab2ef88d0b3799205efc90efc" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="13" endline="36">graph_tops::CompileEvent</referencedby>
        <referencedby refid="classgraph__children_1af069fe630b6bbf6ffacca8243761e829" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="43" endline="77">graph_children::CompileEvent</referencedby>
        <referencedby refid="classgraph__truthjets_1ad64c5a15f0406d8a6c9705d50934b81f" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="84" endline="126">graph_truthjets::CompileEvent</referencedby>
        <referencedby refid="classgraph__truthjets__nonu_1add03a6d564186c150f7c907737b77eeb" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="133" endline="174">graph_truthjets_nonu::CompileEvent</referencedby>
        <referencedby refid="classgraph__jets_1a568114127973b28c968493e79ca67cd7" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="191" endline="231">graph_jets::CompileEvent</referencedby>
        <referencedby refid="classgraph__jets__nonu_1a3d76d9b5885af9d1ef9c2a150acc1300" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="238" endline="279">graph_jets_nonu::CompileEvent</referencedby>
        <referencedby refid="classgraph__jets__detector__lep_1a8da8c93bcdece302cb06b34e6b9db801" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="287" endline="329">graph_jets_detector_lep::CompileEvent</referencedby>
        <referencedby refid="classgraph__detector_1a9524462481e7c9e42df5cf73f999737e" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="336" endline="374">graph_detector::CompileEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1af5d505282f6126e2fe5d2eab98507d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::define_topology</definition>
        <argsstring>(std::function&lt; bool(particle_template *, particle_template *)&gt; fx)</argsstring>
        <name>define_topology</name>
        <param>
          <type>std::function&lt; bool(<ref refid="classparticle__template" kindref="compound">particle_template</ref> *, <ref refid="classparticle__template" kindref="compound">particle_template</ref> *)&gt;</type>
          <declname>fx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="188" column="14" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="58" bodyend="85"/>
        <references refid="namespacemain_1a1eba0669b3d0fd1cef430ae99c82cc59" compoundref="benchmarks_2main_8py" startline="21">main.fx</references>
        <references refid="_3event-name_4_8cxx_1ad909c3cfb5bcea8ede732f1c3da64879" compoundref="_3event-name_4_8cxx" startline="7">this</references>
        <referencedby refid="classgraph__template_1aea3a1bee0125428e0c00dc0816e63d64" compoundref="graph__template_8h" startline="279" endline="298">add_edge_data_feature</referencedby>
        <referencedby refid="classgraph__template_1aad0f9d28368afe4e7898dcc409ed10a1" compoundref="graph__template_8h" startline="256" endline="275">add_edge_truth_feature</referencedby>
        <referencedby refid="classgraph__children_1af069fe630b6bbf6ffacca8243761e829" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="43" endline="77">graph_children::CompileEvent</referencedby>
        <referencedby refid="classgraph__truthjets_1ad64c5a15f0406d8a6c9705d50934b81f" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="84" endline="126">graph_truthjets::CompileEvent</referencedby>
        <referencedby refid="classgraph__truthjets__nonu_1add03a6d564186c150f7c907737b77eeb" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="133" endline="174">graph_truthjets_nonu::CompileEvent</referencedby>
        <referencedby refid="classgraph__jets_1a568114127973b28c968493e79ca67cd7" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="191" endline="231">graph_jets::CompileEvent</referencedby>
        <referencedby refid="classgraph__jets__nonu_1a3d76d9b5885af9d1ef9c2a150acc1300" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="238" endline="279">graph_jets_nonu::CompileEvent</referencedby>
        <referencedby refid="classgraph__jets__detector__lep_1a8da8c93bcdece302cb06b34e6b9db801" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="287" endline="329">graph_jets_detector_lep::CompileEvent</referencedby>
        <referencedby refid="classgraph__detector_1a9524462481e7c9e42df5cf73f999737e" compoundref="bsm__4tops_2cxx_2graphs_8cxx" startline="336" endline="374">graph_detector::CompileEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1acfb899ce640661e58f6246d7d9ea4491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::flush_particles</definition>
        <argsstring>()</argsstring>
        <name>flush_particles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="190" column="14" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1ab40b594f7eb68cd9a5c8a2fc688bdd53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graph_template::operator==</definition>
        <argsstring>(graph_template &amp;p)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="191" column="14" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="30" bodyend="32"/>
        <references refid="classgraph__template_1a0b788130a844a3c492b4066af45692ed" compoundref="graph__template_8h" startline="197">hash</references>
        <references refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" compoundref="rnn__model_8py" startline="35">rnn_model.p</references>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a958b4a2235631aca03835f856fecc949" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
        </templateparamlist>
        <type>G *</type>
        <definition>G* graph_template::get_event</definition>
        <argsstring>()</argsstring>
        <name>get_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="206" column="11" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aa76fa2728ad46132846ae09e9db93386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
          <param>
            <type>typename O</type>
          </param>
          <param>
            <type>typename X</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graph_template::add_graph_truth_feature</definition>
        <argsstring>(O *ev, X fx, std::string name)</argsstring>
        <name>add_graph_truth_feature</name>
        <param>
          <type>O *</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>X</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="209" column="14" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="209" bodyend="215"/>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="namespacemain_1a1eba0669b3d0fd1cef430ae99c82cc59" compoundref="benchmarks_2main_8py" startline="21">main.fx</references>
        <references refid="classgraph__template_1a11480635ca6d3d6901b92eeb6a6d1b92" compoundref="graph__template_8h" startline="199">name</references>
        <references refid="classcproperty_1a31b26b5ffb20bbf8d8ee38e0755a9819" compoundref="property_8h" startline="22" endline="25">cproperty&lt; T, G &gt;::set_getter</references>
        <references refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" compoundref="property_8h" startline="27" endline="27">cproperty&lt; T, G &gt;::set_object</references>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a1a49a06e30768be2815531f478dbb035" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
          <param>
            <type>typename O</type>
          </param>
          <param>
            <type>typename X</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graph_template::add_graph_data_feature</definition>
        <argsstring>(O *ev, X fx, std::string name)</argsstring>
        <name>add_graph_data_feature</name>
        <param>
          <type>O *</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>X</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="219" column="14" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="219" bodyend="225"/>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="namespacemain_1a1eba0669b3d0fd1cef430ae99c82cc59" compoundref="benchmarks_2main_8py" startline="21">main.fx</references>
        <references refid="classgraph__template_1a11480635ca6d3d6901b92eeb6a6d1b92" compoundref="graph__template_8h" startline="199">name</references>
        <references refid="classcproperty_1a31b26b5ffb20bbf8d8ee38e0755a9819" compoundref="property_8h" startline="22" endline="25">cproperty&lt; T, G &gt;::set_getter</references>
        <references refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" compoundref="property_8h" startline="27" endline="27">cproperty&lt; T, G &gt;::set_object</references>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1ad9f0102011d63e5571bb52e25c5d440e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
          <param>
            <type>typename O</type>
          </param>
          <param>
            <type>typename X</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graph_template::add_node_truth_feature</definition>
        <argsstring>(X fx, std::string name)</argsstring>
        <name>add_node_truth_feature</name>
        <param>
          <type>X</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="228" column="14" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="228" bodyend="238"/>
        <references refid="namespacemain_1a1eba0669b3d0fd1cef430ae99c82cc59" compoundref="benchmarks_2main_8py" startline="21">main.fx</references>
        <references refid="classgraph__template_1a11480635ca6d3d6901b92eeb6a6d1b92" compoundref="graph__template_8h" startline="199">name</references>
        <references refid="classcproperty_1a31b26b5ffb20bbf8d8ee38e0755a9819" compoundref="property_8h" startline="22" endline="25">cproperty&lt; T, G &gt;::set_getter</references>
        <references refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" compoundref="property_8h" startline="27" endline="27">cproperty&lt; T, G &gt;::set_object</references>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aa9d58009001be66e52c75e95357860ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
          <param>
            <type>typename O</type>
          </param>
          <param>
            <type>typename X</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graph_template::add_node_data_feature</definition>
        <argsstring>(X fx, std::string name)</argsstring>
        <name>add_node_data_feature</name>
        <param>
          <type>X</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="242" column="14" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="242" bodyend="253"/>
        <references refid="namespacemain_1a1eba0669b3d0fd1cef430ae99c82cc59" compoundref="benchmarks_2main_8py" startline="21">main.fx</references>
        <references refid="classgraph__template_1a11480635ca6d3d6901b92eeb6a6d1b92" compoundref="graph__template_8h" startline="199">name</references>
        <references refid="classcproperty_1a31b26b5ffb20bbf8d8ee38e0755a9819" compoundref="property_8h" startline="22" endline="25">cproperty&lt; T, G &gt;::set_getter</references>
        <references refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" compoundref="property_8h" startline="27" endline="27">cproperty&lt; T, G &gt;::set_object</references>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aad0f9d28368afe4e7898dcc409ed10a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
          <param>
            <type>typename O</type>
          </param>
          <param>
            <type>typename X</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graph_template::add_edge_truth_feature</definition>
        <argsstring>(X fx, std::string name)</argsstring>
        <name>add_edge_truth_feature</name>
        <param>
          <type>X</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="256" column="14" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="256" bodyend="275"/>
        <references refid="classgraph__template_1af5d505282f6126e2fe5d2eab98507d40" compoundref="graph__template_8cxx" startline="58" endline="85">define_topology</references>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aea3a1bee0125428e0c00dc0816e63d64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
          <param>
            <type>typename O</type>
          </param>
          <param>
            <type>typename X</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graph_template::add_edge_data_feature</definition>
        <argsstring>(X fx, std::string name)</argsstring>
        <name>add_edge_data_feature</name>
        <param>
          <type>X</type>
          <declname>fx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="279" column="14" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="279" bodyend="298"/>
        <references refid="classgraph__template_1af5d505282f6126e2fe5d2eab98507d40" compoundref="graph__template_8cxx" startline="58" endline="85">define_topology</references>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aa2bef51e5e00b49425c8ac93bcd1f315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graph_template::double_neutrino</definition>
        <argsstring>(double mass_top=172.62 *1000, double mass_wboson=80.385 *1000, double top_perc=0.85, double w_perc=0.95, double distance=1e-8, int steps=10)</argsstring>
        <name>double_neutrino</name>
        <param>
          <type>double</type>
          <declname>mass_top</declname>
          <defval>172.62 *1000</defval>
        </param>
        <param>
          <type>double</type>
          <declname>mass_wboson</declname>
          <defval>80.385 *1000</defval>
        </param>
        <param>
          <type>double</type>
          <declname>top_perc</declname>
          <defval>0.85</defval>
        </param>
        <param>
          <type>double</type>
          <declname>w_perc</declname>
          <defval>0.95</defval>
        </param>
        <param>
          <type>double</type>
          <declname>distance</declname>
          <defval>1e-8</defval>
        </param>
        <param>
          <type>int</type>
          <declname>steps</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="301" column="14" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="87" bodyend="146"/>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ae0da17ca8558064e75c801fadc3537a4">is_b</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28acc9357767a613ec2e912943553e95778">is_lep</references>
        <references refid="classtools_1a7b784121d8b368a64995feddc7083469" compoundref="tools_8h" startline="183" endline="187">tools::sum</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgraph__template_1a185c7464be35c70cf3a51df81b744713" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(bool, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>bool</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="311" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a261b57280815f46b913fefcad05d743b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(std::vector&lt; bool &gt;, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>std::vector&lt; bool &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="312" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1acb2f9e14654436ed54a2583382390320" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(float, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>float</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="314" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a0c57861e1d39227c211369347587a5f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(std::vector&lt; float &gt;, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>std::vector&lt; float &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="315" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1ad78e2f43fe92dd7f11d71e2d4c30b8cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(double, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>double</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="317" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a7e0db1be68fba4e2c635d6341efb4499" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(std::vector&lt; double &gt;, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="318" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a94e7be22cf60afd051826b18b8c4865c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(long, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>long</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="320" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a12f7f227b066dda3826d15622b43e05e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(std::vector&lt; long &gt;, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>std::vector&lt; long &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="321" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a7056b62915da3d3ebf69e7502b5bf346" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(int, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>int</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="323" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a66bae6d31917f8287e16c079295a6aa0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(std::vector&lt; int &gt;, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="324" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a0c2ffc0eb4627bc8eda584e3aee47f38" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_graph_feature</definition>
        <argsstring>(std::vector&lt; std::vector&lt; int &gt;&gt;, std::string)</argsstring>
        <name>add_graph_feature</name>
        <param>
          <type>std::vector&lt; std::vector&lt; int &gt;&gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="325" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a0d4c62956b90f125a108f095cf5e84fa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(bool, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>bool</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="328" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aa5f2ca5fcc5098af7532e70a83fd0e61" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(std::vector&lt; bool &gt;, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>std::vector&lt; bool &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="329" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aa09d5a8b0b5adace65c75e3caf3b84d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(float, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>float</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="331" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a75e6c18e8583134015f0bec176574f1e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(std::vector&lt; float &gt;, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>std::vector&lt; float &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="332" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1ae0528dbe133ea7e7a9fa7c62f7939242" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(double, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>double</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="334" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a8e109767a2c1671ea0993d1b60d4a64b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(std::vector&lt; double &gt;, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="335" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a365582b5a35e8ae0d3013aa22cd6c395" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(long, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>long</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="337" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aae092e15a072c593c1e55287a60760da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(std::vector&lt; long &gt;, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>std::vector&lt; long &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="338" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a908d80d2c46571836985c7b637c56c63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(int, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>int</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="340" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aaf9d32429295d1072b3e43da3cf13308" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(std::vector&lt; int &gt;, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="341" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1afec4054a183bf9feedf2670a90d4bd1a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_node_feature</definition>
        <argsstring>(std::vector&lt; std::vector&lt; int &gt;&gt;, std::string)</argsstring>
        <name>add_node_feature</name>
        <param>
          <type>std::vector&lt; std::vector&lt; int &gt;&gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="342" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aec3c46947c2d629cb02539d19dbe9772" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(bool, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>bool</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="346" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aabf37b072ee481e32066561f03ea81fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(std::vector&lt; bool &gt;, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>std::vector&lt; bool &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="347" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a76fb34b4ef1813a39edcb83a2d79f1b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(float, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>float</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="349" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a99073ac4179279c90b58e16ef6645976" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(std::vector&lt; float &gt;, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>std::vector&lt; float &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="350" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a0852ee471afbea7e0d0d5ef38e8a29c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(double, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>double</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="352" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a191bf659c5f30e9ca4b3324e03a1138a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(std::vector&lt; double &gt;, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="353" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1adf4560751c9fa939b99bd148179055dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(long, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>long</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="355" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a6e90756f7e162beefd79cdfd2b95cc84" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(std::vector&lt; long &gt;, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>std::vector&lt; long &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="356" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a46420e252c99d08fce9e153c6022f29d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(int, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>int</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="358" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a929ee94532cafc580a4ddca147f058cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(std::vector&lt; int &gt;, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="359" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a898bb127aa1d0e57031b857e0b2664f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::add_edge_feature</definition>
        <argsstring>(std::vector&lt; std::vector&lt; int &gt;&gt;, std::string)</argsstring>
        <name>add_edge_feature</name>
        <param>
          <type>std::vector&lt; std::vector&lt; int &gt;&gt;</type>
          <defname>_data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="360" column="14" bodyfile="modules/graph/cxx/properties.cxx" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a255ec8fcf27b7352445397e5245cc9ef" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename G</type>
          </param>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>torch::Tensor</type>
        <definition>torch::Tensor graph_template::to_tensor</definition>
        <argsstring>(std::vector&lt; G &gt; _data, at::ScalarType _op, g prim)</argsstring>
        <name>to_tensor</name>
        <param>
          <type>std::vector&lt; G &gt;</type>
          <declname>_data</declname>
        </param>
        <param>
          <type>at::ScalarType</type>
          <declname>_op</declname>
        </param>
        <param>
          <type>g</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="363" column="23" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="363" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a9b26bf6100bf257849c43563d1b1bd70" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
        <definition>graph_template * graph_template::build</definition>
        <argsstring>(event_template *el)</argsstring>
        <name>build</name>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>el</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="398" column="24" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="189" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1adb85f599e4b4fea182f9d26ca0b7f347" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgraph__t" kindref="compound">graph_t</ref> *</type>
        <definition>graph_t * graph_template::data_export</definition>
        <argsstring>()</argsstring>
        <name>data_export</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="399" column="17" bodyfile="modules/graph/cxx/graph_template.cxx" bodystart="148" bodyend="187"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classgraph__template_1a888c196cb8d6e4ac92c0c9e53395240a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::set_name</definition>
        <argsstring>(std::string *, graph_template *)</argsstring>
        <name>set_name</name>
        <param>
          <type>std::string *</type>
          <defname>name</defname>
        </param>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="367" column="21" bodyfile="modules/graph/cxx/properties.cxx" bodystart="3" bodyend="5"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aa961704bb21f31da4e132a96e8b7fe32" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::set_preselection</definition>
        <argsstring>(bool *, graph_template *)</argsstring>
        <name>set_preselection</name>
        <param>
          <type>bool *</type>
          <defname>inpt</defname>
        </param>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="368" column="21" bodyfile="modules/graph/cxx/properties.cxx" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a5558df2fc4026ed00b1575ded3f38c94" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::get_hash</definition>
        <argsstring>(std::string *, graph_template *)</argsstring>
        <name>get_hash</name>
        <param>
          <type>std::string *</type>
          <defname>val</defname>
        </param>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="370" column="21" bodyfile="modules/graph/cxx/properties.cxx" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a8bef9120a542dd7187b2b498a1333652" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::get_index</definition>
        <argsstring>(long *, graph_template *)</argsstring>
        <name>get_index</name>
        <param>
          <type>long *</type>
          <defname>inpt</defname>
        </param>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="371" column="21" bodyfile="modules/graph/cxx/properties.cxx" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a7a28839f9617ae34d6d7e96b47db7a8b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::get_weight</definition>
        <argsstring>(double *, graph_template *)</argsstring>
        <name>get_weight</name>
        <param>
          <type>double *</type>
          <defname>inpt</defname>
        </param>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="372" column="21" bodyfile="modules/graph/cxx/properties.cxx" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1af706847aa067a98ec2b898c8b19c89e2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::get_tree</definition>
        <argsstring>(std::string *, graph_template *)</argsstring>
        <name>get_tree</name>
        <param>
          <type>std::string *</type>
          <defname>name</defname>
        </param>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="373" column="21" bodyfile="modules/graph/cxx/properties.cxx" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1a21b4c1706652c47441205a8a8efaabff" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::get_preselection</definition>
        <argsstring>(bool *, graph_template *)</argsstring>
        <name>get_preselection</name>
        <param>
          <type>bool *</type>
          <defname>inpt</defname>
        </param>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="374" column="21" bodyfile="modules/graph/cxx/properties.cxx" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__template_1aa7bdd630d146ee5180c61b0b27861659" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graph_template::build_export</definition>
        <argsstring>(std::map&lt; std::string, torch::Tensor * &gt; *_truth_t, std::map&lt; std::string, int &gt; *_truth_i, std::map&lt; std::string, torch::Tensor * &gt; *_data_t, std::map&lt; std::string, int &gt; *_data_i, std::map&lt; std::string, torch::Tensor &gt; *_fx)</argsstring>
        <name>build_export</name>
        <param>
          <type>std::map&lt; std::string, torch::Tensor * &gt; *</type>
          <declname>_truth_t</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, int &gt; *</type>
          <declname>_truth_i</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, torch::Tensor * &gt; *</type>
          <declname>_data_t</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, int &gt; *</type>
          <declname>_data_i</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, torch::Tensor &gt; *</type>
          <declname>_fx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/graph/include/templates/graph_template.h" line="376" column="21" bodyfile="modules/graph/cxx/properties.cxx" bodystart="168" bodyend="185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>graph_jets_detector_lep</label>
        <link refid="classgraph__jets__detector__lep"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>graph_truthjets_nonu</label>
        <link refid="classgraph__truthjets__nonu"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>graph_jets</label>
        <link refid="classgraph__jets"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>graph_children</label>
        <link refid="classgraph__children"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>graph_truthjets</label>
        <link refid="classgraph__truthjets"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>graph_jets_nonu</label>
        <link refid="classgraph__jets__nonu"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>graph_tops</label>
        <link refid="classgraph__tops"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>graph_template</label>
        <link refid="classgraph__template"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>graph_detector</label>
        <link refid="classgraph__detector"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>cproperty&lt; std::vector&lt; int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>meta</label>
        <link refid="classmeta"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>dsid</edgelabel>
          <edgelabel>nFiles</edgelabel>
          <edgelabel>datasetNumber</edgelabel>
          <edgelabel>totalEvents</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>cross_section_nb</edgelabel>
          <edgelabel>completion</edgelabel>
          <edgelabel>cross_section_fb</edgelabel>
          <edgelabel>ecmEnergy</edgelabel>
          <edgelabel>event_index</edgelabel>
          <edgelabel>sum_of_weights</edgelabel>
          <edgelabel>beam_energy</edgelabel>
          <edgelabel>cross_section_pb</edgelabel>
          <edgelabel>genFiltEff</edgelabel>
          <edgelabel>eventNumber</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>isMC</edgelabel>
          <edgelabel>found</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>cproperty&lt; double, graph_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; double, graph_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>cproperty&lt; unsigned int, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; unsigned int, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>cproperty&lt; long, graph_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; long, graph_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>cproperty&lt; std::string, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::string, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>cproperty&lt; double, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; double, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>cproperty&lt; std::vector&lt; double &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; double &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>cproperty&lt; std::map&lt; int, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>cproperty&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>cproperty&lt; T, G &gt;</label>
        <link refid="classcproperty"/>
      </node>
      <node id="15">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>cproperty&lt; std::map&lt; int, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="20">
        <label>cproperty&lt; bool, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; bool, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>cproperty&lt; std::string, graph_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::string, graph_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>graph_template</label>
        <link refid="classgraph__template"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>preselection</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>meta_data</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>index</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>weight</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>cproperty&lt; std::map&lt; std::string, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>cproperty&lt; bool, graph_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; bool, graph_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="7" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="7">
        <label>std::string</label>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>cproperty&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/graph/include/templates/graph_template.h" line="179" column="1" bodyfile="modules/graph/include/templates/graph_template.h" bodystart="178" bodyend="402"/>
    <listofallmembers>
      <member refid="classgraph__template_1a0a8e352dc6dd57a1a78c0506b7101960" prot="private" virt="non-virtual"><scope>graph_template</scope><name>_topological_index</name></member>
      <member refid="classgraph__template_1a2e0d4d232ecb0f77e18f73a29188bc4d" prot="private" virt="non-virtual"><scope>graph_template</scope><name>_topology</name></member>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>graph_template</scope><name>absolute_path</name></member>
      <member refid="classgraph__template_1aea3a1bee0125428e0c00dc0816e63d64" prot="public" virt="non-virtual"><scope>graph_template</scope><name>add_edge_data_feature</name></member>
      <member refid="classgraph__template_1aec3c46947c2d629cb02539d19dbe9772" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1aabf37b072ee481e32066561f03ea81fd" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1a76fb34b4ef1813a39edcb83a2d79f1b8" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1a99073ac4179279c90b58e16ef6645976" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1a0852ee471afbea7e0d0d5ef38e8a29c9" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1a191bf659c5f30e9ca4b3324e03a1138a" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1adf4560751c9fa939b99bd148179055dc" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1a6e90756f7e162beefd79cdfd2b95cc84" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1a46420e252c99d08fce9e153c6022f29d" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1a929ee94532cafc580a4ddca147f058cd" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1a898bb127aa1d0e57031b857e0b2664f3" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_edge_feature</name></member>
      <member refid="classgraph__template_1aad0f9d28368afe4e7898dcc409ed10a1" prot="public" virt="non-virtual"><scope>graph_template</scope><name>add_edge_truth_feature</name></member>
      <member refid="classgraph__template_1a1a49a06e30768be2815531f478dbb035" prot="public" virt="non-virtual"><scope>graph_template</scope><name>add_graph_data_feature</name></member>
      <member refid="classgraph__template_1a185c7464be35c70cf3a51df81b744713" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1a261b57280815f46b913fefcad05d743b" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1acb2f9e14654436ed54a2583382390320" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1a0c57861e1d39227c211369347587a5f1" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1ad78e2f43fe92dd7f11d71e2d4c30b8cf" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1a7e0db1be68fba4e2c635d6341efb4499" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1a94e7be22cf60afd051826b18b8c4865c" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1a12f7f227b066dda3826d15622b43e05e" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1a7056b62915da3d3ebf69e7502b5bf346" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1a66bae6d31917f8287e16c079295a6aa0" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1a0c2ffc0eb4627bc8eda584e3aee47f38" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_graph_feature</name></member>
      <member refid="classgraph__template_1aa76fa2728ad46132846ae09e9db93386" prot="public" virt="non-virtual"><scope>graph_template</scope><name>add_graph_truth_feature</name></member>
      <member refid="classgraph__template_1aa9d58009001be66e52c75e95357860ac" prot="public" virt="non-virtual"><scope>graph_template</scope><name>add_node_data_feature</name></member>
      <member refid="classgraph__template_1a0d4c62956b90f125a108f095cf5e84fa" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1aa5f2ca5fcc5098af7532e70a83fd0e61" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1aa09d5a8b0b5adace65c75e3caf3b84d8" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1a75e6c18e8583134015f0bec176574f1e" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1ae0528dbe133ea7e7a9fa7c62f7939242" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1a8e109767a2c1671ea0993d1b60d4a64b" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1a365582b5a35e8ae0d3013aa22cd6c395" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1aae092e15a072c593c1e55287a60760da" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1a908d80d2c46571836985c7b637c56c63" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1aaf9d32429295d1072b3e43da3cf13308" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1afec4054a183bf9feedf2670a90d4bd1a" prot="private" virt="non-virtual"><scope>graph_template</scope><name>add_node_feature</name></member>
      <member refid="classgraph__template_1ad9f0102011d63e5571bb52e25c5d440e" prot="public" virt="non-virtual"><scope>graph_template</scope><name>add_node_truth_feature</name></member>
      <member refid="classgraph__template_1ae3d4b702c86a22aa0f5f22763cafea01" prot="private" virt="non-virtual"><scope>graph_template</scope><name>analysis</name></member>
      <member refid="classgraph__template_1a9b26bf6100bf257849c43563d1b1bd70" prot="private" virt="non-virtual"><scope>graph_template</scope><name>build</name></member>
      <member refid="classgraph__template_1aa7bdd630d146ee5180c61b0b27861659" prot="private" virt="non-virtual"><scope>graph_template</scope><name>build_export</name></member>
      <member refid="classgraph__template_1a010ead65c4f69b55b480f425e4f676e6" prot="public" virt="virtual"><scope>graph_template</scope><name>clone</name></member>
      <member refid="classgraph__template_1af6db04c1f266cc1d7da481e52784a30d" prot="public" virt="virtual"><scope>graph_template</scope><name>CompileEvent</name></member>
      <member refid="classgraph__template_1a3a30d788a2133f758d28950adcb44c05" prot="private" virt="non-virtual"><scope>graph_template</scope><name>container</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>graph_template</scope><name>create_path</name></member>
      <member refid="classgraph__template_1ac6a986b3095026298a035e57ca08433e" prot="private" virt="non-virtual"><scope>graph_template</scope><name>data</name></member>
      <member refid="classgraph__template_1adb85f599e4b4fea182f9d26ca0b7f347" prot="private" virt="non-virtual"><scope>graph_template</scope><name>data_export</name></member>
      <member refid="classgraph__template_1a18725eb3da8ab2866b415fed685465d1" prot="public" virt="non-virtual"><scope>graph_template</scope><name>define_particle_nodes</name></member>
      <member refid="classgraph__template_1af5d505282f6126e2fe5d2eab98507d40" prot="public" virt="non-virtual"><scope>graph_template</scope><name>define_topology</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>graph_template</scope><name>delete_path</name></member>
      <member refid="classgraph__template_1aa2bef51e5e00b49425c8ac93bcd1f315" prot="public" virt="non-virtual"><scope>graph_template</scope><name>double_neutrino</name></member>
      <member refid="classgraph__template_1a0c13baea90fdd407ee7ba1756cd9f403" prot="private" virt="non-virtual"><scope>graph_template</scope><name>edge_fx</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>graph_template</scope><name>ends_with</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>graph_template</scope><name>extract</name></member>
      <member refid="classgraph__template_1ac1482a79b63e7d990f72778ce2fae6e0" prot="public" virt="non-virtual"><scope>graph_template</scope><name>filename</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>graph_template</scope><name>flush</name></member>
      <member refid="classgraph__template_1acfb899ce640661e58f6246d7d9ea4491" prot="public" virt="non-virtual"><scope>graph_template</scope><name>flush_particles</name></member>
      <member refid="classgraph__template_1a958b4a2235631aca03835f856fecc949" prot="public" virt="non-virtual"><scope>graph_template</scope><name>get_event</name></member>
      <member refid="classgraph__template_1a5558df2fc4026ed00b1575ded3f38c94" prot="private" virt="non-virtual"><scope>graph_template</scope><name>get_hash</name></member>
      <member refid="classgraph__template_1a8bef9120a542dd7187b2b498a1333652" prot="private" virt="non-virtual"><scope>graph_template</scope><name>get_index</name></member>
      <member refid="classgraph__template_1a21b4c1706652c47441205a8a8efaabff" prot="private" virt="non-virtual"><scope>graph_template</scope><name>get_preselection</name></member>
      <member refid="classgraph__template_1af706847aa067a98ec2b898c8b19c89e2" prot="private" virt="non-virtual"><scope>graph_template</scope><name>get_tree</name></member>
      <member refid="classgraph__template_1a7a28839f9617ae34d6d7e96b47db7a8b" prot="private" virt="non-virtual"><scope>graph_template</scope><name>get_weight</name></member>
      <member refid="classgraph__template_1accdc465db499ba018cf1baf3adedefa4" prot="private" virt="non-virtual"><scope>graph_template</scope><name>graph_fx</name></member>
      <member refid="classgraph__template_1ad496a2818827b70a95f491889b71663a" prot="public" virt="non-virtual"><scope>graph_template</scope><name>graph_template</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>graph_template</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>graph_template</scope><name>has_value</name></member>
      <member refid="classgraph__template_1a0b788130a844a3c492b4066af45692ed" prot="public" virt="non-virtual"><scope>graph_template</scope><name>hash</name></member>
      <member refid="classgraph__template_1a4e4936c3db17a37ef5b351b4ee614fc7" prot="public" virt="non-virtual"><scope>graph_template</scope><name>index</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>graph_template</scope><name>is_file</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>graph_template</scope><name>ls</name></member>
      <member refid="classgraph__template_1a1c1c2276d720ccb3d6af20a72d001bd4" prot="private" virt="non-virtual"><scope>graph_template</scope><name>m_event</name></member>
      <member refid="classgraph__template_1ad3a795a02e1ba77e30aafe170670ea13" prot="private" virt="non-virtual"><scope>graph_template</scope><name>m_preselection</name></member>
      <member refid="classgraph__template_1a3ff9e6a22dc66fec72dbe81ad5e0270b" prot="private" virt="non-virtual"><scope>graph_template</scope><name>m_topology</name></member>
      <member refid="classgraph__template_1ad1e698939baa2f62972bd7090758000e" prot="public" virt="non-virtual"><scope>graph_template</scope><name>meta_data</name></member>
      <member refid="classgraph__template_1a11480635ca6d3d6901b92eeb6a6d1b92" prot="public" virt="non-virtual"><scope>graph_template</scope><name>name</name></member>
      <member refid="classgraph__template_1a33190ca3ec011eb8c8f84bfe1e97ca9b" prot="private" virt="non-virtual"><scope>graph_template</scope><name>node_fx</name></member>
      <member refid="classgraph__template_1a7e5d05029895f0c1a2f0198c68d4533b" prot="private" virt="non-virtual"><scope>graph_template</scope><name>node_particles</name></member>
      <member refid="classgraph__template_1a8fba0d9a21531f3f98fcd8abc45ba0c5" prot="private" virt="non-virtual"><scope>graph_template</scope><name>nodes</name></member>
      <member refid="classgraph__template_1a47741209e482d0d451488cfe9e1a859b" prot="private" virt="non-virtual"><scope>graph_template</scope><name>num_nodes</name></member>
      <member refid="classgraph__template_1a66c14384597c07176abf262c8dfadc2b" prot="private" virt="non-virtual"><scope>graph_template</scope><name>op</name></member>
      <member refid="classgraph__template_1ab40b594f7eb68cd9a5c8a2fc688bdd53" prot="public" virt="non-virtual"><scope>graph_template</scope><name>operator==</name></member>
      <member refid="classgraph__template_1a5f4936125af525795b14a0858e100826" prot="public" virt="non-virtual"><scope>graph_template</scope><name>preselection</name></member>
      <member refid="classgraph__template_1afb21d1d87f82570a516f9e7b678bb115" prot="public" virt="virtual"><scope>graph_template</scope><name>PreSelection</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>graph_template</scope><name>put</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>graph_template</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>graph_template</scope><name>replace</name></member>
      <member refid="classgraph__template_1a888c196cb8d6e4ac92c0c9e53395240a" prot="private" virt="non-virtual"><scope>graph_template</scope><name>set_name</name></member>
      <member refid="classgraph__template_1aa961704bb21f31da4e132a96e8b7fe32" prot="private" virt="non-virtual"><scope>graph_template</scope><name>set_preselection</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>graph_template</scope><name>split</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual"><scope>graph_template</scope><name>sum</name></member>
      <member refid="classgraph__template_1a8f934be76e9802956c4208153825b835" prot="public" virt="non-virtual"><scope>graph_template</scope><name>threadIdx</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>graph_template</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>graph_template</scope><name>to_string</name></member>
      <member refid="classgraph__template_1a255ec8fcf27b7352445397e5245cc9ef" prot="private" virt="non-virtual"><scope>graph_template</scope><name>to_tensor</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>graph_template</scope><name>tools</name></member>
      <member refid="classgraph__template_1ab63ea3b522ea06888cd300dd503d5ed9" prot="public" virt="non-virtual"><scope>graph_template</scope><name>tree</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>graph_template</scope><name>trim</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>graph_template</scope><name>type_name</name></member>
      <member refid="classgraph__template_1af57627b35bdb1004238679138f3e4fb2" prot="public" virt="non-virtual"><scope>graph_template</scope><name>weight</name></member>
      <member refid="classgraph__template_1a6ffa9e79ebf30fa1accdcf64b302c4e8" prot="public" virt="virtual"><scope>graph_template</scope><name>~graph_template</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>graph_template</scope><name>~tools</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
