<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="performance_2topefficiency_2figures_8py" kind="file" language="Python">
    <compoundname>performance/topefficiency/figures.py</compoundname>
    <innernamespace refid="namespacetopefficiency_1_1figures">topefficiency::figures</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetopefficiency_1_1figures" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespace_analysis_g_1_1core_1_1plotting" kindref="compound">AnalysisG.core.plotting</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TH1F,<sp/>TH2F,<sp/>TLine,<sp/>ROC</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespace_analysis_g_1_1core" kindref="compound">AnalysisG.core</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pathlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Path</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.algorithms<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>figure_path</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>metalookup</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespacetopefficiency_1_1figures_1a6208e2bffb469da07054cb326ffe1fe9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetopefficiency_1_1figures_1a6208e2bffb469da07054cb326ffe1fe9" kindref="member">MakeData</ref>(inpt,<sp/><sp/>key):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inpt[key]</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>metalookup.GenerateData</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>inpt[key]<sp/>=<sp/>dt</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dt</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(hist,<sp/>subx<sp/>=<sp/>&quot;&quot;,<sp/>defaults<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.UseLateX<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.Style<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ATLAS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.OutputDirectory<sp/>=<sp/>figure_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/topefficiency&quot;</highlight><highlight class="normal"><sp/>+<sp/>subx</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defaults<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hist</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.xTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invariant<sp/>Mass<sp/>of<sp/>Candidate<sp/>Top<sp/>(GeV)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.yTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tops<sp/>/<sp/>($2$<sp/>GeV)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.xMin<sp/><sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.yMin<sp/><sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.xStep<sp/><sp/>=<sp/>20</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.xMax<sp/><sp/><sp/>=<sp/>400</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.xBins<sp/><sp/>=<sp/>200</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.Stacked<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.Overflow<sp/><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>hist.ShowCount<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hist</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespacetopefficiency_1_1figures_1a84945958e13f82db53a47ad3c22e7747" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetopefficiency_1_1figures_1a84945958e13f82db53a47ad3c22e7747" kindref="member">top_kinematic_region</ref>(stacks,<sp/>tmp<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tmp<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopefficiency_1_1algorithms_1a63630b5bb3f8ecbc939e408c9b0a269a" kindref="member">top_pteta</ref>(stacks,<sp/>tmp,<sp/>metalookup)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>cols<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>top_score_mass<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_topmass_prc<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal"><sp/>:<sp/>{},<sp/></highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal"><sp/>:<sp/>{}}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_topmass_cmp<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal"><sp/>:<sp/>{},<sp/></highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal"><sp/>:<sp/>{}}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>regions<sp/>=<sp/>list(set(list(stacks[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">])<sp/>+<sp/>list(stacks[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">])))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>kin<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sorted(regions):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_r<sp/>=<sp/>kin.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)[0]</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kin<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stacks[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">]:<sp/>stacks[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][kin]<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kin<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stacks[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">]:<sp/>data_tru<sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(stacks[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][kin].values())</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/>data_tru<sp/>=<sp/>metalookup.GenerateData</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pt_r<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][pt_r]<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][pt_r]<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kin<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stacks[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>fn,<sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stacks[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][kin].items():</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>tl,<sp/>col<sp/>=<sp/><ref refid="namespacetopefficiency_1_1algorithms_1a6c102f7886341eb4af3d7e559584793e" kindref="member">mapping</ref>(<ref refid="namespacemain_1a60e5d1549b9e605913a0da2e83a74c75" kindref="member">metalookup</ref>(fn).DatasetName)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cols[tl]<sp/>=<sp/>col</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tl<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][pt_r]:<sp/>pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][pt_r][tl]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][pt_r][tl].append(val)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru_h<sp/>=<sp/>TH1F()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru_h.Title<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Truth&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru_h.xData<sp/><sp/><sp/>=<sp/>data_tru.data</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#tru_h.Weights<sp/>=<sp/>data_tru.weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru_h.Color<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pt_r<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">]:<sp/>pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][pt_r]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pt_r<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">]:<sp/>pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][pt_r]<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pt_r<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>top_score_mass:<sp/>top_score_mass[pt_r]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;mass&quot;</highlight><highlight class="normal"><sp/>:<sp/>{},<sp/></highlight><highlight class="stringliteral">&quot;score&quot;</highlight><highlight class="normal"><sp/>:<sp/>{}}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][pt_r]<sp/>+=<sp/>list(stacks[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][kin].values())<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kin<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stacks[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>fn<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stacks[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][kin]:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/>_,<sp/>tl,<sp/>col<sp/>=<sp/><ref refid="namespacetopefficiency_1_1algorithms_1a6c102f7886341eb4af3d7e559584793e" kindref="member">mapping</ref>(<ref refid="namespacemain_1a60e5d1549b9e605913a0da2e83a74c75" kindref="member">metalookup</ref>(fn).DatasetName)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tl<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][pt_r]:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][pt_r][tl]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][pt_r][tl]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_score_mass[pt_r][</highlight><highlight class="stringliteral">&quot;mass&quot;</highlight><highlight class="normal">][tl]<sp/><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_score_mass[pt_r][</highlight><highlight class="stringliteral">&quot;score&quot;</highlight><highlight class="normal">][tl]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][pt_r][tl].append(stacks[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][kin][fn])</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][pt_r][tl].append(stacks[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][kin][fn])</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_score_mass[pt_r][</highlight><highlight class="stringliteral">&quot;mass&quot;</highlight><highlight class="normal">][tl].append(stacks[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][kin][fn])</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_score_mass[pt_r][</highlight><highlight class="stringliteral">&quot;score&quot;</highlight><highlight class="normal">][tl].append(stacks[</highlight><highlight class="stringliteral">&quot;top_score&quot;</highlight><highlight class="normal">][kin][fn])</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tl<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>hists:<sp/>hists[tl]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists[tl].append(stacks[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][kin][fn])</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cols[tl]<sp/>=<sp/>col</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>prc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>hists:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_p<sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(hists[prc])</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h<sp/>=<sp/>TH1F()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h.Title<sp/><sp/><sp/>=<sp/>prc</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h.Color<sp/><sp/><sp/>=<sp/>cols[prc]</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h.xData<sp/><sp/><sp/>=<sp/>data_p.data</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#prc_h.Weights<sp/>=<sp/>data_p.weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists[prc]<sp/>=<sp/>prc_h</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlt<sp/>=<sp/>kin.replace(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\\leq<sp/>p^{top}_T<sp/>(GeV)<sp/>\\leq<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlt<sp/>=<sp/>tlt.replace(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\\leq<sp/>|<sp/>\\eta_{top}<sp/>|<sp/>\\leq<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(TH1F(),<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>kin.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)[0],<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Reconstructed<sp/>Invariant<sp/>Mass<sp/>of<sp/>Top<sp/>Candidate<sp/>within<sp/>Kinematic<sp/>Region:<sp/>$&quot;</highlight><highlight class="normal"><sp/>+<sp/>tlt<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Histograms<sp/>=<sp/>list(hists.values())</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Histogram<sp/>=<sp/>tru_h</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Filename<sp/>=<sp/>kin.split(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">)[1]</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.SaveFigure()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>kin<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>set(list(pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">])<sp/>+<sp/>list(pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">])):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_tru<sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][kin])<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][kin])<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>metalookup.GenerateData</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru<sp/>=<sp/>TH1F()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Truth&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru.xData<sp/><sp/><sp/>=<sp/>data_tru.data</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#tru.Weights<sp/>=<sp/>data_tru.weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nums<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>prc,<sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pt_topmass_prc[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][kin].items():</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_p<sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(val)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(val)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>metalookup.GenerateData</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h<sp/>=<sp/>TH1F()</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h.Title<sp/><sp/><sp/>=<sp/>prc</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h.Color<sp/><sp/><sp/>=<sp/>cols[prc]</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h.xData<sp/><sp/><sp/>=<sp/>data_p.data</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#prc_h.Weights<sp/>=<sp/>data_p.weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists.append(prc_h)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nums.append(len(prc_h.xData))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlt<sp/>=<sp/>kin.replace(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\\leq<sp/>p^{top}_T<sp/>(GeV)<sp/>\\leq<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(TH1F(),<sp/></highlight><highlight class="stringliteral">&quot;/aggregated-pt/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Reconstructed<sp/>Invariant<sp/>Mass<sp/>of<sp/>Top<sp/>Candidate<sp/>with<sp/>Transverse<sp/>Momentum:<sp/>$&quot;</highlight><highlight class="normal"><sp/>+<sp/>tlt<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Histogram<sp/>=<sp/>tru</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Histograms<sp/>=<sp/>[hists[k]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sorted(range(len(nums)),<sp/>key<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>k<sp/>:<sp/>nums[k])]</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Filename<sp/>=<sp/>kin.split(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">)[0]</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.SaveFigure()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>set(list(pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][kin])<sp/>+<sp/>list(pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][kin])):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/>data_t<sp/><sp/><sp/><sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][kin][p])</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/>data_t<sp/>=<sp/>metalookup.GenerateData</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TH1F()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_t.Title<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Truth&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_t.xData<sp/><sp/><sp/>=<sp/>data_t.data</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#prc_t.Weights<sp/>=<sp/>data_t.weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/>data_p<sp/><sp/><sp/><sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(pt_topmass_cmp[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][kin][p])</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/>data_p<sp/>=<sp/>metalookup.GenerateData</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TH1F()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_d.Title<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Reconstructed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_d.Color<sp/><sp/><sp/>=<sp/>cols[p]</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_d.xData<sp/><sp/><sp/>=<sp/>data_p.data</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#prc_d.Weights<sp/>=<sp/>data_p.weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(TH1F(),<sp/></highlight><highlight class="stringliteral">&quot;/aggregated-pt/&quot;</highlight><highlight class="normal"><sp/>+<sp/>kin.split(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">)[0]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Reconstructed<sp/>Invariant<sp/>Mass<sp/>of<sp/>Top<sp/>Candidate<sp/>with<sp/>Transverse<sp/>Momentum:<sp/>$&quot;</highlight><highlight class="normal"><sp/>+<sp/>tlt<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/>p<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Histogram<sp/><sp/>=<sp/>prc_t</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Histograms<sp/>=<sp/>[prc_d]</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.Filename<sp/><sp/><sp/>=<sp/>p.replace(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).<ref refid="classtools_1aeae88ebd7116d59008600f0723716dba" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).<ref refid="classtools_1aeae88ebd7116d59008600f0723716dba" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).<ref refid="classtools_1aeae88ebd7116d59008600f0723716dba" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reco.SaveFigure()</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>kin<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>top_score_mass:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>prc,<sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>top_score_mass[kin][</highlight><highlight class="stringliteral">&quot;score&quot;</highlight><highlight class="normal">].items():</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_p<sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(val)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TH1F()</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h.Title<sp/><sp/><sp/>=<sp/>prc</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h.Color<sp/><sp/><sp/>=<sp/>cols[prc]</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prc_h.xData<sp/><sp/><sp/>=<sp/>data_p.data</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#prc_h.Weights<sp/>=<sp/>data_p.weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hists[prc]<sp/><sp/><sp/><sp/>=<sp/>prc_h</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>len(hists):<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlt<sp/>=<sp/>kin.replace(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\\leq<sp/>p^{top}_T<sp/>(GeV)<sp/>\\leq<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(TH1F(),<sp/></highlight><highlight class="stringliteral">&quot;/pt-score&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.Histograms<sp/>=<sp/>list(hists.values())</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Reconstructed<sp/>Top<sp/>Candidate<sp/>Score<sp/>with<sp/>\n<sp/>Transverse<sp/>Momentum<sp/>$&quot;</highlight><highlight class="normal"><sp/>+<sp/>tlt<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.xTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>PageRanked<sp/>Candidate<sp/>Top<sp/>Score<sp/>(Arb.)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.yTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tops<sp/>/<sp/>($0.002$)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.yMin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.xMin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.xMax<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.xBins<sp/>=<sp/>500</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.xStep<sp/>=<sp/>0.10</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#s_s.yLogarithmic<sp/>=<sp/>True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.Stacked<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.ShowCount<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.Filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mva-score_&quot;</highlight><highlight class="normal"><sp/>+<sp/>kin</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_s.SaveFigure()</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>kin<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>top_score_mass:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlt<sp/>=<sp/>kin.replace(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\\leq<sp/>p^{top}_T<sp/>(GeV)<sp/>\\leq<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(TH2F(),<sp/></highlight><highlight class="stringliteral">&quot;/score-mass&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Reconstructed<sp/>Top<sp/>Candidate<sp/>Score<sp/>as<sp/>a<sp/>\n<sp/>function<sp/>of<sp/>Invariant<sp/>Mass<sp/>for<sp/>$&quot;</highlight><highlight class="normal"><sp/>+<sp/>tlt<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.xTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Reconstructed<sp/>Top<sp/>Candidate<sp/>Invariant<sp/>Mass<sp/>/<sp/>($1$<sp/>GeV)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.yTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MVA<sp/>Score<sp/>of<sp/>Candidate<sp/>Top<sp/>/<sp/>($0.01$)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.xMin<sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.xMax<sp/><sp/>=<sp/>400</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.xBins<sp/>=<sp/>400</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.xStep<sp/>=<sp/>20</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.yMin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.yMax<sp/>=<sp/>1.00</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.yStep<sp/>=<sp/>0.10</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.yBins<sp/>=<sp/>100</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.Color<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;magma&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_m<sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(<ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(top_score_mass[kin][</highlight><highlight class="stringliteral">&quot;mass&quot;</highlight><highlight class="normal">].values(),<sp/>[])).data</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_s<sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(<ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(top_score_mass[kin][</highlight><highlight class="stringliteral">&quot;score&quot;</highlight><highlight class="normal">].values(),<sp/>[]))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.xData<sp/><sp/><sp/>=<sp/>data_m</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.yData<sp/><sp/><sp/>=<sp/>data_s.data</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_s.Filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pt_range_&quot;</highlight><highlight class="normal"><sp/>+<sp/>kin</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/>mass_s.SaveFigure()</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="namespacetopefficiency_1_1figures_1a99aec3d378a84585a16094cd7ba17767" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetopefficiency_1_1figures_1a99aec3d378a84585a16094cd7ba17767" kindref="member">roc_data</ref>(stacks,<sp/>data<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopefficiency_1_1algorithms_1a1601482a96c96b99acd1cf00c09c6c34" kindref="member">roc_data_get</ref>(stacks,<sp/>data)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>rx<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(ROC())</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROC<sp/>Classification<sp/>for<sp/>Multi-Tops&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Titles<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;0-Tops&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1-Tops&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2-Tops&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;3-Tops&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;4-Tops&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.xData<sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;n-tops_p&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Truth<sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;n-tops_t&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROC-multitop&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.SaveFigure()</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>rx<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(ROC())</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROC<sp/>Classification<sp/>Top<sp/>Edge&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.xData<sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;edge_top_p&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Truth<sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;edge_top_t&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROC-top-edge&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Binary<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.SaveFigure()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>rx<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(ROC())</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROC<sp/>Resonance<sp/>MVA&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.xData<sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;signal_p&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Truth<sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;signal_t&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROC-signal&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.Binary<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>rx.SaveFigure()</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="namespacetopefficiency_1_1figures_1a1759143049cc773286a27a94f37a2745" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetopefficiency_1_1figures_1a1759143049cc773286a27a94f37a2745" kindref="member">ntops_reco</ref>(stacks,<sp/>data<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">add_data(data_,<sp/>key):</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[key]</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>metalookup.GenerateData</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_[key]<sp/>=<sp/>data</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopefficiency_1_1algorithms_1a929c237c8618a73b7cfa2f59f28ce972" kindref="member">ntops_reco_compl</ref>(stacks,<sp/>data)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>fnames<sp/>=<sp/>list(stacks[</highlight><highlight class="stringliteral">&quot;weights&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>content<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal"><sp/>:<sp/>{},<sp/></highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal"><sp/>:<sp/>{},<sp/></highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal"><sp/>:<sp/>{}}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>fn<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fnames:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;weights&quot;</highlight><highlight class="normal">][fn]</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_nt_pred<sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;pred_ntops&quot;</highlight><highlight class="normal">][fn]</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_nt_perf<sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;perf_ntops&quot;</highlight><highlight class="normal">][fn]</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_nt<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>stacks[</highlight><highlight class="stringliteral">&quot;tru_ntops&quot;</highlight><highlight class="normal">][fn]</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scores<sp/><sp/><sp/><sp/>=<sp/>list(p_nt_pred)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru_<sp/>=<sp/>add_data(content[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">],<sp/>fn)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru_.weights<sp/>=<sp/>{fn<sp/>:<sp/>w}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru_.data<sp/><sp/><sp/><sp/>=<sp/>{fn<sp/>:<sp/>t_nt}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(scores)):</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc<sp/>=<sp/>scores[i]</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred_nt<sp/>=<sp/>p_nt_pred[sc]</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perf_nt<sp/>=<sp/>p_nt_perf[sc]</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>fn<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>content[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>content[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][fn]<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>content[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][fn]<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perf_<sp/>=<sp/>add_data(content[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][fn],<sp/>sc)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perf_.weights<sp/>=<sp/>{fn<sp/>:<sp/>w}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perf_.data<sp/><sp/><sp/><sp/>=<sp/>{fn<sp/>:<sp/>perf_nt}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred_<sp/>=<sp/>add_data(content[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][fn],<sp/>sc)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred_.weights<sp/>=<sp/>{fn<sp/>:<sp/>w}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred_.data<sp/><sp/><sp/><sp/>=<sp/>{fn<sp/>:<sp/>pred_nt}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>merged<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal"><sp/>:<sp/>{},<sp/></highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal"><sp/>:<sp/>{},<sp/></highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal"><sp/>:<sp/>{}}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>fn<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fnames:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>prc,<sp/>_<sp/>=<sp/>content[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][fn].title(fn)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>prc<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>merged[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">]:<sp/>merged[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][prc]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][prc].append(content[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][fn])</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>content[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][fn]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scores<sp/>=<sp/>list(content[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][fn])</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>prc<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>merged[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">]:<sp/>merged[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][prc]<sp/>=<sp/>{sc<sp/>:<sp/>[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>scores}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>prc<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>merged[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">]:<sp/><sp/><sp/><sp/>merged[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][prc]<sp/><sp/><sp/><sp/>=<sp/>{sc<sp/>:<sp/>[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>scores}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>scores:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][prc][sc].append(content[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][fn][sc])</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][prc][sc].append(content[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][fn][sc])</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>content[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][fn]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>content[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][fn]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>prc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>merged[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">]:<sp/><sp/><sp/><sp/><sp/><sp/>merged[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][prc]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(merged[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][prc])</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>prc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>merged[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">]:<sp/><sp/><sp/><sp/>merged[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][prc]<sp/><sp/><sp/><sp/>=<sp/>{sc:<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(merged[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][prc][sc])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>merged[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][prc]}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>prc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>merged[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">]:<sp/>merged[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][prc]<sp/>=<sp/>{sc:<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>(merged[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][prc][sc])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>merged[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][prc]}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>tl<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a2779058429e493f1c7927d1eba8d7e47" kindref="member">path</ref>(TLine())</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Efficiency<sp/>Purity<sp/>Top<sp/>Reconstruction<sp/>for<sp/>\n<sp/>n-Top<sp/>Multiplicity<sp/>Topologies&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.xTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Efficiency<sp/>($N_{perfect}<sp/>/<sp/>N_{truth}$)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.yTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Purity<sp/>($N_{perfect}<sp/>/<sp/>N_{candidate}$)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.xMin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.yMin<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.xMax<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.yMax<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.Filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;purity_efficiency&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>pairs<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>prc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>merged[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tru_data<sp/>=<sp/>merged[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][prc].data</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights<sp/><sp/>=<sp/>merged[</highlight><highlight class="stringliteral">&quot;truth&quot;</highlight><highlight class="normal">][prc].weights</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_tru<sp/><sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>([tru_data[i]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(weights))])</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(merged[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][prc]):</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prf<sp/>=<sp/>merged[</highlight><highlight class="stringliteral">&quot;perfect&quot;</highlight><highlight class="normal">][prc][sc].data</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_prf<sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>([prf[i]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(weights))])</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prd<sp/>=<sp/>merged[</highlight><highlight class="stringliteral">&quot;prediction&quot;</highlight><highlight class="normal">][prc][sc].data</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_can<sp/>=<sp/><ref refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" kindref="member">sum</ref>([prd[i]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(weights))])</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_can<sp/>==<sp/>0:<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>purity<sp/>=<sp/>num_prf<sp/>/<sp/>num_can</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effi<sp/><sp/><sp/>=<sp/>num_prf<sp/>/<sp/>num_tru</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pairs[effi]<sp/>=<sp/>purity</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.xData<sp/>=<sp/>sorted(pairs)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.yData<sp/>=<sp/>[pairs[k]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sorted(pairs)]</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#tl.Lines.append(ln)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>tl.SaveFigure()</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="namespacetopefficiency_1_1figures_1a5435d7325a85d9ffb1c603735368af55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetopefficiency_1_1figures_1a5435d7325a85d9ffb1c603735368af55" kindref="member">TopEfficiency</ref>(ana):</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>Path(ana)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>=<sp/>[str(x)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>p.glob(</highlight><highlight class="stringliteral">&quot;**/*.pkl&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>str(x).endswith(</highlight><highlight class="stringliteral">&quot;.pkl&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#files<sp/>=<sp/>files[:10]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>stack_roc<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>stack_topkin<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>stack_ntops<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(files[i],<sp/>(i+1)<sp/>/<sp/>len(files))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr<sp/>=<sp/>pickle.load(open(files[i],<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_topkin<sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a84945958e13f82db53a47ad3c22e7747" kindref="member">top_kinematic_region</ref>(stack_topkin,<sp/>pr)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_roc<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a99aec3d378a84585a16094cd7ba17767" kindref="member">roc_data</ref>(stack_roc,<sp/>pr)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_ntops<sp/><sp/>=<sp/><ref refid="namespacetopefficiency_1_1figures_1a1759143049cc773286a27a94f37a2745" kindref="member">ntops_reco</ref>(stack_ntops,<sp/>pr)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#f<sp/>=<sp/>open(str(p)<sp/>+<sp/>&quot;/tmp.pkl&quot;,<sp/>&quot;wb&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#pickle.dump(stack_topkin,<sp/>f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#f.close()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#f<sp/>=<sp/>open(str(p)<sp/>+<sp/>&quot;/tmp.pkl&quot;,<sp/>&quot;rb&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#stack_topkin<sp/>=<sp/>pickle.load(f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#f.close()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetopefficiency_1_1figures_1a84945958e13f82db53a47ad3c22e7747" kindref="member">top_kinematic_region</ref>(stack_topkin)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetopefficiency_1_1figures_1a99aec3d378a84585a16094cd7ba17767" kindref="member">roc_data</ref>(stack_roc)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetopefficiency_1_1figures_1a1759143049cc773286a27a94f37a2745" kindref="member">ntops_reco</ref>(stack_ntops)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/workspaces/AnalysisG/studies/performance/topefficiency/figures.py"/>
  </compounddef>
</doxygen>
