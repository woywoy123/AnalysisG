<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="topefficiency_8cxx" kind="file" language="C++">
    <compoundname>topefficiency.cxx</compoundname>
    <includes refid="topefficiency_8h" local="yes">topefficiency.h</includes>
    <incdepgraph>
      <node id="19">
        <label>c10/core/DeviceType.h</label>
      </node>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="17">
        <label>TTreeReader.h</label>
      </node>
      <node id="30">
        <label>templates/event_template.h</label>
        <link refid="event__template_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>structs/element.h</label>
        <link refid="element_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>tools/vector_cast.h</label>
        <link refid="vector__cast_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TTreeReaderArray.h</label>
      </node>
      <node id="26">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>templates/particle_template.h</label>
        <link refid="particle__template_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>templates/selection_template.h</label>
        <link refid="selection__template_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>structs/folds.h</label>
        <link refid="folds_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>cmath</label>
      </node>
      <node id="38">
        <label>inference/gnn-event.h</label>
        <link refid="gnn-event_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>structs/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="31">
        <label>structs/event.h</label>
        <link refid="modules_2structs_2include_2structs_2event_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>rapidjson/document.h</label>
      </node>
      <node id="20">
        <label>structs/meta.h</label>
        <link refid="structs_2include_2structs_2meta_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="35">
        <label>notification/notification.h</label>
        <link refid="notification_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>TFile.h</label>
      </node>
      <node id="27">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>structs/particles.h</label>
        <link refid="modules_2structs_2include_2structs_2particles_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tools/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>tools/merge_cast.h</label>
        <link refid="merge__cast_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>cstdlib</label>
      </node>
      <node id="24">
        <label>torch/torch.h</label>
      </node>
      <node id="36">
        <label>TH1F.h</label>
      </node>
      <node id="2">
        <label>topefficiency.h</label>
        <link refid="topefficiency_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>TLeaf.h</label>
      </node>
      <node id="21">
        <label>iostream</label>
      </node>
      <node id="22">
        <label>structs/base.h</label>
        <link refid="modules_2structs_2include_2structs_2base_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>meta/meta.h</label>
        <link refid="meta_2include_2meta_2meta_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>inference/gnn-particles.h</label>
        <link refid="gnn-particles_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>TBranch.h</label>
      </node>
      <node id="9">
        <label>structs/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>TTree.h</label>
      </node>
      <node id="1">
        <label>topefficiency.cxx</label>
        <link refid="topefficiency_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implementation of the topefficiency class methods. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the implementation of the decaymode method and other related methods. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**<sp/>\file<sp/>topefficiency.cxx</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>\brief<sp/>Implementation<sp/>of<sp/>the<sp/>topefficiency<sp/>class<sp/>methods.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>contains<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>decaymode<sp/>method<sp/>and<sp/>other<sp/>related<sp/>methods.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="topefficiency_8h" kindref="compound">topefficiency.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classtopefficiency_1a28df214b61ace18c3c6c2f2d9eb7831c" refkind="member"><highlight class="normal"><ref refid="classtopefficiency_1a28df214b61ace18c3c6c2f2d9eb7831c" kindref="member">topefficiency::topefficiency</ref>(){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;topefficiency&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="10" refid="classtopefficiency_1aa72225b48a63287c7b0c7edd8ca35887" refkind="member"><highlight class="normal"><ref refid="classtopefficiency_1aa72225b48a63287c7b0c7edd8ca35887" kindref="member">topefficiency::~topefficiency</ref>(){}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classtopefficiency_1a8650d7ac08b08ed5f566193e39c14326" refkind="member"><highlight class="normal"><ref refid="classselection__template" kindref="compound">selection_template</ref>*<sp/><ref refid="classtopefficiency_1a8650d7ac08b08ed5f566193e39c14326" kindref="member">topefficiency::clone</ref>(){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classselection__template" kindref="compound">selection_template</ref>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtopefficiency_1a28df214b61ace18c3c6c2f2d9eb7831c" kindref="member">topefficiency</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0" kindref="member">topefficiency::merge</ref>(<ref refid="classselection__template" kindref="compound">selection_template</ref>*<sp/><ref refid="namespacemain_1a80457db91bd1110a9e4a8515839a2a4b" kindref="member">sl</ref>){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetopefficiency" kindref="compound">topefficiency</ref>*<sp/>slt<sp/>=<sp/>(<ref refid="namespacetopefficiency" kindref="compound">topefficiency</ref>*)<ref refid="namespacemain_1a80457db91bd1110a9e4a8515839a2a4b" kindref="member">sl</ref>;<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a807f5935319eba81c984b04876b9e363" kindref="member">p_topmass</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a807f5935319eba81c984b04876b9e363" kindref="member">p_topmass</ref>);<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1afd8de69a4ac273da76768d645dc03dd8" kindref="member">t_topmass</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1afd8de69a4ac273da76768d645dc03dd8" kindref="member">t_topmass</ref>);<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1afed56da37aaca5606aebd1041722042c" kindref="member">p_zmass</ref>,<sp/><sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1afed56da37aaca5606aebd1041722042c" kindref="member">p_zmass</ref>);<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a8d1a20038a9fcbaa833919dfa66ccea2" kindref="member">t_zmass</ref>,<sp/><sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a8d1a20038a9fcbaa833919dfa66ccea2" kindref="member">t_zmass</ref>);<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1afc023848967b4c638f96cfaf15f1d8ac" kindref="member">prob_tops</ref><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1afc023848967b4c638f96cfaf15f1d8ac" kindref="member">prob_tops</ref>);<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a7c4f458a2c1fbed8a3cc843a0874b67e" kindref="member">prob_zprime</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a7c4f458a2c1fbed8a3cc843a0874b67e" kindref="member">prob_zprime</ref>);<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1aabe9231cc1904140d1874f8b1aa8b961" kindref="member">n_tru_tops</ref><sp/><sp/><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1aabe9231cc1904140d1874f8b1aa8b961" kindref="member">n_tru_tops</ref>);<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ad44d0e33df33b16759179b4cc29e44ff" kindref="member">n_pred_tops</ref><sp/><sp/><sp/>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1ad44d0e33df33b16759179b4cc29e44ff" kindref="member">n_pred_tops</ref>);<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ac2c9b198235e45a6d139ddeb8d72c55f" kindref="member">n_perfect_tops</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1ac2c9b198235e45a6d139ddeb8d72c55f" kindref="member">n_perfect_tops</ref>);<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a34fffdf1c2559749fbbbdcb63caadef6" kindref="member">p_decay_region</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a34fffdf1c2559749fbbbdcb63caadef6" kindref="member">p_decay_region</ref>);<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a4c2c1accd54cc6aeedfd4685ed49644c" kindref="member">t_decay_region</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a4c2c1accd54cc6aeedfd4685ed49644c" kindref="member">t_decay_region</ref>);<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ae79b252f9ab585465e61d1677152eeeb" kindref="member">p_nodes</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1ae79b252f9ab585465e61d1677152eeeb" kindref="member">p_nodes</ref>);<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1a205af11d07be8d10770e7392817fc5c3" kindref="member">merge_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a095520fd92e44698845aeb4f4a5c940b" kindref="member">t_nodes</ref>,<sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a095520fd92e44698845aeb4f4a5c940b" kindref="member">t_nodes</ref>);<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ae8501f5c5b8349cb6ed601baae388fd4" kindref="member">truth_res_edge</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1ae8501f5c5b8349cb6ed601baae388fd4" kindref="member">truth_res_edge</ref>);<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a8b84f23c91ca598d48a5613217356d74" kindref="member">truth_top_edge</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a8b84f23c91ca598d48a5613217356d74" kindref="member">truth_top_edge</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a2d6cb787d1b293127247ebafd627c1ee" kindref="member">truth_ntops</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a2d6cb787d1b293127247ebafd627c1ee" kindref="member">truth_ntops</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a7f30245ea8ca3ea4ace655d7e0e312ac" kindref="member">truth_signal</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a7f30245ea8ca3ea4ace655d7e0e312ac" kindref="member">truth_signal</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a1cd2a916c16c48b17a192fdbfeb11fde" kindref="member">pred_res_edge_score</ref>,<sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a1cd2a916c16c48b17a192fdbfeb11fde" kindref="member">pred_res_edge_score</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a5874cd4d0047388c9aa555d657ee5a48" kindref="member">pred_top_edge_score</ref>,<sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a5874cd4d0047388c9aa555d657ee5a48" kindref="member">pred_top_edge_score</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a7d21595b7cd71c7e40d402163512d1ea" kindref="member">pred_ntops_score</ref>,<sp/><sp/><sp/><sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a7d21595b7cd71c7e40d402163512d1ea" kindref="member">pred_ntops_score</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge__cast_8h_1aab3625363fc92b018cd9994332ca30f1" kindref="member">sum_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a841a6c976642edca13e1bd602ec3b77c" kindref="member">pred_signal_score</ref>,<sp/><sp/><sp/><sp/>&amp;slt<sp/>-&gt;<sp/><ref refid="classtopefficiency_1a841a6c976642edca13e1bd602ec3b77c" kindref="member">pred_signal_score</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classtopefficiency_1a43c273e1b88d0ebe7035ff94c1a3fb15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtopefficiency_1a43c273e1b88d0ebe7035ff94c1a3fb15" kindref="member">topefficiency::selection</ref>(<ref refid="classevent__template" kindref="compound">event_template</ref>*<sp/><ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classtopefficiency_1ab34bde037c5ee04949cb645c20c7e774" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtopefficiency_1ab34bde037c5ee04949cb645c20c7e774" kindref="member">topefficiency::iters</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984" kindref="member">end</ref><sp/>-<sp/>start)/step;<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" kindref="member">topefficiency::region</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt_p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta_p){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_pt<sp/><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ab34bde037c5ee04949cb645c20c7e774" kindref="member">iters</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ae986a7733357768b776b6fd99f0dd450" kindref="member">pt_start</ref><sp/>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a9cde298464e1326ce94b9daef8e38419" kindref="member">pt_end</ref><sp/>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1aed85781dc58f323d470ea3566f35578c" kindref="member">pt_step</ref>);<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_eta<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ab34bde037c5ee04949cb645c20c7e774" kindref="member">iters</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a01a068e8edc251c991d2f9862a0128c8" kindref="member">eta_start</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a47907d01c6c277fccb2e7e9d67963285" kindref="member">eta_end</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a51b7c301dbaf1b1ed62845193c4764a5" kindref="member">eta_step</ref>);<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt_s_<sp/>=<sp/>0,<sp/>pt_e_<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>n_pt;<sp/>++i){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_s_<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ae986a7733357768b776b6fd99f0dd450" kindref="member">pt_start</ref><sp/>+<sp/><sp/><sp/><sp/>i<sp/><sp/>*<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1aed85781dc58f323d470ea3566f35578c" kindref="member">pt_step</ref>;<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_e_<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ae986a7733357768b776b6fd99f0dd450" kindref="member">pt_start</ref><sp/>+<sp/>(i+1)<sp/>*<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1aed85781dc58f323d470ea3566f35578c" kindref="member">pt_step</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pt_s_<sp/>&lt;<sp/>pt_p<sp/>&amp;&amp;<sp/>pt_p<sp/>&lt;<sp/>pt_e_){</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta_s_<sp/>=<sp/>0,<sp/>eta_e_<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>n_eta;<sp/>++i){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta_s_<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a01a068e8edc251c991d2f9862a0128c8" kindref="member">eta_start</ref><sp/>+<sp/><sp/><sp/><sp/>i<sp/><sp/>*<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a51b7c301dbaf1b1ed62845193c4764a5" kindref="member">eta_step</ref>;<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta_e_<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a01a068e8edc251c991d2f9862a0128c8" kindref="member">eta_start</ref><sp/>+<sp/>(i+1)<sp/>*<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a51b7c301dbaf1b1ed62845193c4764a5" kindref="member">eta_step</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eta_s_<sp/>&lt;<sp/>eta_p<sp/>&amp;&amp;<sp/>eta_p<sp/>&lt;<sp/>eta_e_){</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>key<sp/>+=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" kindref="member">to_string</ref>(pt_s_,<sp/>0)<sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>$pt_{top}$<sp/>&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" kindref="member">to_string</ref>(pt_e_,<sp/>0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>key<sp/>+=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" kindref="member">to_string</ref>(eta_s_,<sp/>1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>|$\\eta_{top}$|<sp/>&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" kindref="member">to_string</ref>(eta_e_,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classtopefficiency_1a86be8160dfeebf354752374ab5f4c83f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classtopefficiency_1a86be8160dfeebf354752374ab5f4c83f" kindref="member">topefficiency::decaymode</ref>(std::vector&lt;top*&gt;<sp/>ev_tops){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>int&gt;<sp/>decay_mode;<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>ev_tops.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decay_mode[(ev_tops[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>-&gt;<sp/>n_leps)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>int&gt;::iterator<sp/>itx;<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itx<sp/>=<sp/>decay_mode.begin();<sp/>itx<sp/>!=<sp/>decay_mode.end();<sp/>++itx){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>itx<sp/>-&gt;<sp/>second;<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>+=<sp/>itx<sp/>-&gt;<sp/>first;}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>;<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" kindref="member">topefficiency::strategy</ref>(<ref refid="classevent__template" kindref="compound">event_template</ref>*<sp/><ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgnn__event" kindref="compound">gnn_event</ref>*<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>=<sp/>(<ref refid="classgnn__event" kindref="compound">gnn_event</ref>*)<ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>;<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref><sp/>=<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/><ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>;<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>Truth<sp/>Section<sp/>----------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>bool&gt;<sp/>t_top_map;<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;top*&gt;<sp/>truth_tops<sp/>=<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>t_tops;<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>decay_region_t<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a86be8160dfeebf354752374ab5f4c83f" kindref="member">decaymode</ref>(truth_tops);<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>truth_tops.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtop" kindref="compound">top</ref>*<sp/>top_<sp/>=<sp/>truth_tops[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>=<sp/>top_<sp/>-&gt;<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>/<sp/>1000;<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" kindref="member">region</ref>(top_<sp/>-&gt;<sp/>pt<sp/>/<sp/>1000,<sp/>std::abs(top_<sp/>-&gt;<sp/>eta));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1afd8de69a4ac273da76768d645dc03dd8" kindref="member">t_topmass</ref>[key][<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>].push_back(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_top_map[top_<sp/>-&gt;<sp/><ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a095520fd92e44698845aeb4f4a5c940b" kindref="member">t_nodes</ref>[<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>][<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref>]<sp/>=<sp/>top_<sp/>-&gt;<sp/>n_nodes;<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a4c2c1accd54cc6aeedfd4685ed49644c" kindref="member">t_decay_region</ref>[decay_region_t][<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>].push_back(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref>);<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1aabe9231cc1904140d1874f8b1aa8b961" kindref="member">n_tru_tops</ref>[<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>]<sp/>=<sp/>t_top_map.size();<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;zprime*&gt;<sp/>truth_zprime<sp/>=<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>t_zprime;<sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>truth_zprime.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezprime" kindref="compound">zprime</ref>*<sp/>zp_<sp/>=<sp/>truth_zprime[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" kindref="member">region</ref>(zp_<sp/>-&gt;<sp/>pt<sp/>/<sp/>1000,<sp/>std::abs(zp_<sp/>-&gt;<sp/>eta));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a8d1a20038a9fcbaa833919dfa66ccea2" kindref="member">t_zmass</ref>[key][<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>].push_back(zp_<sp/>-&gt;<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>/<sp/>1000);<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------<sp/>Reconstructed<sp/>Section<sp/>-------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;zprime*&gt;<sp/>reco_zprime<sp/>=<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>r_zprime;<sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>reco_zprime.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezprime" kindref="compound">zprime</ref>*<sp/>zp_<sp/>=<sp/>reco_zprime[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" kindref="member">region</ref>(zp_<sp/>-&gt;<sp/>pt<sp/>/<sp/>1000,<sp/>std::abs(zp_<sp/>-&gt;<sp/>eta));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1afed56da37aaca5606aebd1041722042c" kindref="member">p_zmass</ref>[key][<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>].push_back(zp_<sp/>-&gt;<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>/<sp/>1000);<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a7c4f458a2c1fbed8a3cc843a0874b67e" kindref="member">prob_zprime</ref>[key][<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>].push_back(zp_<sp/>-&gt;<sp/>av_score);<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;top*&gt;<sp/>reco_tops<sp/>=<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>r_tops;<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>decay_region_p<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a86be8160dfeebf354752374ab5f4c83f" kindref="member">decaymode</ref>(reco_tops);<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>reco_tops.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtop" kindref="compound">top</ref>*<sp/>top_<sp/>=<sp/>reco_tops[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>=<sp/>top_<sp/>-&gt;<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref><sp/>/<sp/>1000;<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1aae4a7f46ed0d168dd12f6ab5e9074a76" kindref="member">region</ref>(top_<sp/>-&gt;<sp/>pt<sp/>/<sp/>1000,<sp/>std::abs(top_<sp/>-&gt;<sp/>eta));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a807f5935319eba81c984b04876b9e363" kindref="member">p_topmass</ref>[key][<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>].push_back(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1afc023848967b4c638f96cfaf15f1d8ac" kindref="member">prob_tops</ref>[key][<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>].push_back(top_<sp/>-&gt;<sp/>av_score);<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ae79b252f9ab585465e61d1677152eeeb" kindref="member">p_nodes</ref>[<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>][<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref>]<sp/>=<sp/>top_<sp/>-&gt;<sp/>n_nodes;<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a34fffdf1c2559749fbbbdcb63caadef6" kindref="member">p_decay_region</ref>[decay_region_p][<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>].push_back(<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f" kindref="member">mass</ref>);<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------<sp/>Efficiency<sp/>Reconstruction<sp/>-------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s(0);<sp/>s<sp/>&lt;=<sp/>int(1.0/</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a0b30c57878e08fb36ef2406bd9c82d25" kindref="member">score_step</ref>);<sp/>++s){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perf<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reco<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sc<sp/>=<sp/>s*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a0b30c57878e08fb36ef2406bd9c82d25" kindref="member">score_step</ref>;<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>reco_tops.size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtop" kindref="compound">top</ref>*<sp/>top_<sp/>=<sp/>reco_tops[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>top_<sp/>-&gt;<sp/><ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>;<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_<sp/>-&gt;<sp/>av_score<sp/>&lt;=<sp/>sc){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++reco;<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t_top_map.count(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_top_map[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}<sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>double<sp/>counting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_top_map[id]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++perf;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ac2c9b198235e45a6d139ddeb8d72c55f" kindref="member">n_perfect_tops</ref>[<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>][sc]<sp/>=<sp/>perf;<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ad44d0e33df33b16759179b4cc29e44ff" kindref="member">n_pred_tops</ref>[<ref refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" kindref="member">hash</ref>][sc]<sp/><sp/><sp/><sp/>=<sp/>reco;<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>bool&gt;::iterator<sp/>ib<sp/>=<sp/>t_top_map.begin();<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>ib<sp/>!=<sp/>t_top_map.end();<sp/>++ib){ib<sp/>-&gt;<sp/>second<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a8b84f23c91ca598d48a5613217356d74" kindref="member">truth_top_edge</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>t_edge_top;<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a5874cd4d0047388c9aa555d657ee5a48" kindref="member">pred_top_edge_score</ref><sp/>=<sp/>{<ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>edge_top_scores};<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1ae8501f5c5b8349cb6ed601baae388fd4" kindref="member">truth_res_edge</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>t_edge_res;<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a1cd2a916c16c48b17a192fdbfeb11fde" kindref="member">pred_res_edge_score</ref><sp/>=<sp/>{<ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>edge_res_scores};<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a7f30245ea8ca3ea4ace655d7e0e312ac" kindref="member">truth_signal</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::vector&lt;int&gt;({<ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>t_signal});<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a841a6c976642edca13e1bd602ec3b77c" kindref="member">pred_signal_score</ref><sp/><sp/><sp/>=<sp/>{<ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>signal_scores};<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a2d6cb787d1b293127247ebafd627c1ee" kindref="member">truth_ntops</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::vector&lt;int&gt;({<ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>t_ntops});<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtopefficiency_1a7d21595b7cd71c7e40d402163512d1ea" kindref="member">pred_ntops_score</ref><sp/><sp/><sp/><sp/>=<sp/>{<ref refid="namespacetest__normalization_1aecbcdd1778c32c7066b6264d4a03e71c" kindref="member">evn</ref><sp/>-&gt;<sp/>ntops_scores};<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="selections/performance/topefficiency/topefficiency.cxx"/>
  </compounddef>
</doxygen>
