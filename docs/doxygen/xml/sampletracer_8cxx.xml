<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="sampletracer_8cxx" kind="file" language="C++">
    <compoundname>sampletracer.cxx</compoundname>
    <includes refid="sampletracer_8h" local="no">generators/sampletracer.h</includes>
    <incdepgraph>
      <node id="2">
        <label>generators/sampletracer.h</label>
        <link refid="sampletracer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>c10/core/DeviceType.h</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="28">
        <label>TTreeReader.h</label>
      </node>
      <node id="37">
        <label>templates/event_template.h</label>
        <link refid="event__template_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>structs/element.h</label>
        <link refid="element_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>tools/vector_cast.h</label>
        <link refid="vector__cast_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>TTreeReaderArray.h</label>
      </node>
      <node id="17">
        <label>cstdint</label>
      </node>
      <node id="24">
        <label>templates/particle_template.h</label>
        <link refid="particle__template_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>templates/selection_template.h</label>
        <link refid="selection__template_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>structs/folds.h</label>
        <link refid="folds_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>cmath</label>
      </node>
      <node id="32">
        <label>structs/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="43">
        <label>torch/all.h</label>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="38">
        <label>structs/event.h</label>
        <link refid="modules_2structs_2include_2structs_2event_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>structs/settings.h</label>
        <link refid="settings_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>rapidjson/document.h</label>
      </node>
      <node id="41">
        <label>pyc/pyc.h</label>
        <link refid="pyc_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>structs/meta.h</label>
        <link refid="structs_2include_2structs_2meta_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>templates/graph_template.h</label>
        <link refid="graph__template_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>random</label>
      </node>
      <node id="39">
        <label>tools/tensor_cast.h</label>
        <link refid="tensor__cast_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>tuple</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="15">
        <label>notification/notification.h</label>
        <link refid="notification_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>TFile.h</label>
      </node>
      <node id="34">
        <label>sstream</label>
      </node>
      <node id="25">
        <label>structs/particles.h</label>
        <link refid="modules_2structs_2include_2structs_2particles_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>tools/tools.h</label>
        <link refid="tools_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>container/container.h</label>
        <link refid="container_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>generators/dataloader.h</label>
        <link refid="dataloader_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>tools/merge_cast.h</label>
        <link refid="merge__cast_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>cstdlib</label>
      </node>
      <node id="33">
        <label>torch/torch.h</label>
      </node>
      <node id="22">
        <label>TH1F.h</label>
      </node>
      <node id="21">
        <label>TLeaf.h</label>
      </node>
      <node id="1">
        <label>sampletracer.cxx</label>
        <link refid="sampletracer_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="31">
        <label>structs/base.h</label>
        <link refid="modules_2structs_2include_2structs_2base_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>meta/meta.h</label>
        <link refid="meta_2include_2meta_2meta_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>mutex</label>
      </node>
      <node id="20">
        <label>TBranch.h</label>
      </node>
      <node id="3">
        <label>thread</label>
      </node>
      <node id="12">
        <label>structs/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>TTree.h</label>
      </node>
      <node id="49">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implementation of the sampletracer class for parallel data processing. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the implementation of the sampletracer class, which provides functionality for concurrent processing of samples using multithreading. It handles task distribution, progress monitoring, and resource cleanup. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/>sampletracer.cxx</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>the<sp/>sampletracer<sp/>class<sp/>for<sp/>parallel<sp/>data<sp/>processing.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>sampletracer<sp/>class,<sp/>which<sp/>provides</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>functionality<sp/>for<sp/>concurrent<sp/>processing<sp/>of<sp/>samples<sp/>using<sp/>multithreading.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>It<sp/>handles<sp/>task<sp/>distribution,<sp/>progress<sp/>monitoring,<sp/>and<sp/>resource<sp/>cleanup.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sampletracer_8h" kindref="compound">generators/sampletracer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Constructor<sp/>for<sp/>the<sp/>sampletracer<sp/>class.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Initializes<sp/>a<sp/>new<sp/>sampletracer<sp/>instance<sp/>with<sp/>default<sp/>settings.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Sets<sp/>up<sp/>initial<sp/>state<sp/>for<sp/>containers<sp/>and<sp/>flags.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classsampletracer_1a201b75f9a979b56dcc27de04c513410b" refkind="member"><highlight class="normal"><ref refid="classsampletracer_1a201b75f9a979b56dcc27de04c513410b" kindref="member">sampletracer::sampletracer</ref>(){}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Destructor<sp/>for<sp/>the<sp/>sampletracer<sp/>class.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Cleans<sp/>up<sp/>resources<sp/>used<sp/>by<sp/>the<sp/>sampletracer<sp/>instance.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classsampletracer_1a1f2af1681ab2ded3d00d51f85a054aa1" refkind="member"><highlight class="normal"><ref refid="classsampletracer_1a1f2af1681ab2ded3d00d51f85a054aa1" kindref="member">sampletracer::~sampletracer</ref>(){}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Sets<sp/>the<sp/>execution<sp/>mode<sp/>to<sp/>silent<sp/>(no<sp/>progress<sp/>output).</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>When<sp/>called,<sp/>this<sp/>method<sp/>configures<sp/>the<sp/>sampletracer<sp/>to<sp/>run<sp/>without</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>displaying<sp/>progress<sp/>information<sp/>during<sp/>execution.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sampletracer::silent(){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>shush<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Sets<sp/>the<sp/>execution<sp/>mode<sp/>to<sp/>verbose<sp/>(with<sp/>progress<sp/>output).</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>When<sp/>called,<sp/>this<sp/>method<sp/>configures<sp/>the<sp/>sampletracer<sp/>to<sp/>display</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>progress<sp/>information<sp/>during<sp/>execution.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sampletracer::verbose(){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>shush<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Sets<sp/>the<sp/>output<sp/>path<sp/>for<sp/>the<sp/>processed<sp/>data.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>String<sp/>containing<sp/>the<sp/>directory<sp/>path.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>Configures<sp/>the<sp/>directory<sp/>where<sp/>the<sp/>output<sp/>files<sp/>will<sp/>be<sp/>saved.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sampletracer::set_output_path(std::string<sp/><ref refid="namespacechildrenkinematics_1_1figures_1a4b217acaa3fe7d5c60c04978cbf782dc" kindref="member">path</ref>){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classsampletracer_1a010bfac572ee9efbb7c571798084da46" kindref="member">output_path</ref><sp/>=<sp/><ref refid="namespacechildrenkinematics_1_1figures_1a4b217acaa3fe7d5c60c04978cbf782dc" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classsampletracer_1aed400d02ddf5095d42f18ee4be8e58ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsampletracer_1aed400d02ddf5095d42f18ee4be8e58ca" kindref="member">sampletracer::add_meta_data</ref>(<ref refid="classmeta" kindref="compound">meta</ref>*<sp/>meta_,<sp/>std::string<sp/>filename){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.count(filename)){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container[filename].add_meta_data(meta_,<sp/>filename);<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classsampletracer_1a46fa87d13e0137456aac081c52a015e2" refkind="member"><highlight class="normal"><ref refid="classmeta" kindref="compound">meta</ref>*<sp/><ref refid="classsampletracer_1a46fa87d13e0137456aac081c52a015e2" kindref="member">sampletracer::get_meta_data</ref>(std::string<sp/>filename){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.count(filename)){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container[filename].get_meta_data();<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classsampletracer_1ad7d52f2a227616505a89dd2ff3f9c843" refkind="member"><highlight class="normal">std::vector&lt;event_template*&gt;<sp/><ref refid="classsampletracer_1ad7d52f2a227616505a89dd2ff3f9c843" kindref="member">sampletracer::get_events</ref>(std::string<sp/><ref refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" kindref="member">label</ref>){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;event_template*&gt;<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>container&gt;::iterator<sp/>itr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.begin();<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.end();<sp/>++itr){itr<sp/>-&gt;<sp/>second.get_events(&amp;<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/><ref refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" kindref="member">label</ref>);}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classsampletracer_1a144bc68d55ea31573b23e47a0e4954c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsampletracer_1a144bc68d55ea31573b23e47a0e4954c4" kindref="member">sampletracer::add_event</ref>(<ref refid="classevent__template" kindref="compound">event_template</ref>*<sp/><ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>,<sp/>std::string<sp/><ref refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" kindref="member">label</ref>){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container[<ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref><sp/>-&gt;<sp/>filename].add_event_template(<ref refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" kindref="member">ev</ref>,<sp/><ref refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" kindref="member">label</ref>);<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classsampletracer_1ad73efb019d62fdf2b9acf9de1653ac16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsampletracer_1ad73efb019d62fdf2b9acf9de1653ac16" kindref="member">sampletracer::add_graph</ref>(<ref refid="classgraph__template" kindref="compound">graph_template</ref>*<sp/><ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref>,<sp/>std::string<sp/><ref refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" kindref="member">label</ref>){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container[<ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref><sp/>-&gt;<sp/>filename].add_graph_template(<ref refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" kindref="member">gr</ref>,<sp/><ref refid="namespacemain_1aced2f0e5b178381f9f0a0bf045d8b11d" kindref="member">label</ref>);<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classsampletracer_1ad026b22665f9dc62484a014b1b66106c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsampletracer_1ad026b22665f9dc62484a014b1b66106c" kindref="member">sampletracer::add_selection</ref>(<ref refid="classselection__template" kindref="compound">selection_template</ref>*<sp/><ref refid="namespacemain_1a37e50d3a642b605bc387ae3703d9730b" kindref="member">sel</ref>){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container[<ref refid="namespacemain_1a37e50d3a642b605bc387ae3703d9730b" kindref="member">sel</ref><sp/>-&gt;<sp/>filename].add_selection_template(<ref refid="namespacemain_1a37e50d3a642b605bc387ae3703d9730b" kindref="member">sel</ref>);<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Compiles<sp/>objects<sp/>concurrently<sp/>using<sp/>multiple<sp/>threads.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@param<sp/>threads<sp/>Number<sp/>of<sp/>concurrent<sp/>threads<sp/>to<sp/>use<sp/>for<sp/>processing.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>main<sp/>processing<sp/>method<sp/>that<sp/>distributes<sp/>tasks<sp/>across<sp/>multiple<sp/>threads,</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>monitors<sp/>their<sp/>progress,<sp/>and<sp/>ensures<sp/>proper<sp/>cleanup<sp/>of<sp/>resources<sp/>upon<sp/>completion.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>It<sp/>uses<sp/>lambda<sp/>functions<sp/>for<sp/>task<sp/>execution<sp/>and<sp/>progress<sp/>monitoring.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classsampletracer_1a30d25d5a298b3c5698aee99ede11ce79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsampletracer_1a30d25d5a298b3c5698aee99ede11ce79" kindref="member">sampletracer::compile_objects</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1a80a24f910858581b24642a9a814be13d" kindref="member">threads</ref>){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lambda<sp/>function<sp/>for<sp/>task<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lamb<sp/>=<sp/>[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/><ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a2db95e8e1a9267b7a1188556b2013b33" kindref="member">l</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadidx,<sp/><ref refid="classcontainer" kindref="compound">container</ref>*<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>){<ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref><sp/>-&gt;<sp/>compile(<ref refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a2db95e8e1a9267b7a1188556b2013b33" kindref="member">l</ref>,<sp/>threadidx);};<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lambda<sp/>function<sp/>for<sp/>cleanup<sp/>of<sp/>progress<sp/>monitoring<sp/>resources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" kindref="member">flush</ref><sp/>=<sp/>[](std::vector&lt;std::string*&gt;*<sp/>inpt){</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>inpt<sp/>-&gt;<sp/>size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(*inpt)[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inpt<sp/>-&gt;<sp/>clear();<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>progress<sp/>tracking<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>progres(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.size(),<sp/>0);<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>handles(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.size(),<sp/>0);<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string*&gt;<sp/>titles_(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.size(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::thread*&gt;<sp/>threads_(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.size(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>progress<sp/>titles<sp/>and<sp/>configure<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>container&gt;::iterator<sp/>itr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.begin();<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/>itr<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.end();<sp/>++itr,<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progres[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>=<sp/>itr<sp/>-&gt;<sp/>second.len();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>-&gt;<sp/>second.output_path<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classsampletracer_1a010bfac572ee9efbb7c571798084da46" kindref="member">output_path</ref>;<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>vec<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" kindref="member">split</ref>(itr<sp/>-&gt;<sp/>first,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>titles_[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::string(vec[vec.size()-1]);<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>there&apos;s<sp/>any<sp/>work<sp/>to<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="classtools_1a7b784121d8b368a64995feddc7083469" kindref="member">tools::sum</ref>(&amp;progres)){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" kindref="member">flush</ref>(&amp;titles_);<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>progress<sp/>monitoring<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread*<sp/>thr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>shush){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::thread(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>progressbar3,<sp/>&amp;handles,<sp/>&amp;progres,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" kindref="member">flush</ref>(&amp;titles_);<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{thr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::thread(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>progressbar3,<sp/>&amp;handles,<sp/>&amp;progres,<sp/>&amp;titles_);}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Distribute<sp/>tasks<sp/>across<sp/>available<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tidx<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a6a992d5529f459a44fee58c733255e86" kindref="member">index</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>itr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.begin();<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.end();<sp/>++itr,<sp/>++<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a6a992d5529f459a44fee58c733255e86" kindref="member">index</ref>,<sp/>++tidx){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threads_[<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a6a992d5529f459a44fee58c733255e86" kindref="member">index</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::thread(lamb,<sp/>&amp;handles[<ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a6a992d5529f459a44fee58c733255e86" kindref="member">index</ref>],<sp/><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28a6a992d5529f459a44fee58c733255e86" kindref="member">index</ref>,<sp/>&amp;itr<sp/>-&gt;<sp/>second);<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tidx<sp/>&gt;<sp/><ref refid="namespacemain_1a80a24f910858581b24642a9a814be13d" kindref="member">threads</ref>-1){tidx<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>running(&amp;threads_,<sp/>&amp;handles,<sp/>&amp;progres);}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>all<sp/>threads<sp/>to<sp/>complete<sp/>and<sp/>clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>monitor(&amp;threads_);<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>thr<sp/>-&gt;<sp/>join();<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>thr;<sp/>thr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="148"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Monitors<sp/>active<sp/>threads<sp/>and<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>completed<sp/>threads.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>@param<sp/>threads_<sp/>Pointer<sp/>to<sp/>vector<sp/>of<sp/>thread<sp/>pointers.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>@param<sp/>handles<sp/>Pointer<sp/>to<sp/>vector<sp/>of<sp/>handle<sp/>values.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@param<sp/>progres<sp/>Pointer<sp/>to<sp/>vector<sp/>of<sp/>progress<sp/>values.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>@return<sp/>Count<sp/>of<sp/>completed<sp/>threads.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>This<sp/>helper<sp/>method<sp/>checks<sp/>which<sp/>threads<sp/>have<sp/>completed<sp/>their<sp/>tasks,</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>joins<sp/>them<sp/>to<sp/>reclaim<sp/>resources,<sp/>and<sp/>counts<sp/>how<sp/>many<sp/>slots<sp/>are<sp/>available</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>for<sp/>new<sp/>tasks.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sampletracer::running(std::vector&lt;std::thread*&gt;*<sp/>threads_,<sp/>std::vector&lt;size_t&gt;*<sp/>handles,<sp/>std::vector&lt;size_t&gt;*<sp/>progres){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>running<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>threads_<sp/>-&gt;<sp/>size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::thread*<sp/>thr<sp/>=<sp/>(*threads_)[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!thr){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*handles)[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>&lt;<sp/>(*progres)[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]){running<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{thr<sp/>-&gt;<sp/>join();<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>thr;<sp/>(*threads_)[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>running;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Waits<sp/>for<sp/>all<sp/>threads<sp/>to<sp/>complete<sp/>and<sp/>cleans<sp/>up<sp/>resources.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>@param<sp/>threads_<sp/>Pointer<sp/>to<sp/>vector<sp/>of<sp/>thread<sp/>pointers.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>This<sp/>helper<sp/>method<sp/>ensures<sp/>that<sp/>all<sp/>active<sp/>threads<sp/>complete<sp/>their<sp/>execution</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>before<sp/>the<sp/>program<sp/>proceeds<sp/>further.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sampletracer::monitor(std::vector&lt;std::thread*&gt;*<sp/>threads_){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/>threads_<sp/>-&gt;<sp/>size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::thread*<sp/>thr<sp/>=<sp/>(*threads_)[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>];<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!thr){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thr<sp/>-&gt;<sp/>join();<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>thr;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*threads_)[<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classsampletracer_1afd65d3dcb97d2465d210acec974c21b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsampletracer_1afd65d3dcb97d2465d210acec974c21b6" kindref="member">sampletracer::populate_dataloader</ref>(<ref refid="classdataloader" kindref="compound">dataloader</ref>*<sp/>dl){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>container&gt;::iterator<sp/>itr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.begin();<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.end();<sp/>++itr){itr<sp/>-&gt;<sp/>second.populate_dataloader(dl);}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classsampletracer_1abcfa2a59affdbc7c6feade80f1236ec6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsampletracer_1abcfa2a59affdbc7c6feade80f1236ec6" kindref="member">sampletracer::fill_selections</ref>(std::map&lt;std::string,<sp/>selection_template*&gt;*<sp/>inpt){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>container&gt;::iterator<sp/>itr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.begin();<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/>root_container.end();<sp/>++itr){itr<sp/>-&gt;<sp/>second.fill_selections(inpt);}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="modules/sampletracer/cxx/sampletracer.cxx"/>
  </compounddef>
</doxygen>
