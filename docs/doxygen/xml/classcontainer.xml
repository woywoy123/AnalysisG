<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcontainer" kind="class" language="C++" prot="public">
    <compoundname>container</compoundname>
    <basecompoundref refid="classtools" prot="public" virt="non-virtual">tools</basecompoundref>
    <includes refid="container_8h" local="no">container.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classcontainer_1a7f7bd0847e2ffddb2552af3797adbd07" prot="public" static="no" mutable="no">
        <type><ref refid="classmeta" kindref="compound">meta</ref> *</type>
        <definition>meta* container::meta_data</definition>
        <argsstring></argsstring>
        <name>meta_data</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="56" column="21" bodyfile="modules/container/include/container/container.h" bodystart="56" bodyend="-1"/>
        <referencedby refid="classcontainer_1a73f41aa484224cd493a7f5a60edb9f8c" compoundref="container_8cxx" startline="45" endline="50">add_event_template</referencedby>
        <referencedby refid="classcontainer_1afbc7149d2b63dfba5c5be2d50c12566a" compoundref="container_8cxx" startline="52" endline="57">add_graph_template</referencedby>
        <referencedby refid="classcontainer_1ac41f130224d7233f6967fd27028b5206" compoundref="container_8cxx" startline="30" endline="33">add_meta_data</referencedby>
        <referencedby refid="classcontainer_1a1ab769bed7a69b55afcc814ad9cae848" compoundref="container_8cxx" startline="59" endline="63">add_selection_template</referencedby>
        <referencedby refid="classcontainer_1a2f036c9c52b38b6fd462a2a72f553c41" compoundref="container_8cxx" startline="65" endline="133">compile</referencedby>
        <referencedby refid="classcontainer_1a42cbace7a1b363d2d29eb14d0fcb1dd4" compoundref="container_8cxx" startline="35" endline="35">get_meta_data</referencedby>
        <referencedby refid="classcontainer_1a6511207443e6f97ca31eb01c0dbc413b" compoundref="container_8cxx" startline="5" endline="19">~container</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcontainer_1a04710db8932470f02b039a5a2bf3dc2f" prot="public" static="no" mutable="no">
        <type>std::string *</type>
        <definition>std::string* container::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="57" column="21" bodyfile="modules/container/include/container/container.h" bodystart="57" bodyend="-1"/>
        <referencedby refid="classcontainer_1ac41f130224d7233f6967fd27028b5206" compoundref="container_8cxx" startline="30" endline="33">add_meta_data</referencedby>
        <referencedby refid="classcontainer_1a2f036c9c52b38b6fd462a2a72f553c41" compoundref="container_8cxx" startline="65" endline="133">compile</referencedby>
        <referencedby refid="classcontainer_1a6511207443e6f97ca31eb01c0dbc413b" compoundref="container_8cxx" startline="5" endline="19">~container</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcontainer_1a09c5104912276c015f70df114195cbf3" prot="public" static="no" mutable="no">
        <type>std::string *</type>
        <definition>std::string* container::output_path</definition>
        <argsstring></argsstring>
        <name>output_path</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="58" column="21" bodyfile="modules/container/include/container/container.h" bodystart="58" bodyend="-1"/>
        <referencedby refid="classcontainer_1a2f036c9c52b38b6fd462a2a72f553c41" compoundref="container_8cxx" startline="65" endline="133">compile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcontainer_1aa51c92f6a9b5e30a1013539f769c2389" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string container::label</definition>
        <argsstring></argsstring>
        <name>label</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="59" column="25" bodyfile="modules/container/include/container/container.h" bodystart="59" bodyend="-1"/>
        <referencedby refid="classcontainer_1a73f41aa484224cd493a7f5a60edb9f8c" compoundref="container_8cxx" startline="45" endline="50">add_event_template</referencedby>
        <referencedby refid="classcontainer_1afbc7149d2b63dfba5c5be2d50c12566a" compoundref="container_8cxx" startline="52" endline="57">add_graph_template</referencedby>
        <referencedby refid="classcontainer_1a2f036c9c52b38b6fd462a2a72f553c41" compoundref="container_8cxx" startline="65" endline="133">compile</referencedby>
        <referencedby refid="classcontainer_1ac02321d071171d74b45d4834349d3298" compoundref="container_8cxx" startline="21" endline="28">get_events</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcontainer_1ad04d9afdc2f02a1dddb1867839db52af" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="structentry__t" kindref="compound">entry_t</ref> &gt;</type>
        <definition>std::map&lt;std::string, entry_t&gt; container::random_access</definition>
        <argsstring></argsstring>
        <name>random_access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="61" column="18" bodyfile="modules/container/include/container/container.h" bodystart="61" bodyend="-1"/>
        <referencedby refid="classcontainer_1af3587cb44d10ff140a3ae6d9b5e595d9" compoundref="container_8cxx" startline="37" endline="43">add_entry</referencedby>
        <referencedby refid="classcontainer_1a2f036c9c52b38b6fd462a2a72f553c41" compoundref="container_8cxx" startline="65" endline="133">compile</referencedby>
        <referencedby refid="classcontainer_1ac02321d071171d74b45d4834349d3298" compoundref="container_8cxx" startline="21" endline="28">get_events</referencedby>
        <referencedby refid="classcontainer_1a3c27b88e83f950681dff0efb85459bbc" compoundref="container_8cxx" startline="159" endline="159">len</referencedby>
        <referencedby refid="classcontainer_1a000f2ac1538e3b0beb8470d47ae0086d" compoundref="container_8cxx" startline="149" endline="157">populate_dataloader</referencedby>
        <referencedby refid="classcontainer_1a6511207443e6f97ca31eb01c0dbc413b" compoundref="container_8cxx" startline="5" endline="19">~container</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcontainer_1a8cb1179cf4d6082d661d7f14f5c074a8" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classselection__template" kindref="compound">selection_template</ref> * &gt; *</type>
        <definition>std::map&lt;std::string, selection_template*&gt;* container::merged</definition>
        <argsstring></argsstring>
        <name>merged</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="62" column="18" bodyfile="modules/container/include/container/container.h" bodystart="62" bodyend="-1"/>
        <referencedby refid="classcontainer_1a2f036c9c52b38b6fd462a2a72f553c41" compoundref="container_8cxx" startline="65" endline="133">compile</referencedby>
        <referencedby refid="classcontainer_1a31e832e51d4896e005c8c56b3e87889d" compoundref="container_8cxx" startline="135" endline="147">fill_selections</referencedby>
        <referencedby refid="classcontainer_1a6511207443e6f97ca31eb01c0dbc413b" compoundref="container_8cxx" startline="5" endline="19">~container</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcontainer_1a37b5e9e48cf89b0e0e74c122cdc27027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>container::container</definition>
        <argsstring>()</argsstring>
        <name>container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="39" column="9" bodyfile="modules/container/cxx/container.cxx" bodystart="4" bodyend="4"/>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1a6511207443e6f97ca31eb01c0dbc413b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>container::~container</definition>
        <argsstring>()</argsstring>
        <name>~container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="40" column="9" bodyfile="modules/container/cxx/container.cxx" bodystart="5" bodyend="19"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="classcontainer_1a04710db8932470f02b039a5a2bf3dc2f" compoundref="container_8h" startline="57">filename</references>
        <references refid="classcontainer_1a8cb1179cf4d6082d661d7f14f5c074a8" compoundref="container_8h" startline="62">merged</references>
        <references refid="classcontainer_1a7f7bd0847e2ffddb2552af3797adbd07" compoundref="container_8h" startline="56">meta_data</references>
        <references refid="classcontainer_1ad04d9afdc2f02a1dddb1867839db52af" compoundref="container_8h" startline="61">random_access</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1ac41f130224d7233f6967fd27028b5206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void container::add_meta_data</definition>
        <argsstring>(meta *, std::string)</argsstring>
        <name>add_meta_data</name>
        <param>
          <type><ref refid="classmeta" kindref="compound">meta</ref> *</type>
          <defname>data</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>fname</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="41" column="14" bodyfile="modules/container/cxx/container.cxx" bodystart="30" bodyend="33"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="classcontainer_1a04710db8932470f02b039a5a2bf3dc2f" compoundref="container_8h" startline="57">filename</references>
        <references refid="namespacesample__consistency_1a55a51c365bbd868bf90c826e36c51ad3" compoundref="sample__consistency_8py" startline="103">sample_consistency.fname</references>
        <references refid="classcontainer_1a7f7bd0847e2ffddb2552af3797adbd07" compoundref="container_8h" startline="56">meta_data</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1a42cbace7a1b363d2d29eb14d0fcb1dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmeta" kindref="compound">meta</ref> *</type>
        <definition>meta * container::get_meta_data</definition>
        <argsstring>()</argsstring>
        <name>get_meta_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="42" column="14" bodyfile="modules/container/cxx/container.cxx" bodystart="35" bodyend="35"/>
        <references refid="classcontainer_1a7f7bd0847e2ffddb2552af3797adbd07" compoundref="container_8h" startline="56">meta_data</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1a1ab769bed7a69b55afcc814ad9cae848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool container::add_selection_template</definition>
        <argsstring>(selection_template *)</argsstring>
        <name>add_selection_template</name>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <defname>sel</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="44" column="14" bodyfile="modules/container/cxx/container.cxx" bodystart="59" bodyend="63"/>
        <references refid="classcontainer_1af3587cb44d10ff140a3ae6d9b5e595d9" compoundref="container_8cxx" startline="37" endline="43">add_entry</references>
        <references refid="classcontainer_1a7f7bd0847e2ffddb2552af3797adbd07" compoundref="container_8h" startline="56">meta_data</references>
        <references refid="namespacemain_1a37e50d3a642b605bc387ae3703d9730b" compoundref="analysis_2main_8py" startline="11">main.sel</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1a73f41aa484224cd493a7f5a60edb9f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool container::add_event_template</definition>
        <argsstring>(event_template *, std::string label)</argsstring>
        <name>add_event_template</name>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <param>
          <type>std::string</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="45" column="14" bodyfile="modules/container/cxx/container.cxx" bodystart="45" bodyend="50"/>
        <references refid="classcontainer_1af3587cb44d10ff140a3ae6d9b5e595d9" compoundref="container_8cxx" startline="37" endline="43">add_entry</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="classcontainer_1aa51c92f6a9b5e30a1013539f769c2389" compoundref="container_8h" startline="59">label</references>
        <references refid="classcontainer_1a7f7bd0847e2ffddb2552af3797adbd07" compoundref="container_8h" startline="56">meta_data</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1afbc7149d2b63dfba5c5be2d50c12566a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool container::add_graph_template</definition>
        <argsstring>(graph_template *, std::string label)</argsstring>
        <name>add_graph_template</name>
        <param>
          <type><ref refid="classgraph__template" kindref="compound">graph_template</ref> *</type>
          <defname>gr</defname>
        </param>
        <param>
          <type>std::string</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="46" column="14" bodyfile="modules/container/cxx/container.cxx" bodystart="52" bodyend="57"/>
        <references refid="classcontainer_1af3587cb44d10ff140a3ae6d9b5e595d9" compoundref="container_8cxx" startline="37" endline="43">add_entry</references>
        <references refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" compoundref="test__evaluation_8py" startline="10">test_evaluation.gr</references>
        <references refid="classcontainer_1aa51c92f6a9b5e30a1013539f769c2389" compoundref="container_8h" startline="59">label</references>
        <references refid="classcontainer_1a7f7bd0847e2ffddb2552af3797adbd07" compoundref="container_8h" startline="56">meta_data</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1a31e832e51d4896e005c8c56b3e87889d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void container::fill_selections</definition>
        <argsstring>(std::map&lt; std::string, selection_template * &gt; *inpt)</argsstring>
        <name>fill_selections</name>
        <param>
          <type>std::map&lt; std::string, <ref refid="classselection__template" kindref="compound">selection_template</ref> * &gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="48" column="14" bodyfile="modules/container/cxx/container.cxx" bodystart="135" bodyend="147"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="classcontainer_1a8cb1179cf4d6082d661d7f14f5c074a8" compoundref="container_8h" startline="62">merged</references>
        <references refid="namespacemain_1a80457db91bd1110a9e4a8515839a2a4b" compoundref="metrics_2main_8py" startline="4">main.sl</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1ac02321d071171d74b45d4834349d3298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void container::get_events</definition>
        <argsstring>(std::vector&lt; event_template * &gt; *, std::string label)</argsstring>
        <name>get_events</name>
        <param>
          <type>std::vector&lt; <ref refid="classevent__template" kindref="compound">event_template</ref> * &gt; *</type>
          <defname>out</defname>
        </param>
        <param>
          <type>std::string</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="49" column="14" bodyfile="modules/container/cxx/container.cxx" bodystart="21" bodyend="28"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="classcontainer_1aa51c92f6a9b5e30a1013539f769c2389" compoundref="container_8h" startline="59">label</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="classcontainer_1ad04d9afdc2f02a1dddb1867839db52af" compoundref="container_8h" startline="61">random_access</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1a000f2ac1538e3b0beb8470d47ae0086d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void container::populate_dataloader</definition>
        <argsstring>(dataloader *dl)</argsstring>
        <name>populate_dataloader</name>
        <param>
          <type><ref refid="classdataloader" kindref="compound">dataloader</ref> *</type>
          <declname>dl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="50" column="14" bodyfile="modules/container/cxx/container.cxx" bodystart="149" bodyend="157"/>
        <references refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" compoundref="simply__plot_8py" startline="620">simply_plot.data</references>
        <references refid="classcontainer_1ad04d9afdc2f02a1dddb1867839db52af" compoundref="container_8h" startline="61">random_access</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1a2f036c9c52b38b6fd462a2a72f553c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void container::compile</definition>
        <argsstring>(size_t *len, int threadIdx)</argsstring>
        <name>compile</name>
        <param>
          <type>size_t *</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>threadIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="51" column="14" bodyfile="modules/container/cxx/container.cxx" bodystart="65" bodyend="133"/>
        <references refid="_3name_4_8h_1a288a32e73fa14ea1042eac9569469fab">clone</references>
        <references refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" compoundref="tools_2cxx_2io_8cxx" startline="6" endline="16">tools::create_path</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="classcontainer_1a04710db8932470f02b039a5a2bf3dc2f" compoundref="container_8h" startline="57">filename</references>
        <references refid="namespacesample__consistency_1a55a51c365bbd868bf90c826e36c51ad3" compoundref="sample__consistency_8py" startline="103">sample_consistency.fname</references>
        <references refid="namespacetest__evaluation_1a70e34453939a185a280d3f31145b29af" compoundref="test__evaluation_8py" startline="10">test_evaluation.gr</references>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a2db95e8e1a9267b7a1188556b2013b33">l</references>
        <references refid="classcontainer_1aa51c92f6a9b5e30a1013539f769c2389" compoundref="container_8h" startline="59">label</references>
        <references refid="classcontainer_1a8cb1179cf4d6082d661d7f14f5c074a8" compoundref="container_8h" startline="62">merged</references>
        <references refid="classcontainer_1a7f7bd0847e2ffddb2552af3797adbd07" compoundref="container_8h" startline="56">meta_data</references>
        <references refid="namespacesimply__plot_1ae6b2d2b1db104871d1383019db2999d2" compoundref="simply__plot_8py" startline="573">simply_plot.mtx</references>
        <references refid="_3name_4_8h_1a13693d172ed8717c27f198afdd212a7e">name</references>
        <references refid="classcontainer_1a09c5104912276c015f70df114195cbf3" compoundref="container_8h" startline="58">output_path</references>
        <references refid="namespacetest__generator_1a8b987b8c9dbeb194b22227f6528e4c40" compoundref="test__generator_8py" startline="15">test_generator.PreSelection</references>
        <references refid="namespacemain_1a6f31bffcea51d8f53b5f2b21f2c975df" compoundref="benchmarks_2main_8py" startline="15">main.pth</references>
        <references refid="classcontainer_1ad04d9afdc2f02a1dddb1867839db52af" compoundref="container_8h" startline="61">random_access</references>
        <references refid="namespacemain_1a37e50d3a642b605bc387ae3703d9730b" compoundref="analysis_2main_8py" startline="11">main.sel</references>
        <references refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" compoundref="strings_8cxx" startline="23" endline="36">tools::split</references>
        <references refid="_3event-name_4_8cxx_1ad909c3cfb5bcea8ede732f1c3da64879" compoundref="_3event-name_4_8cxx" startline="7">this</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1a3c27b88e83f950681dff0efb85459bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t container::len</definition>
        <argsstring>()</argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="52" column="16" bodyfile="modules/container/cxx/container.cxx" bodystart="159" bodyend="159"/>
        <references refid="classcontainer_1ad04d9afdc2f02a1dddb1867839db52af" compoundref="container_8h" startline="61">random_access</references>
      </memberdef>
      <memberdef kind="function" id="classcontainer_1af3587cb44d10ff140a3ae6d9b5e595d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structentry__t" kindref="compound">entry_t</ref> *</type>
        <definition>entry_t * container::add_entry</definition>
        <argsstring>(std::string hash)</argsstring>
        <name>add_entry</name>
        <param>
          <type>std::string</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/container/include/container/container.h" line="54" column="17" bodyfile="modules/container/cxx/container.cxx" bodystart="37" bodyend="43"/>
        <references refid="classcontainer_1ad04d9afdc2f02a1dddb1867839db52af" compoundref="container_8h" startline="61">random_access</references>
        <references refid="namespacetest__experimental__mc20_1a7f7159e9d580b1c745290260dc63e0c3" compoundref="test__experimental__mc20_8py" startline="7">test_experimental_mc20.t</references>
        <referencedby refid="classcontainer_1a73f41aa484224cd493a7f5a60edb9f8c" compoundref="container_8cxx" startline="45" endline="50">add_event_template</referencedby>
        <referencedby refid="classcontainer_1afbc7149d2b63dfba5c5be2d50c12566a" compoundref="container_8cxx" startline="52" endline="57">add_graph_template</referencedby>
        <referencedby refid="classcontainer_1a1ab769bed7a69b55afcc814ad9cae848" compoundref="container_8cxx" startline="59" endline="63">add_selection_template</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>container</label>
        <link refid="classcontainer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>cproperty&lt; std::vector&lt; int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>container</label>
        <link refid="classcontainer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>meta_data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>output_path</edgelabel>
          <edgelabel>label</edgelabel>
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>merged</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>random_access</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>meta</label>
        <link refid="classmeta"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>dsid</edgelabel>
          <edgelabel>nFiles</edgelabel>
          <edgelabel>datasetNumber</edgelabel>
          <edgelabel>totalEvents</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>cross_section_nb</edgelabel>
          <edgelabel>completion</edgelabel>
          <edgelabel>cross_section_fb</edgelabel>
          <edgelabel>ecmEnergy</edgelabel>
          <edgelabel>event_index</edgelabel>
          <edgelabel>sum_of_weights</edgelabel>
          <edgelabel>beam_energy</edgelabel>
          <edgelabel>cross_section_pb</edgelabel>
          <edgelabel>genFiltEff</edgelabel>
          <edgelabel>eventNumber</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>isMC</edgelabel>
          <edgelabel>found</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>cproperty&lt; double, graph_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; double, graph_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::map&lt; std::string, meta_t &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; std::string, meta_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>K</label>
      </node>
      <node id="28">
        <label>T</label>
      </node>
      <node id="10">
        <label>cproperty&lt; unsigned int, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; unsigned int, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>cproperty&lt; long, graph_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; long, graph_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>weights_t</label>
        <link refid="structweights__t"/>
        <childnode refid="31" relation="usage">
          <edgelabel>hist_data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>generator</edgelabel>
          <edgelabel>ami_tag</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>std::vector&lt; double &gt;</label>
        <childnode refid="35" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>cproperty&lt; long, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; long, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="28" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>std::vector&lt; selection_template * &gt;</label>
        <childnode refid="21" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="35" relation="template-instance">
          <edgelabel>&lt; selection_template * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>cproperty&lt; std::string, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::string, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::map&lt; std::string, weights_t &gt;</label>
        <childnode refid="30" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; std::string, weights_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>std::vector&lt; graph_t * &gt;</label>
        <childnode refid="46" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="35" relation="template-instance">
          <edgelabel>&lt; graph_t * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>graph_t</label>
        <link refid="structgraph__t"/>
        <childnode refid="47" relation="usage">
          <edgelabel>batched_events</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>graph_name</edgelabel>
          <edgelabel>filename</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>cproperty&lt; double, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; double, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::map&lt; int, std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; int, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>std::map&lt; std::string, selection_template * &gt;</label>
        <childnode refid="21" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; std::string, selection_template * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>cproperty&lt; std::vector&lt; double &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; double &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>cproperty&lt; std::map&lt; int, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::map&lt; int, int &gt;</label>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; int, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>selection_template</label>
        <link refid="classselection__template"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>meta_data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>matched_meta</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>passed_weights</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>index</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>weight</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>cproperty&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>cproperty&lt; T, G &gt;</label>
        <link refid="classcproperty"/>
      </node>
      <node id="41">
        <label>cproperty&lt; std::string, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::string, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>cproperty&lt; std::map&lt; int, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>std::vector&lt; event_template * &gt;</label>
        <childnode refid="56" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="35" relation="template-instance">
          <edgelabel>&lt; event_template * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="43">
        <label>std::map&lt; std::string, entry_t &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; std::string, entry_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>meta_t</label>
        <link refid="structmeta__t"/>
        <childnode refid="25" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::map&lt; std::string, std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; std::string, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>std::vector&lt; graph_template * &gt;</label>
        <childnode refid="49" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="35" relation="template-instance">
          <edgelabel>&lt; graph_template * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="35" relation="template-instance">
          <edgelabel>&lt; std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>std::map&lt; std::string, std::map&lt; std::string, float &gt; &gt;</label>
        <childnode refid="31" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; std::string, std::map&lt; std::string, float &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>std::map&lt; std::string, float &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; std::string, float &gt;</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>entry_t</label>
        <link refid="structentry__t"/>
        <childnode refid="45" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_graph</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_selection</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>cproperty&lt; bool, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; bool, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>event_t</label>
        <link refid="structevent__t"/>
        <childnode refid="5" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>std::vector&lt; long &gt;</label>
        <childnode refid="35" relation="template-instance">
          <edgelabel>&lt; long &gt;</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>cproperty&lt; std::string, graph_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::string, graph_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>event_template</label>
        <link refid="classevent__template"/>
      </node>
      <node id="49">
        <label>graph_template</label>
        <link refid="classgraph__template"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>preselection</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>meta_data</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>index</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>weight</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>cproperty&lt; std::map&lt; std::string, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>cproperty&lt; double, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; double, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>std::map&lt; std::string, int &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="26" relation="template-instance">
          <edgelabel>&lt; std::string, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>cproperty&lt; bool, graph_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; bool, graph_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="5" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::vector&lt; int &gt;</label>
        <childnode refid="35" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>cproperty&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/container/include/container/container.h" line="37" column="1" bodyfile="modules/container/include/container/container.h" bodystart="36" bodyend="63"/>
    <listofallmembers>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>container</scope><name>absolute_path</name></member>
      <member refid="classcontainer_1af3587cb44d10ff140a3ae6d9b5e595d9" prot="public" virt="non-virtual"><scope>container</scope><name>add_entry</name></member>
      <member refid="classcontainer_1a73f41aa484224cd493a7f5a60edb9f8c" prot="public" virt="non-virtual"><scope>container</scope><name>add_event_template</name></member>
      <member refid="classcontainer_1afbc7149d2b63dfba5c5be2d50c12566a" prot="public" virt="non-virtual"><scope>container</scope><name>add_graph_template</name></member>
      <member refid="classcontainer_1ac41f130224d7233f6967fd27028b5206" prot="public" virt="non-virtual"><scope>container</scope><name>add_meta_data</name></member>
      <member refid="classcontainer_1a1ab769bed7a69b55afcc814ad9cae848" prot="public" virt="non-virtual"><scope>container</scope><name>add_selection_template</name></member>
      <member refid="classcontainer_1a2f036c9c52b38b6fd462a2a72f553c41" prot="public" virt="non-virtual"><scope>container</scope><name>compile</name></member>
      <member refid="classcontainer_1a37b5e9e48cf89b0e0e74c122cdc27027" prot="public" virt="non-virtual"><scope>container</scope><name>container</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>container</scope><name>create_path</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>container</scope><name>delete_path</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>container</scope><name>ends_with</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>container</scope><name>extract</name></member>
      <member refid="classcontainer_1a04710db8932470f02b039a5a2bf3dc2f" prot="public" virt="non-virtual"><scope>container</scope><name>filename</name></member>
      <member refid="classcontainer_1a31e832e51d4896e005c8c56b3e87889d" prot="public" virt="non-virtual"><scope>container</scope><name>fill_selections</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>container</scope><name>flush</name></member>
      <member refid="classcontainer_1ac02321d071171d74b45d4834349d3298" prot="public" virt="non-virtual"><scope>container</scope><name>get_events</name></member>
      <member refid="classcontainer_1a42cbace7a1b363d2d29eb14d0fcb1dd4" prot="public" virt="non-virtual"><scope>container</scope><name>get_meta_data</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>container</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>container</scope><name>has_value</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>container</scope><name>is_file</name></member>
      <member refid="classcontainer_1aa51c92f6a9b5e30a1013539f769c2389" prot="public" virt="non-virtual"><scope>container</scope><name>label</name></member>
      <member refid="classcontainer_1a3c27b88e83f950681dff0efb85459bbc" prot="public" virt="non-virtual"><scope>container</scope><name>len</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>container</scope><name>ls</name></member>
      <member refid="classcontainer_1a8cb1179cf4d6082d661d7f14f5c074a8" prot="public" virt="non-virtual"><scope>container</scope><name>merged</name></member>
      <member refid="classcontainer_1a7f7bd0847e2ffddb2552af3797adbd07" prot="public" virt="non-virtual"><scope>container</scope><name>meta_data</name></member>
      <member refid="classcontainer_1a09c5104912276c015f70df114195cbf3" prot="public" virt="non-virtual"><scope>container</scope><name>output_path</name></member>
      <member refid="classcontainer_1a000f2ac1538e3b0beb8470d47ae0086d" prot="public" virt="non-virtual"><scope>container</scope><name>populate_dataloader</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>container</scope><name>put</name></member>
      <member refid="classcontainer_1ad04d9afdc2f02a1dddb1867839db52af" prot="public" virt="non-virtual"><scope>container</scope><name>random_access</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>container</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>container</scope><name>replace</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>container</scope><name>split</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual"><scope>container</scope><name>sum</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>container</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>container</scope><name>to_string</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>container</scope><name>tools</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>container</scope><name>trim</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>container</scope><name>type_name</name></member>
      <member refid="classcontainer_1a6511207443e6f97ca31eb01c0dbc413b" prot="public" virt="non-virtual"><scope>container</scope><name>~container</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>container</scope><name>~tools</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
