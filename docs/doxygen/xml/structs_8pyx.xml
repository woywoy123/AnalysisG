<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structs_8pyx" kind="file" language="C++">
    <compoundname>structs.pyx</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>distutils:<sp/>language=c++</highlight></codeline>
<codeline><highlight class="normal">#<sp/>cython:<sp/>language_level=3</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">cdef<sp/>dict<sp/>elements(basic*<sp/>null,<sp/>data_t*<sp/>data):<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>basic<sp/>vv</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.element(&amp;vv):<sp/>return<sp/>{data.path<sp/>:<sp/>vv}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>{}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>-------------------<sp/>(9.)<sp/>Add<sp/>the<sp/>switch.<sp/>And<sp/>you<sp/>are<sp/>done<sp/>=)<sp/>---------------<sp/>#</highlight></codeline>
<codeline><highlight class="normal">cdef<sp/>dict<sp/>switch_board(data_t*<sp/>data):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vvv_f:<sp/>return<sp/>elements(&lt;vector[vector[float<sp/>]]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vvv_d:<sp/>return<sp/>elements(&lt;vector[vector[double]]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vvv_l:<sp/>return<sp/>elements(&lt;vector[vector[long<sp/><sp/>]]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vvv_i:<sp/>return<sp/>elements(&lt;vector[vector[int<sp/><sp/><sp/>]]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vvv_b:<sp/>return<sp/>elements(&lt;vector[vector[bool<sp/><sp/>]]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vv_f:<sp/><sp/>return<sp/>elements(&lt;vector[float<sp/>]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vv_d:<sp/><sp/>return<sp/>elements(&lt;vector[double]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vv_l:<sp/><sp/>return<sp/>elements(&lt;vector[long<sp/><sp/>]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vv_i:<sp/><sp/>return<sp/>elements(&lt;vector[int<sp/><sp/><sp/>]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vv_b:<sp/><sp/>return<sp/>elements(&lt;vector[bool<sp/><sp/>]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.vv_c:<sp/><sp/>return<sp/>elements(&lt;vector[char<sp/><sp/>]*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.v_f:<sp/><sp/><sp/>return<sp/>elements(&lt;float<sp/>*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.v_d:<sp/><sp/><sp/>return<sp/>elements(&lt;double*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.v_l:<sp/><sp/><sp/>return<sp/>elements(&lt;long<sp/><sp/>*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.v_i:<sp/><sp/><sp/>return<sp/>elements(&lt;int<sp/><sp/><sp/>*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.v_b:<sp/><sp/><sp/>return<sp/>elements(&lt;bool<sp/><sp/>*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.v_c:<sp/><sp/><sp/>return<sp/>elements(&lt;char<sp/><sp/>*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.v_ull:<sp/>return<sp/>elements(&lt;unsigned<sp/>long<sp/>long*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>data.type<sp/>==<sp/>data_enum.v_ui:<sp/><sp/>return<sp/>elements(&lt;unsigned<sp/>int*&gt;(NULL),<sp/>data)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>{}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
    </programlisting>
    <location file="core/structs.pyx"/>
  </compounddef>
</doxygen>
