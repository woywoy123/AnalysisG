<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classselection__template" kind="class" language="C++" prot="public">
    <compoundname>selection_template</compoundname>
    <basecompoundref refid="classtools" prot="public" virt="non-virtual">tools</basecompoundref>
    <derivedcompoundref refid="classchildrenkinematics" prot="public" virt="non-virtual">childrenkinematics</derivedcompoundref>
    <derivedcompoundref refid="classcombinatorial" prot="public" virt="non-virtual">combinatorial</derivedcompoundref>
    <derivedcompoundref refid="classdecaymodes" prot="public" virt="non-virtual">decaymodes</derivedcompoundref>
    <derivedcompoundref refid="classevent" prot="public" virt="non-virtual">event</derivedcompoundref>
    <derivedcompoundref refid="classmatching" prot="public" virt="non-virtual">matching</derivedcompoundref>
    <derivedcompoundref refid="classmet" prot="public" virt="non-virtual">met</derivedcompoundref>
    <derivedcompoundref refid="classregions" prot="public" virt="non-virtual">regions</derivedcompoundref>
    <derivedcompoundref refid="classtopefficiency" prot="public" virt="non-virtual">topefficiency</derivedcompoundref>
    <derivedcompoundref refid="classtopjets" prot="public" virt="non-virtual">topjets</derivedcompoundref>
    <derivedcompoundref refid="classtopkinematics" prot="public" virt="non-virtual">topkinematics</derivedcompoundref>
    <derivedcompoundref refid="classtopmatching" prot="public" virt="non-virtual">topmatching</derivedcompoundref>
    <derivedcompoundref refid="classtoptruthjets" prot="public" virt="non-virtual">toptruthjets</derivedcompoundref>
    <derivedcompoundref refid="classvalidation" prot="public" virt="non-virtual">validation</derivedcompoundref>
    <includes refid="selection__template_8h" local="no">selection_template.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classselection__template_1a57db7d2460788ed52623482bef7a50e5" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::string, <ref refid="classselection__template" kindref="compound">selection_template</ref> &gt;</type>
        <definition>cproperty&lt;std::string, selection_template&gt; selection_template::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="24" column="19" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="24" bodyend="-1"/>
        <referencedby refid="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" compoundref="selection__core_8cxx" startline="47" endline="56">build</referencedby>
        <referencedby refid="classchildrenkinematics_1a7bb6adfbe15ff299d86e5e761946a76c" compoundref="childrenkinematics_8cxx" startline="3" endline="3">childrenkinematics::childrenkinematics</referencedby>
        <referencedby refid="classcombinatorial_1a9d7ef868e8a8010b55c2055f7885cf41" compoundref="combinatorial_8cxx" startline="11" endline="11">combinatorial::combinatorial</referencedby>
        <referencedby refid="classdecaymodes_1a5ae37ae87837dfadfc1080adf81483a1" compoundref="decaymodes_8cxx" startline="3" endline="21">decaymodes::decaymodes</referencedby>
        <referencedby refid="classevent_1a84a06dad1594d2d2a1d8bddff672d0a4" compoundref="selections_2mc16_2event_2event_8cxx" startline="3" endline="3">event::event</referencedby>
        <referencedby refid="classselection__template_1ad0d6fa60bf0da8796a718532c0288d04" compoundref="selection_2cxx_2properties_8cxx" startline="7" endline="9">get_name</referencedby>
        <referencedby refid="classselection__template_1a4e61c1d63afdff7a6428fbf4c6297166" compoundref="selection_2cxx_2properties_8cxx" startline="22" endline="24">get_tree</referencedby>
        <referencedby refid="classmatching_1ace433954604d85a39081fcac31e03084" compoundref="matching_8cxx" startline="3" endline="3">matching::matching</referencedby>
        <referencedby refid="classvalidation_1a5bc9aad76ca75e21e70d5cf4e48c31e4" compoundref="validation_8cxx" startline="20" endline="38">validation::merge</referencedby>
        <referencedby refid="classregions_1aefc0916bc31bfb139b311846a0e33c3a" compoundref="regions_8cxx" startline="10" endline="45">regions::merge</referencedby>
        <referencedby refid="classcombinatorial_1afcb3e3c3c11238a745f3e591162a7ae0" compoundref="combinatorial_8cxx" startline="20" endline="39">combinatorial::merge</referencedby>
        <referencedby refid="classmet_1a8ba06b3d954f59aa8ed0b805d4b5daa5" compoundref="met_8cxx" startline="3" endline="3">met::met</referencedby>
        <referencedby refid="classregions_1a4a0380db42ea24ddd9734890e648103c" compoundref="regions_8cxx" startline="3" endline="3">regions::regions</referencedby>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
        <referencedby refid="classselection__template_1a19244d585754db14326c126a98000899" compoundref="selection_2cxx_2properties_8cxx" startline="3" endline="5">set_name</referencedby>
        <referencedby refid="classmatching_1afbde71106947fe0f714151794c7f6259" compoundref="matching_8cxx" startline="153" endline="159">matching::strategy</referencedby>
        <referencedby refid="classtopefficiency_1a28df214b61ace18c3c6c2f2d9eb7831c" compoundref="topefficiency_8cxx" startline="9" endline="9">topefficiency::topefficiency</referencedby>
        <referencedby refid="classtopjets_1a27ef38e8cfa84e31bc56ccd693137a90" compoundref="topjets_8cxx" startline="3" endline="3">topjets::topjets</referencedby>
        <referencedby refid="classtopkinematics_1a3320ec959eaaa6be147852edf1778d6a" compoundref="mc16_2topkinematics_2topkinematics_8cxx" startline="3" endline="3">topkinematics::topkinematics</referencedby>
        <referencedby refid="classtopmatching_1a421d3a06261ba3962565a52c1680e8f0" compoundref="mc16_2topmatching_2topmatching_8cxx" startline="3" endline="3">topmatching::topmatching</referencedby>
        <referencedby refid="classtoptruthjets_1a78dea88f4910189c8a9b51a80640d2a7" compoundref="toptruthjets_8cxx" startline="3" endline="3">toptruthjets::toptruthjets</referencedby>
        <referencedby refid="classvalidation_1aa4e1748ddaa534cfd26880d5cd2ae7a5" compoundref="validation_8cxx" startline="118" endline="134">validation::update_state</referencedby>
        <referencedby refid="classvalidation_1af7971b5375679ccf457d463cb6b2d8d0" compoundref="validation_8cxx" startline="12" endline="12">validation::validation</referencedby>
        <referencedby refid="classselection__template_1ae5606e994231fae57abe42e4f0ec6202" compoundref="selection__template_8cxx" startline="10" endline="55">write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a67a39632bebd074e7feb638aaedee872" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::string, <ref refid="classselection__template" kindref="compound">selection_template</ref> &gt;</type>
        <definition>cproperty&lt;std::string, selection_template&gt; selection_template::hash</definition>
        <argsstring></argsstring>
        <name>hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="28" column="19" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="classselection__template_1a3009dc4bb45c47d96a5bdc4096bd6870" compoundref="selection__template_8h" startline="163" endline="169">contains</referencedby>
        <referencedby refid="classmatching_1a6a20dfdb8f6fa5a23a6859d869040417" compoundref="mc20__ref_8cxx" startline="4" endline="103">matching::current</referencedby>
        <referencedby refid="classselection__template_1ab760e9d895d74e62a9d4bfe436568a86" compoundref="selection__template_8h" startline="124" endline="135">make_unique</referencedby>
        <referencedby refid="namespacevalidation_1_1helper_1a42b8789b90c32ef7c34ba40c4e600fd2" compoundref="neutrino_2validation_2helper_8py" startline="36" endline="45">validation.helper.MPNuNu</referencedby>
        <referencedby refid="classselection__template_1a0e423716b1439b853d39904998074ecd" compoundref="selection__core_8cxx" startline="38" endline="38">operator==</referencedby>
        <referencedby refid="classcombinatorial_1a4f90aaf04154a0d1ca9d59e1ccb2c54e" compoundref="combinatorial_8cxx" startline="72" endline="136">combinatorial::reconstruction</referencedby>
        <referencedby refid="classmatching_1a7c3eb589ac6ae85490aa698d73fe8b88" compoundref="mc16__ref_8cxx" startline="4" endline="114">matching::reference</referencedby>
        <referencedby refid="classselection__template_1a2c99ad97301a85fc7c7257930d990cfd" compoundref="selection__core_8cxx" startline="84" endline="97">reverse_hash</referencedby>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
        <referencedby refid="classmet_1a54e4795f6e1387cd2aa9e259ef147f3c" compoundref="met_8cxx" startline="16" endline="21">met::strategy</referencedby>
        <referencedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63" compoundref="topefficiency_8cxx" startline="95" endline="176">topefficiency::strategy</referencedby>
        <referencedby refid="classvalidation_1af388ba0e867008a75602581fdc2ed0f3" compoundref="validation_8cxx" startline="136" endline="197">validation::strategy</referencedby>
        <referencedby refid="classcombinatorial_1a5cd8d199d3f8fe6c9f0b8e1c2e2f7bfd" compoundref="combinatorial_8cxx" startline="154" endline="229">combinatorial::strategy</referencedby>
        <referencedby refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" compoundref="selection__template_8h" startline="77" endline="89">sum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a57ff66ff6c5ff5af5e81298faf6bf521" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; std::string, <ref refid="classselection__template" kindref="compound">selection_template</ref> &gt;</type>
        <definition>cproperty&lt;std::string, selection_template&gt; selection_template::tree</definition>
        <argsstring></argsstring>
        <name>tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="32" column="19" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="32" bodyend="-1"/>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
        <referencedby refid="classselection__template_1a67768227c6c6a8e69edd0dc618a70eb9" compoundref="selection__template_8h" startline="55" endline="58">write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a03816f18e6ce9351cd099525862c7c64" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; double, <ref refid="classselection__template" kindref="compound">selection_template</ref> &gt;</type>
        <definition>cproperty&lt;double, selection_template&gt; selection_template::weight</definition>
        <argsstring></argsstring>
        <name>weight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="35" column="19" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" compoundref="selection__core_8cxx" startline="47" endline="56">build</referencedby>
        <referencedby refid="classregions_1aefc0916bc31bfb139b311846a0e33c3a" compoundref="regions_8cxx" startline="10" endline="45">regions::merge</referencedby>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a2e1c4a9239afbfea9cd510b774c9c1fe" prot="public" static="no" mutable="no">
        <type><ref refid="classcproperty" kindref="compound">cproperty</ref>&lt; long, <ref refid="classselection__template" kindref="compound">selection_template</ref> &gt;</type>
        <definition>cproperty&lt;long, selection_template&gt; selection_template::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="39" column="19" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
        <referencedby refid="classselection__template_1acd31f17488bcf97dd8a5f1b3a7da1cdd" compoundref="selection_2cxx_2properties_8cxx" startline="11" endline="16">set_hash</referencedby>
        <referencedby refid="classselection__template_1a74558331b11dd6822a975a32203286ac" compoundref="selection__core_8cxx" startline="99" endline="105">switch_board</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a15113e43e1451e9e65b9f327fcfc7e15" prot="public" static="no" mutable="no">
        <type><ref refid="classmeta" kindref="compound">meta</ref> *</type>
        <definition>meta* selection_template::meta_data</definition>
        <argsstring></argsstring>
        <name>meta_data</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="72" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1ad220a2da4b57303d8a5b162b6733024f" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string selection_template::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="73" column="21" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="73" bodyend="-1"/>
        <referencedby refid="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" compoundref="selection__core_8cxx" startline="47" endline="56">build</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1ae25df218deb859171db9ba802c17eb0b" prot="public" static="no" mutable="no">
        <type><ref refid="structevent__t" kindref="compound">event_t</ref></type>
        <definition>event_t selection_template::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="74" column="17" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="74" bodyend="-1"/>
        <referencedby refid="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" compoundref="selection__core_8cxx" startline="47" endline="56">build</referencedby>
        <referencedby refid="classselection__template_1a2f6cd45079e1fab94a163a38fbe005cd" compoundref="selection_2cxx_2properties_8cxx" startline="18" endline="20">get_hash</referencedby>
        <referencedby refid="classselection__template_1ad0d6fa60bf0da8796a718532c0288d04" compoundref="selection_2cxx_2properties_8cxx" startline="7" endline="9">get_name</referencedby>
        <referencedby refid="classselection__template_1a4e61c1d63afdff7a6428fbf4c6297166" compoundref="selection_2cxx_2properties_8cxx" startline="22" endline="24">get_tree</referencedby>
        <referencedby refid="classselection__template_1ae04fb8767d15273f80c5343e2f73384b" compoundref="selection_2cxx_2properties_8cxx" startline="30" endline="32">get_weight</referencedby>
        <referencedby refid="classsimply__plot_1_1_data_x_1a41f0e58c621248ecb74fbe1deb30cc7e" compoundref="simply__plot_8py" startline="538" endline="544">simply_plot.DataX.hist</referencedby>
        <referencedby refid="classregions_1aefc0916bc31bfb139b311846a0e33c3a" compoundref="regions_8cxx" startline="10" endline="45">regions::merge</referencedby>
        <referencedby refid="classsimply__plot_1_1_data_x_1aaacf4239206d59867e979e047388effe" compoundref="simply__plot_8py" startline="531" endline="532">simply_plot.DataX.num_events</referencedby>
        <referencedby refid="classvalidation_1aa436b348c281a3d676910cf7b7d575eb" compoundref="validation_8cxx" startline="58" endline="116">validation::reconstruction</referencedby>
        <referencedby refid="classcombinatorial_1a4f90aaf04154a0d1ca9d59e1ccb2c54e" compoundref="combinatorial_8cxx" startline="72" endline="136">combinatorial::reconstruction</referencedby>
        <referencedby refid="classselection__template_1acd31f17488bcf97dd8a5f1b3a7da1cdd" compoundref="selection_2cxx_2properties_8cxx" startline="11" endline="16">set_hash</referencedby>
        <referencedby refid="classselection__template_1a8951c34758d3410f9d931b6011c3cca2" compoundref="selection_2cxx_2properties_8cxx" startline="34" endline="36">set_index</referencedby>
        <referencedby refid="classselection__template_1a19244d585754db14326c126a98000899" compoundref="selection_2cxx_2properties_8cxx" startline="3" endline="5">set_name</referencedby>
        <referencedby refid="classselection__template_1aa95e812106c1a933f1b65e82557939d3" compoundref="selection_2cxx_2properties_8cxx" startline="26" endline="28">set_weight</referencedby>
        <referencedby refid="classtopkinematics_1acf450e4907cff9104f1fc70fa04de276" compoundref="mc16_2topkinematics_2topkinematics_8cxx" startline="31" endline="105">topkinematics::strategy</referencedby>
        <referencedby refid="classselection__template_1a74558331b11dd6822a975a32203286ac" compoundref="selection__core_8cxx" startline="99" endline="105">switch_board</referencedby>
        <referencedby refid="classvalidation_1aa4e1748ddaa534cfd26880d5cd2ae7a5" compoundref="validation_8cxx" startline="118" endline="134">validation::update_state</referencedby>
        <referencedby refid="classcombinatorial_1adb51dd4e96b0c4596711f5466571e091" compoundref="combinatorial_8cxx" startline="139" endline="150">combinatorial::update_state</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1ac565e3beb94b557fc947a6f8afebfc4d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int selection_template::threadIdx</definition>
        <argsstring></argsstring>
        <name>threadIdx</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="171" column="13" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1ad472a18c63b8b1d6e41fbe626b13fc40" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, float &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, float&gt; &gt; selection_template::passed_weights</definition>
        <argsstring></argsstring>
        <name>passed_weights</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="172" column="18" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="172" bodyend="-1"/>
        <referencedby refid="classselection__template_1a2c99ad97301a85fc7c7257930d990cfd" compoundref="selection__core_8cxx" startline="84" endline="97">reverse_hash</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a50e7d1939618dcb8b6386f5e7a247e12" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="structmeta__t" kindref="compound">meta_t</ref> &gt;</type>
        <definition>std::map&lt;std::string, meta_t&gt; selection_template::matched_meta</definition>
        <argsstring></argsstring>
        <name>matched_meta</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="173" column="18" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classselection__template_1afbc4bd79c4bb0204ff2ad0b00cbfeac2" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend selection_template::container</definition>
        <argsstring></argsstring>
        <name>container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="176" column="16" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a77788fc010c0b5fa94ddcb487b03fe40" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; long, std::string &gt;</type>
        <definition>std::unordered_map&lt;long, std::string&gt; selection_template::sequence</definition>
        <argsstring></argsstring>
        <name>sequence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="181" column="28" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a8855af385e9a13c33de3c928ae20c7bf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool selection_template::p_bulk_write</definition>
        <argsstring></argsstring>
        <name>p_bulk_write</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="182" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a8ee969d3df52b2d8a41e3d0e538341e1" prot="private" static="no" mutable="no">
        <type><ref refid="structwrite__t" kindref="compound">write_t</ref> *</type>
        <definition>write_t* selection_template::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="184" column="17" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a47eb871f4f8ce341cfaef7e3aae36484" prot="private" static="no" mutable="no">
        <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
        <definition>event_template* selection_template::m_event</definition>
        <argsstring></argsstring>
        <name>m_event</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="185" column="24" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classselection__template_1a62efc3d0e21f6af95ebbb3f4d54a5b80" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::vector&lt; <ref refid="classparticle__template" kindref="compound">particle_template</ref> * &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::vector&lt;particle_template*&gt; &gt; selection_template::garbage</definition>
        <argsstring></argsstring>
        <name>garbage</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="186" column="18" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>selection_template::selection_template</definition>
        <argsstring>()</argsstring>
        <name>selection_template</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="21" column="9" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="4" bodyend="24"/>
        <references refid="classselection__template_1a2f6cd45079e1fab94a163a38fbe005cd" compoundref="selection_2cxx_2properties_8cxx" startline="18" endline="20">get_hash</references>
        <references refid="classselection__template_1ad0d6fa60bf0da8796a718532c0288d04" compoundref="selection_2cxx_2properties_8cxx" startline="7" endline="9">get_name</references>
        <references refid="classselection__template_1a4e61c1d63afdff7a6428fbf4c6297166" compoundref="selection_2cxx_2properties_8cxx" startline="22" endline="24">get_tree</references>
        <references refid="classselection__template_1ae04fb8767d15273f80c5343e2f73384b" compoundref="selection_2cxx_2properties_8cxx" startline="30" endline="32">get_weight</references>
        <references refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" compoundref="selection__template_8h" startline="28">hash</references>
        <references refid="classselection__template_1a2e1c4a9239afbfea9cd510b774c9c1fe" compoundref="selection__template_8h" startline="39">index</references>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">name</references>
        <references refid="classcproperty_1a31b26b5ffb20bbf8d8ee38e0755a9819" compoundref="property_8h" startline="22" endline="25">cproperty&lt; T, G &gt;::set_getter</references>
        <references refid="classselection__template_1acd31f17488bcf97dd8a5f1b3a7da1cdd" compoundref="selection_2cxx_2properties_8cxx" startline="11" endline="16">set_hash</references>
        <references refid="classselection__template_1a8951c34758d3410f9d931b6011c3cca2" compoundref="selection_2cxx_2properties_8cxx" startline="34" endline="36">set_index</references>
        <references refid="classselection__template_1a19244d585754db14326c126a98000899" compoundref="selection_2cxx_2properties_8cxx" startline="3" endline="5">set_name</references>
        <references refid="classcproperty_1a41a70e8e01c9b1a20b94d2dbf1a6b214" compoundref="property_8h" startline="27" endline="27">cproperty&lt; T, G &gt;::set_object</references>
        <references refid="classcproperty_1af4583ba4cf4ebc53f870a2de8f110da7" compoundref="property_8h" startline="17" endline="20">cproperty&lt; T, G &gt;::set_setter</references>
        <references refid="classselection__template_1aa95e812106c1a933f1b65e82557939d3" compoundref="selection_2cxx_2properties_8cxx" startline="26" endline="28">set_weight</references>
        <references refid="classselection__template_1a57ff66ff6c5ff5af5e81298faf6bf521" compoundref="selection__template_8h" startline="32">tree</references>
        <references refid="classselection__template_1a03816f18e6ce9351cd099525862c7c64" compoundref="selection__template_8h" startline="35">weight</references>
        <referencedby refid="classselection__template_1a094ce1eb2b6463f88a8ad5f7dfd8e4b6" compoundref="selection__template_8cxx" startline="6" endline="6">clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1af0b32265d850bfcd861a7f4744426856" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>selection_template::~selection_template</definition>
        <argsstring>()</argsstring>
        <name>~selection_template</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="22" column="17" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="26" bodyend="36"/>
        <references refid="_3event-name_4_8cxx_1ad909c3cfb5bcea8ede732f1c3da64879" compoundref="_3event-name_4_8cxx" startline="7">this</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a094ce1eb2b6463f88a8ad5f7dfd8e4b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
        <definition>selection_template * selection_template::clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <reimplementedby refid="classtopmatching_1a4a3767cc83bcdeca2dc0d6225099c23a">clone</reimplementedby>
        <reimplementedby refid="classtopkinematics_1a2faf492910ac4ef4b7db784a74dbc976">clone</reimplementedby>
        <reimplementedby refid="classtoptruthjets_1a24aec29c06fcb72f928f33e41f0136e2">clone</reimplementedby>
        <reimplementedby refid="classtopmatching_1a2b01b3113414af4ab646c31f2bc27d4b">clone</reimplementedby>
        <reimplementedby refid="classtopkinematics_1a21c7435acb2d4f32ead1ebd750bf0954">clone</reimplementedby>
        <reimplementedby refid="classtopjets_1a3ff68c01276b06b15e437e8bf0cb2f53">clone</reimplementedby>
        <reimplementedby refid="classevent_1a397274d63720b51c002c40d5bc8cb76f">clone</reimplementedby>
        <reimplementedby refid="classdecaymodes_1a39b9a2dbfa59b5250fd3253a8e17e6fe">clone</reimplementedby>
        <reimplementedby refid="classmet_1af4d30ffd6bfeadbd27d72d1dc74e7803">clone</reimplementedby>
        <reimplementedby refid="classtopefficiency_1a8650d7ac08b08ed5f566193e39c14326">clone</reimplementedby>
        <reimplementedby refid="classmatching_1ad1e05cb4fc302c8a0c503273ec4e67db">clone</reimplementedby>
        <reimplementedby refid="classvalidation_1aef10864e0566e65df9d8af2a5485219f">clone</reimplementedby>
        <reimplementedby refid="classchildrenkinematics_1ab718a88fa801358a3f3d8cf8626a8283">clone</reimplementedby>
        <reimplementedby refid="classregions_1a0a3e2cf8a1ec99674183facc05169e4b">clone</reimplementedby>
        <reimplementedby refid="classcombinatorial_1a894176c4c94dab6121a61664b5c88a7e">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="42" column="36" bodyfile="modules/selection/cxx/selection_template.cxx" bodystart="6" bodyend="6"/>
        <references refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</references>
        <referencedby refid="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" compoundref="selection__core_8cxx" startline="47" endline="56">build</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a906e3f695a675e5a545fa4eab867cfd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool selection_template::selection</definition>
        <argsstring>(event_template *ev)</argsstring>
        <name>selection</name>
        <reimplementedby refid="classtopmatching_1aa9492bb4ec6c768bfc25bedb1ac17106">selection</reimplementedby>
        <reimplementedby refid="classtopkinematics_1a887006b5f0787ab23dcf394c10b2e28e">selection</reimplementedby>
        <reimplementedby refid="classtoptruthjets_1a612537791c5d02cb80a30c80a8a8e43d">selection</reimplementedby>
        <reimplementedby refid="classtopmatching_1aa9492bb4ec6c768bfc25bedb1ac17106">selection</reimplementedby>
        <reimplementedby refid="classtopkinematics_1a887006b5f0787ab23dcf394c10b2e28e">selection</reimplementedby>
        <reimplementedby refid="classtopjets_1a6f8c47f651edea243c3177b0ad7d70f1">selection</reimplementedby>
        <reimplementedby refid="classevent_1a4eb5b2cffd1c4d673dcb28affc64e604">selection</reimplementedby>
        <reimplementedby refid="classdecaymodes_1a27c4b05080846095204be5afb416f5a7">selection</reimplementedby>
        <reimplementedby refid="classmet_1a96c17deabca2d1a4ac63b1fa74426bbb">selection</reimplementedby>
        <reimplementedby refid="classtopefficiency_1a43c273e1b88d0ebe7035ff94c1a3fb15">selection</reimplementedby>
        <reimplementedby refid="classvalidation_1a0b29bd038e3900496cc2de454fc52615">selection</reimplementedby>
        <reimplementedby refid="classchildrenkinematics_1a6871ee24b0d7b78d33e33ac614e03ede">selection</reimplementedby>
        <reimplementedby refid="classregions_1a2791d92040332ab142ed3733117de6ac">selection</reimplementedby>
        <reimplementedby refid="classcombinatorial_1a6d222547e0dce9eea6ca128cdba5a01f">selection</reimplementedby>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="43" column="22" bodyfile="modules/selection/cxx/selection_template.cxx" bodystart="4" bodyend="4"/>
        <referencedby refid="classselection__template_1a9deff703f50fdff72bd1edf3664a9d75" compoundref="selection__core_8cxx" startline="41" endline="45">CompileEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a01a81c84699bb054a8c320fc5575e17b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool selection_template::strategy</definition>
        <argsstring>(event_template *ev)</argsstring>
        <name>strategy</name>
        <reimplementedby refid="classtopmatching_1acbf5d299785f024b7a4b5bd92bbfcd6f">strategy</reimplementedby>
        <reimplementedby refid="classtopkinematics_1acf450e4907cff9104f1fc70fa04de276">strategy</reimplementedby>
        <reimplementedby refid="classtoptruthjets_1a39c1afcec2800b351fc047fbfa4f009f">strategy</reimplementedby>
        <reimplementedby refid="classtopmatching_1acbf5d299785f024b7a4b5bd92bbfcd6f">strategy</reimplementedby>
        <reimplementedby refid="classtopkinematics_1acf450e4907cff9104f1fc70fa04de276">strategy</reimplementedby>
        <reimplementedby refid="classtopjets_1a72145e79c19febe5393d17220c980e2a">strategy</reimplementedby>
        <reimplementedby refid="classevent_1a24e6fe83017430f5ba40a720cef76605">strategy</reimplementedby>
        <reimplementedby refid="classdecaymodes_1abfec366758f5b7885063a349cfcda394">strategy</reimplementedby>
        <reimplementedby refid="classmet_1a54e4795f6e1387cd2aa9e259ef147f3c">strategy</reimplementedby>
        <reimplementedby refid="classtopefficiency_1a208f0c2ad333886e46bf67c3f3732d63">strategy</reimplementedby>
        <reimplementedby refid="classvalidation_1af388ba0e867008a75602581fdc2ed0f3">strategy</reimplementedby>
        <reimplementedby refid="classchildrenkinematics_1a9dfe1425443601d0af03eab580722b76">strategy</reimplementedby>
        <reimplementedby refid="classmatching_1afbde71106947fe0f714151794c7f6259">strategy</reimplementedby>
        <reimplementedby refid="classregions_1a238dd04a8c824c8db401e41d36cd428b">strategy</reimplementedby>
        <reimplementedby refid="classcombinatorial_1a5cd8d199d3f8fe6c9f0b8e1c2e2f7bfd">strategy</reimplementedby>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="44" column="22" bodyfile="modules/selection/cxx/selection_template.cxx" bodystart="5" bodyend="5"/>
        <referencedby refid="classselection__template_1a9deff703f50fdff72bd1edf3664a9d75" compoundref="selection__core_8cxx" startline="41" endline="45">CompileEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1ad04ca3679a943defbd47c05a88448aba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void selection_template::merge</definition>
        <argsstring>(selection_template *sel)</argsstring>
        <name>merge</name>
        <reimplementedby refid="classtopmatching_1af2e67b27bf5c2cb999bb03c432bd0b5d">merge</reimplementedby>
        <reimplementedby refid="classtopkinematics_1a5e34069a535a6ea4914bc0a22792582b">merge</reimplementedby>
        <reimplementedby refid="classtoptruthjets_1acc1a029bbab73d3c6bc2a121ee64def2">merge</reimplementedby>
        <reimplementedby refid="classtopmatching_1af2e67b27bf5c2cb999bb03c432bd0b5d">merge</reimplementedby>
        <reimplementedby refid="classtopkinematics_1a5e34069a535a6ea4914bc0a22792582b">merge</reimplementedby>
        <reimplementedby refid="classtopjets_1a6d490674013bf38deb85e41d31aa2b9a">merge</reimplementedby>
        <reimplementedby refid="classevent_1afdc8e678c9c8c02843f4f071cc6f4b31">merge</reimplementedby>
        <reimplementedby refid="classdecaymodes_1a65b4213eb7aa8ede49b8113064824f99">merge</reimplementedby>
        <reimplementedby refid="classmet_1a53a217f21ee3d8969f6125e58254971c">merge</reimplementedby>
        <reimplementedby refid="classtopefficiency_1a4565cb0f6f962119593181f2bc313bd0">merge</reimplementedby>
        <reimplementedby refid="classvalidation_1a5bc9aad76ca75e21e70d5cf4e48c31e4">merge</reimplementedby>
        <reimplementedby refid="classchildrenkinematics_1ac92b71da90a3ea4f996cb7a578efcb9b">merge</reimplementedby>
        <reimplementedby refid="classmatching_1a87394c2320fa7c7fc07cd58fe7c5b8d0">merge</reimplementedby>
        <reimplementedby refid="classregions_1aefc0916bc31bfb139b311846a0e33c3a">merge</reimplementedby>
        <reimplementedby refid="classcombinatorial_1afcb3e3c3c11238a745f3e591162a7ae0">merge</reimplementedby>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <declname>sel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="45" column="22" bodyfile="modules/selection/cxx/selection_template.cxx" bodystart="7" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a6a9f6df015c9f8e48c65cacc249c4fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void selection_template::bulk_write</definition>
        <argsstring>(const long *idx, std::string *hx)</argsstring>
        <name>bulk_write</name>
        <param>
          <type>const long *</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>hx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="46" column="22" bodyfile="modules/selection/cxx/selection_template.cxx" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1ae5606e994231fae57abe42e4f0ec6202" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void selection_template::write</definition>
        <argsstring>(std::vector&lt; particle_template * &gt; *particles, std::string name, particle_enum attrs)</argsstring>
        <name>write</name>
        <param>
          <type>std::vector&lt; <ref refid="classparticle__template" kindref="compound">particle_template</ref> * &gt; *</type>
          <declname>particles</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28" kindref="member">particle_enum</ref></type>
          <declname>attrs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="47" column="22" bodyfile="modules/selection/cxx/selection_template.cxx" bodystart="10" bodyend="55"/>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a41a2e03f8686640344badf516a008503">charge</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a05e7d19a6d002118deef70d21ff4226e">energy</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28aeba021d91b44a97dec2588bbea58a447">eta</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a6a992d5529f459a44fee58c733255e86">index</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a9a5027b6b5e1ab39d5ef382ac5b2c141">is_add</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ae0da17ca8558064e75c801fadc3537a4">is_b</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28acc9357767a613ec2e912943553e95778">is_lep</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ab09e705fe6108a37560c8173e04c822d">is_nu</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f">mass</references>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">name</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a29e700fac9f9a1121be10a785cb69e3a">pdgid</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28acb7a24bb7528f934b841b34c3a73e0c7">phi</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56">pmc</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ad949b87653e0e12c90d27f66d090f1c9">pmu</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28afc9fdf084e290f26a270390dc49061a2">pt</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a21de26caa6bcfc936378c4e45d235bd9">px</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28adfed5bc177b87ab317c584e06566adc6">py</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a6d2cb9e726c9fac0fb36afc377be3aec">pz</references>
        <references refid="classselection__template_1a41a437aca3bb2a7f854a66ff92942d46" compoundref="selection__core_8cxx" startline="132" endline="150">switch_board</references>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3af31ee5e3824f1f5e5d206bdf3029f22b">undef</references>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a7a4a175ba15731da1d56cd0661080d25">v_b</references>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3ae9dcbfc39e25f58c5cb2d56a73628c83">v_d</references>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a1df181eaa1bb40a0067c06ead197170d">v_i</references>
        <references refid="enums_8h_1afc0e564c96a59a78f7943fac65657ff3a53968916bfe73b9242b620faed3467d9">vv_d</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classtopkinematics_1a5e34069a535a6ea4914bc0a22792582b" compoundref="mc16_2topkinematics_2topkinematics_8cxx" startline="10" endline="21">topkinematics::merge</referencedby>
        <referencedby refid="classtopmatching_1af2e67b27bf5c2cb999bb03c432bd0b5d" compoundref="mc16_2topmatching_2topmatching_8cxx" startline="10" endline="29">topmatching::merge</referencedby>
        <referencedby refid="classvalidation_1a5bc9aad76ca75e21e70d5cf4e48c31e4" compoundref="validation_8cxx" startline="20" endline="38">validation::merge</referencedby>
        <referencedby refid="classchildrenkinematics_1ac92b71da90a3ea4f996cb7a578efcb9b" compoundref="childrenkinematics_8cxx" startline="10" endline="104">childrenkinematics::merge</referencedby>
        <referencedby refid="classmatching_1a87394c2320fa7c7fc07cd58fe7c5b8d0" compoundref="matching_8cxx" startline="11" endline="74">matching::merge</referencedby>
        <referencedby refid="classregions_1aefc0916bc31bfb139b311846a0e33c3a" compoundref="regions_8cxx" startline="10" endline="45">regions::merge</referencedby>
        <referencedby refid="classcombinatorial_1afcb3e3c3c11238a745f3e591162a7ae0" compoundref="combinatorial_8cxx" startline="20" endline="39">combinatorial::merge</referencedby>
        <referencedby refid="classmet_1a54e4795f6e1387cd2aa9e259ef147f3c" compoundref="met_8cxx" startline="16" endline="21">met::strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a41a437aca3bb2a7f854a66ff92942d46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::switch_board</definition>
        <argsstring>(particle_enum attrs, particle_template *ptr, std::vector&lt; std::vector&lt; double &gt;&gt; *data)</argsstring>
        <name>switch_board</name>
        <param>
          <type><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28" kindref="member">particle_enum</ref></type>
          <declname>attrs</declname>
        </param>
        <param>
          <type><ref refid="classparticle__template" kindref="compound">particle_template</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="49" column="14" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="132" bodyend="150"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a05e7d19a6d002118deef70d21ff4226e">energy</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28aeba021d91b44a97dec2588bbea58a447">eta</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28acb7a24bb7528f934b841b34c3a73e0c7">phi</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a04130da60e65c7800006cd7886515b56">pmc</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ad949b87653e0e12c90d27f66d090f1c9">pmu</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28afc9fdf084e290f26a270390dc49061a2">pt</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a21de26caa6bcfc936378c4e45d235bd9">px</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28adfed5bc177b87ab317c584e06566adc6">py</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a6d2cb9e726c9fac0fb36afc377be3aec">pz</references>
        <references refid="namespacemain_1ae3ad17ae2d2668bd3b0e760a13fcc567" compoundref="mc16__matching_2main_8py" startline="108">main.tmp</references>
        <referencedby refid="classselection__template_1ae5606e994231fae57abe42e4f0ec6202" compoundref="selection__template_8cxx" startline="10" endline="55">write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a74558331b11dd6822a975a32203286ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::switch_board</definition>
        <argsstring>(particle_enum attrs, particle_template *ptr, std::vector&lt; int &gt; *data)</argsstring>
        <name>switch_board</name>
        <param>
          <type><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28" kindref="member">particle_enum</ref></type>
          <declname>attrs</declname>
        </param>
        <param>
          <type><ref refid="classparticle__template" kindref="compound">particle_template</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="50" column="14" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="99" bodyend="105"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="classselection__template_1a2e1c4a9239afbfea9cd510b774c9c1fe" compoundref="selection__template_8h" startline="39">index</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a6a992d5529f459a44fee58c733255e86">index</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a29e700fac9f9a1121be10a785cb69e3a">pdgid</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a3bde46eb8ab3699d6f3eab6077d9716c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::switch_board</definition>
        <argsstring>(particle_enum attrs, particle_template *ptr, std::vector&lt; double &gt; *data)</argsstring>
        <name>switch_board</name>
        <param>
          <type><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28" kindref="member">particle_enum</ref></type>
          <declname>attrs</declname>
        </param>
        <param>
          <type><ref refid="classparticle__template" kindref="compound">particle_template</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="51" column="14" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="107" bodyend="120"/>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a41a2e03f8686640344badf516a008503">charge</references>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacetest__particles_1aad178dcf6e7313adddddce0674c990d0" compoundref="test__particles_8py" startline="166">test_particles.e</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a05e7d19a6d002118deef70d21ff4226e">energy</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28aeba021d91b44a97dec2588bbea58a447">eta</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f">mass</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28acb7a24bb7528f934b841b34c3a73e0c7">phi</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28afc9fdf084e290f26a270390dc49061a2">pt</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a21de26caa6bcfc936378c4e45d235bd9">px</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28adfed5bc177b87ab317c584e06566adc6">py</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a6d2cb9e726c9fac0fb36afc377be3aec">pz</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a572f52e2758979cda89605e207e57c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::switch_board</definition>
        <argsstring>(particle_enum attrs, particle_template *ptr, std::vector&lt; bool &gt; *data)</argsstring>
        <name>switch_board</name>
        <param>
          <type><ref refid="enums_8h_1a666fa98df084d96fc481369704153b28" kindref="member">particle_enum</ref></type>
          <declname>attrs</declname>
        </param>
        <param>
          <type><ref refid="classparticle__template" kindref="compound">particle_template</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="52" column="14" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="122" bodyend="130"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28a9a5027b6b5e1ab39d5ef382ac5b2c141">is_add</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ae0da17ca8558064e75c801fadc3537a4">is_b</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28acc9357767a613ec2e912943553e95778">is_lep</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ab09e705fe6108a37560c8173e04c822d">is_nu</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a67768227c6c6a8e69edd0dc618a70eb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void selection_template::write</definition>
        <argsstring>(g *var, std::string name)</argsstring>
        <name>write</name>
        <param>
          <type>g *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="55" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="55" bodyend="58"/>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">name</references>
        <references refid="classselection__template_1a57ff66ff6c5ff5af5e81298faf6bf521" compoundref="selection__template_8h" startline="32">tree</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a0983bf7c4582968c8c3b1a970fb3689e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void selection_template::write</definition>
        <argsstring>(g var, std::string name)</argsstring>
        <name>write</name>
        <param>
          <type>g</type>
          <declname>var</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="61" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="61" bodyend="64"/>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">name</references>
        <references refid="classselection__template_1a57ff66ff6c5ff5af5e81298faf6bf521" compoundref="selection__template_8h" startline="32">tree</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a2c99ad97301a85fc7c7257930d990cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::map&lt; std::string, float &gt; &gt;</type>
        <definition>std::vector&lt; std::map&lt; std::string, float &gt; &gt; selection_template::reverse_hash</definition>
        <argsstring>(std::vector&lt; std::string &gt; *hashes)</argsstring>
        <name>reverse_hash</name>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>hashes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="66" column="21" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="84" bodyend="97"/>
        <references refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" compoundref="selection__template_8h" startline="28">hash</references>
        <references refid="classselection__template_1ad472a18c63b8b1d6e41fbe626b13fc40" compoundref="selection__template_8h" startline="172">passed_weights</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a9deff703f50fdff72bd1edf3664a9d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool selection_template::CompileEvent</definition>
        <argsstring>()</argsstring>
        <name>CompileEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="68" column="14" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="41" bodyend="45"/>
        <references refid="classselection__template_1a906e3f695a675e5a545fa4eab867cfd7" compoundref="selection__template_8cxx" startline="4" endline="4">selection</references>
        <references refid="classselection__template_1a01a81c84699bb054a8c320fc5575e17b" compoundref="selection__template_8cxx" startline="5" endline="5">strategy</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
        <definition>selection_template * selection_template::build</definition>
        <argsstring>(event_template *ev)</argsstring>
        <name>build</name>
        <param>
          <type><ref refid="classevent__template" kindref="compound">event_template</ref> *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="69" column="28" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="47" bodyend="56"/>
        <references refid="classselection__template_1a094ce1eb2b6463f88a8ad5f7dfd8e4b6" compoundref="selection__template_8cxx" startline="6" endline="6">clone</references>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="classselection__template_1ad220a2da4b57303d8a5b162b6733024f" compoundref="selection__template_8h" startline="73">filename</references>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">name</references>
        <references refid="namespacemain_1a37e50d3a642b605bc387ae3703d9730b" compoundref="analysis_2main_8py" startline="11">main.sel</references>
        <references refid="classselection__template_1a03816f18e6ce9351cd099525862c7c64" compoundref="selection__template_8h" startline="35">weight</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a0e423716b1439b853d39904998074ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool selection_template::operator==</definition>
        <argsstring>(selection_template &amp;p)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="70" column="14" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="38" bodyend="38"/>
        <references refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" compoundref="selection__template_8h" startline="28">hash</references>
        <references refid="namespacernn__model_1a19e60fd57ec76804d163e73cb83e2e7d" compoundref="rnn__model_8py" startline="35">rnn_model.p</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a84df199f6022f2a5d27979d43de51547" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
          <param>
            <type>typename k</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void selection_template::sum</definition>
        <argsstring>(std::vector&lt; g * &gt; *ch, k **out)</argsstring>
        <name>sum</name>
        <param>
          <type>std::vector&lt; g * &gt; *</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>k **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="77" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="77" bodyend="89"/>
        <references refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" compoundref="selection__template_8h" startline="28">hash</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="namespacevalidation_1_1nusol_1a50111f75a48628b1cbf4f0f83739cffe" compoundref="validation_2nusol_8py" startline="41" endline="49">validation.nusol.intersections_ellipse_line</referencedby>
        <referencedby refid="namespacevalidation_1_1nusol_1a1244d608447d387cbea18916056990f3" compoundref="validation_2nusol_8py" startline="74" endline="84">validation.nusol.intersections_ellipses</referencedby>
        <referencedby refid="namespacetopjets_1_1figures_1a5b399afa5e9c92e2d3232479b70879e1" compoundref="mc16__matching_2topjets_2figures_8py" startline="174" endline="295">topjets.figures.jet_partons</referencedby>
        <referencedby refid="namespacetopefficiency_1_1figures_1a1759143049cc773286a27a94f37a2745" compoundref="performance_2topefficiency_2figures_8py" startline="249" endline="344">topefficiency.figures.ntops_reco</referencedby>
        <referencedby refid="namespacedecaymodes_1_1figures_1ae8824237ae8c48a4c2c9cf06a1260c05" compoundref="mc16__matching_2decaymodes_2figures_8py" startline="36" endline="69">decaymodes.figures.pdgid_modes</referencedby>
        <referencedby refid="classvalidation_1aa436b348c281a3d676910cf7b7d575eb" compoundref="validation_8cxx" startline="58" endline="116">validation::reconstruction</referencedby>
        <referencedby refid="namespacedecaymodes_1_1figures_1a17c849af53ba19a6076d11fe1b3c381a" compoundref="mc16__matching_2decaymodes_2figures_8py" startline="95" endline="116">decaymodes.figures.region_stats</referencedby>
        <referencedby refid="classtoptruthjets_1a39c1afcec2800b351fc047fbfa4f009f" compoundref="toptruthjets_8cxx" startline="22" endline="163">toptruthjets::strategy</referencedby>
        <referencedby refid="classtopjets_1a72145e79c19febe5393d17220c980e2a" compoundref="topjets_8cxx" startline="22" endline="163">topjets::strategy</referencedby>
        <referencedby refid="classdecaymodes_1abfec366758f5b7885063a349cfcda394" compoundref="decaymodes_8cxx" startline="59" endline="210">decaymodes::strategy</referencedby>
        <referencedby refid="classchildrenkinematics_1a9dfe1425443601d0af03eab580722b76" compoundref="childrenkinematics_8cxx" startline="121" endline="243">childrenkinematics::strategy</referencedby>
        <referencedby refid="classselection__template_1af639e8d3a86f1fa5cdfd2fe58e2e5dfb" compoundref="selection__template_8h" startline="101" endline="106">sum</referencedby>
        <referencedby refid="namespacetopefficiency_1_1figures_1a84945958e13f82db53a47ad3c22e7747" compoundref="performance_2topefficiency_2figures_8py" startline="34" endline="221">topefficiency.figures.top_kinematic_region</referencedby>
        <referencedby refid="namespacetopkinematics_1_1figures_1a99c65e86a99491541bbd481b33a96fb8" compoundref="mc16__matching_2topkinematics_2figures_8py" startline="177" endline="223">topkinematics.figures.top_pair_mass</referencedby>
        <referencedby refid="namespacetoptruthjets_1_1figures_1a63bcb3f2c3546d7be98f007754a16244" compoundref="mc16__matching_2toptruthjets_2figures_8py" startline="173" endline="294">toptruthjets.figures.truthjet_partons</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a4faf71140920bc4cf0fc06072cecad07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void selection_template::safe_delete</definition>
        <argsstring>(std::vector&lt; g * &gt; *particles)</argsstring>
        <name>safe_delete</name>
        <param>
          <type>std::vector&lt; g * &gt; *</type>
          <declname>particles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="92" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="92" bodyend="98"/>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classcombinatorial_1a14a9c71052a09dbdb30e6b84b3a0913b" compoundref="combinatorial_8cxx" startline="12" endline="12">combinatorial::~combinatorial</referencedby>
        <referencedby refid="classvalidation_1a49b20a8af71fb932b97a831aca4fd931" compoundref="validation_8cxx" startline="18" endline="18">validation::~validation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1af639e8d3a86f1fa5cdfd2fe58e2e5dfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>g *</type>
        <definition>g* selection_template::sum</definition>
        <argsstring>(std::map&lt; std::string, g * &gt; *ch)</argsstring>
        <name>sum</name>
        <param>
          <type>std::map&lt; std::string, g * &gt; *</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="101" column="11" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="101" bodyend="106"/>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" compoundref="selection__template_8h" startline="77" endline="89">sum</references>
        <references refid="classselection__template_1a7e1560964237cf7b4846e24b300d7b9e" compoundref="selection__template_8h" startline="116" endline="121">vectorize</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1aefb54851b728057af466bf7a78caeda8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>float</type>
        <definition>float selection_template::sum</definition>
        <argsstring>(std::vector&lt; g * &gt; *ch)</argsstring>
        <name>sum</name>
        <param>
          <type>std::vector&lt; g * &gt; *</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="109" column="15" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="109" bodyend="113"/>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ad90ccffa01275a7a7795fb6d1274e75f">mass</references>
        <references refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" compoundref="selection__template_8h" startline="77" endline="89">sum</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a7e1560964237cf7b4846e24b300d7b9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; g * &gt;</type>
        <definition>std::vector&lt;g*&gt; selection_template::vectorize</definition>
        <argsstring>(std::map&lt; std::string, g * &gt; *in)</argsstring>
        <name>vectorize</name>
        <param>
          <type>std::map&lt; std::string, g * &gt; *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="116" column="21" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="116" bodyend="121"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <referencedby refid="classmatching_1a6a20dfdb8f6fa5a23a6859d869040417" compoundref="mc20__ref_8cxx" startline="4" endline="103">matching::current</referencedby>
        <referencedby refid="classmatching_1a6925aacb40ca0e99f178d44959956fdb" compoundref="mc20__exp_8cxx" startline="4" endline="69">matching::experimental</referencedby>
        <referencedby refid="classmatching_1a7c3eb589ac6ae85490aa698d73fe8b88" compoundref="mc16__ref_8cxx" startline="4" endline="114">matching::reference</referencedby>
        <referencedby refid="classdecaymodes_1abfec366758f5b7885063a349cfcda394" compoundref="decaymodes_8cxx" startline="59" endline="210">decaymodes::strategy</referencedby>
        <referencedby refid="classvalidation_1af388ba0e867008a75602581fdc2ed0f3" compoundref="validation_8cxx" startline="136" endline="197">validation::strategy</referencedby>
        <referencedby refid="classchildrenkinematics_1a9dfe1425443601d0af03eab580722b76" compoundref="childrenkinematics_8cxx" startline="121" endline="243">childrenkinematics::strategy</referencedby>
        <referencedby refid="classcombinatorial_1a5cd8d199d3f8fe6c9f0b8e1c2e2f7bfd" compoundref="combinatorial_8cxx" startline="154" endline="229">combinatorial::strategy</referencedby>
        <referencedby refid="classselection__template_1af639e8d3a86f1fa5cdfd2fe58e2e5dfb" compoundref="selection__template_8h" startline="101" endline="106">sum</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1ab760e9d895d74e62a9d4bfe436568a86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; g * &gt;</type>
        <definition>std::vector&lt;g*&gt; selection_template::make_unique</definition>
        <argsstring>(std::vector&lt; g * &gt; *inpt)</argsstring>
        <name>make_unique</name>
        <param>
          <type>std::vector&lt; g * &gt; *</type>
          <declname>inpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="124" column="21" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="124" bodyend="135"/>
        <references refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" compoundref="selection__template_8h" startline="28">hash</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="namespacemain_1ae3ad17ae2d2668bd3b0e760a13fcc567" compoundref="mc16__matching_2main_8py" startline="108">main.tmp</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classcombinatorial_1a4f90aaf04154a0d1ca9d59e1ccb2c54e" compoundref="combinatorial_8cxx" startline="72" endline="136">combinatorial::reconstruction</referencedby>
        <referencedby refid="classtopjets_1a72145e79c19febe5393d17220c980e2a" compoundref="topjets_8cxx" startline="22" endline="163">topjets::strategy</referencedby>
        <referencedby refid="classtoptruthjets_1a39c1afcec2800b351fc047fbfa4f009f" compoundref="toptruthjets_8cxx" startline="22" endline="163">toptruthjets::strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1ab32b926ee893cf56dc27913271658d1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void selection_template::downcast</definition>
        <argsstring>(std::vector&lt; g * &gt; *inpt, std::vector&lt; particle_template * &gt; *out)</argsstring>
        <name>downcast</name>
        <param>
          <type>std::vector&lt; g * &gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classparticle__template" kindref="compound">particle_template</ref> * &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="138" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="138" bodyend="140"/>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classtopjets_1a72145e79c19febe5393d17220c980e2a" compoundref="topjets_8cxx" startline="22" endline="163">topjets::strategy</referencedby>
        <referencedby refid="classtoptruthjets_1a39c1afcec2800b351fc047fbfa4f009f" compoundref="toptruthjets_8cxx" startline="22" endline="163">toptruthjets::strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a82f14833e404fbe0399a2a539eef75b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename o</type>
          </param>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void selection_template::upcast</definition>
        <argsstring>(std::map&lt; std::string, o * &gt; *inpt, std::vector&lt; g * &gt; *out)</argsstring>
        <name>upcast</name>
        <param>
          <type>std::map&lt; std::string, o * &gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>std::vector&lt; g * &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="143" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="143" bodyend="146"/>
        <references refid="_3name_4_8h_1a64e9fa75beda50a9e8400ee0d4e61984">end</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <referencedby refid="classregions_1a238dd04a8c824c8db401e41d36cd428b" compoundref="regions_8cxx" startline="51" endline="824">regions::strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1ae5ce6c75d19fdbb2ab18ba05b3ea4c58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename o</type>
          </param>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void selection_template::upcast</definition>
        <argsstring>(std::vector&lt; o * &gt; *inpt, std::vector&lt; g * &gt; *out)</argsstring>
        <name>upcast</name>
        <param>
          <type>std::vector&lt; o * &gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>std::vector&lt; g * &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="149" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="149" bodyend="151"/>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1ad27d2cd85c19147b85b1e96ce73bdade" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void selection_template::get_leptonics</definition>
        <argsstring>(std::map&lt; std::string, g * &gt; inpt, std::vector&lt; particle_template * &gt; *out)</argsstring>
        <name>get_leptonics</name>
        <param>
          <type>std::map&lt; std::string, g * &gt;</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classparticle__template" kindref="compound">particle_template</ref> * &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="154" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="154" bodyend="160"/>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28acc9357767a613ec2e912943553e95778">is_lep</references>
        <references refid="enums_8h_1a666fa98df084d96fc481369704153b28ab09e705fe6108a37560c8173e04c822d">is_nu</references>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <referencedby refid="classtopjets_1a72145e79c19febe5393d17220c980e2a" compoundref="topjets_8cxx" startline="22" endline="163">topjets::strategy</referencedby>
        <referencedby refid="classtoptruthjets_1a39c1afcec2800b351fc047fbfa4f009f" compoundref="toptruthjets_8cxx" startline="22" endline="163">toptruthjets::strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a3009dc4bb45c47d96a5bdc4096bd6870" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename g</type>
          </param>
          <param>
            <type>typename j</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool selection_template::contains</definition>
        <argsstring>(std::vector&lt; g * &gt; *inpt, j *pcheck)</argsstring>
        <name>contains</name>
        <param>
          <type>std::vector&lt; g * &gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>j *</type>
          <declname>pcheck</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="163" column="14" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="163" bodyend="169"/>
        <references refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" compoundref="selection__template_8h" startline="28">hash</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classselection__template_1a19244d585754db14326c126a98000899" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::set_name</definition>
        <argsstring>(std::string *, selection_template *)</argsstring>
        <name>set_name</name>
        <param>
          <type>std::string *</type>
          <defname>name</defname>
        </param>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="25" column="21" bodyfile="modules/selection/cxx/properties.cxx" bodystart="3" bodyend="5"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="structevent__t_1a0d5d73198c6bf2664010e952fde287bd" compoundref="modules_2structs_2include_2structs_2event_8h" startline="8">event_t::name</references>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">name</references>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1ad0d6fa60bf0da8796a718532c0288d04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::get_name</definition>
        <argsstring>(std::string *, selection_template *)</argsstring>
        <name>get_name</name>
        <param>
          <type>std::string *</type>
          <defname>name</defname>
        </param>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="26" column="21" bodyfile="modules/selection/cxx/properties.cxx" bodystart="7" bodyend="9"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="structevent__t_1a0d5d73198c6bf2664010e952fde287bd" compoundref="modules_2structs_2include_2structs_2event_8h" startline="8">event_t::name</references>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">name</references>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1acd31f17488bcf97dd8a5f1b3a7da1cdd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::set_hash</definition>
        <argsstring>(std::string *, selection_template *)</argsstring>
        <name>set_hash</name>
        <param>
          <type>std::string *</type>
          <defname>path</defname>
        </param>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="29" column="21" bodyfile="modules/selection/cxx/properties.cxx" bodystart="11" bodyend="16"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="structevent__t_1a34c3a0cdf480b7dff4144989d80a53d9" compoundref="modules_2structs_2include_2structs_2event_8h" startline="14">event_t::hash</references>
        <references refid="classselection__template_1a2e1c4a9239afbfea9cd510b774c9c1fe" compoundref="selection__template_8h" startline="39">index</references>
        <references refid="namespacechildrenkinematics_1_1figures_1a4b217acaa3fe7d5c60c04978cbf782dc" compoundref="mc16__matching_2childrenkinematics_2figures_8py" startline="9" endline="14">childrenkinematics.figures.path</references>
        <references refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" compoundref="strings_8cxx" startline="59" endline="63">tools::to_string</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a2f6cd45079e1fab94a163a38fbe005cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::get_hash</definition>
        <argsstring>(std::string *, selection_template *)</argsstring>
        <name>get_hash</name>
        <param>
          <type>std::string *</type>
          <defname>val</defname>
        </param>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="30" column="21" bodyfile="modules/selection/cxx/properties.cxx" bodystart="18" bodyend="20"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="structevent__t_1a34c3a0cdf480b7dff4144989d80a53d9" compoundref="modules_2structs_2include_2structs_2event_8h" startline="14">event_t::hash</references>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a4e61c1d63afdff7a6428fbf4c6297166" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::get_tree</definition>
        <argsstring>(std::string *, selection_template *)</argsstring>
        <name>get_tree</name>
        <param>
          <type>std::string *</type>
          <defname>name</defname>
        </param>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="33" column="21" bodyfile="modules/selection/cxx/properties.cxx" bodystart="22" bodyend="24"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" compoundref="selection__template_8h" startline="24">name</references>
        <references refid="structevent__t_1a313f1f055a86fd413dbd14f2dbfa6ed9" compoundref="modules_2structs_2include_2structs_2event_8h" startline="15">event_t::tree</references>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1aa95e812106c1a933f1b65e82557939d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::set_weight</definition>
        <argsstring>(double *, selection_template *)</argsstring>
        <name>set_weight</name>
        <param>
          <type>double *</type>
          <defname>inpt</defname>
        </param>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="36" column="21" bodyfile="modules/selection/cxx/properties.cxx" bodystart="26" bodyend="28"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="structevent__t_1a4d9b9926d247fe1b0392ce01f59ae459" compoundref="modules_2structs_2include_2structs_2event_8h" startline="11">event_t::weight</references>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1ae04fb8767d15273f80c5343e2f73384b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::get_weight</definition>
        <argsstring>(double *, selection_template *)</argsstring>
        <name>get_weight</name>
        <param>
          <type>double *</type>
          <defname>inpt</defname>
        </param>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="37" column="21" bodyfile="modules/selection/cxx/properties.cxx" bodystart="30" bodyend="32"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="structevent__t_1a4d9b9926d247fe1b0392ce01f59ae459" compoundref="modules_2structs_2include_2structs_2event_8h" startline="11">event_t::weight</references>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1a8951c34758d3410f9d931b6011c3cca2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::set_index</definition>
        <argsstring>(long *, selection_template *)</argsstring>
        <name>set_index</name>
        <param>
          <type>long *</type>
          <defname>inpt</defname>
        </param>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <defname>ev</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="40" column="21" bodyfile="modules/selection/cxx/properties.cxx" bodystart="34" bodyend="36"/>
        <references refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" compoundref="selection__template_8h" startline="74">data</references>
        <references refid="namespacemain_1ac94cb3d1fd16b3b124a4bbdd7fec754d" compoundref="analysis_2main_8py" startline="10">main.ev</references>
        <references refid="structevent__t_1a64d57a05a578b1fb8990a73c1116bc4c" compoundref="modules_2structs_2include_2structs_2event_8h" startline="12">event_t::index</references>
        <referencedby refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" compoundref="selection__core_8cxx" startline="4" endline="24">selection_template</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classselection__template_1a986209469d4d5b29bb958488e619c7b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::bulk_write_out</definition>
        <argsstring>()</argsstring>
        <name>bulk_write_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="178" column="14" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classselection__template_1af94793a9ffbd0996209894b6b8789372" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void selection_template::merger</definition>
        <argsstring>(selection_template *sl2)</argsstring>
        <name>merger</name>
        <param>
          <type><ref refid="classselection__template" kindref="compound">selection_template</ref> *</type>
          <declname>sl2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/selection/include/templates/selection_template.h" line="179" column="14" bodyfile="modules/selection/cxx/selection_core.cxx" bodystart="67" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>decaymodes</label>
        <link refid="classdecaymodes"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>childrenkinematics</label>
        <link refid="classchildrenkinematics"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>topmatching</label>
        <link refid="classtopmatching"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>toptruthjets</label>
        <link refid="classtoptruthjets"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>topefficiency</label>
        <link refid="classtopefficiency"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>met</label>
        <link refid="classmet"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>topkinematics</label>
        <link refid="classtopkinematics"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>selection_template</label>
        <link refid="classselection__template"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>topjets</label>
        <link refid="classtopjets"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>validation</label>
        <link refid="classvalidation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>matching</label>
        <link refid="classmatching"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>event</label>
        <link refid="classevent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>combinatorial</label>
        <link refid="classcombinatorial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>regions</label>
        <link refid="classregions"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>cproperty&lt; std::vector&lt; int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>meta</label>
        <link refid="classmeta"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>dsid</edgelabel>
          <edgelabel>nFiles</edgelabel>
          <edgelabel>datasetNumber</edgelabel>
          <edgelabel>totalEvents</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>cross_section_nb</edgelabel>
          <edgelabel>completion</edgelabel>
          <edgelabel>cross_section_fb</edgelabel>
          <edgelabel>ecmEnergy</edgelabel>
          <edgelabel>event_index</edgelabel>
          <edgelabel>sum_of_weights</edgelabel>
          <edgelabel>beam_energy</edgelabel>
          <edgelabel>cross_section_pb</edgelabel>
          <edgelabel>genFiltEff</edgelabel>
          <edgelabel>eventNumber</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>isMC</edgelabel>
          <edgelabel>found</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>std::map&lt; std::string, meta_t &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; std::string, meta_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>K</label>
      </node>
      <node id="26">
        <label>T</label>
      </node>
      <node id="11">
        <label>cproperty&lt; unsigned int, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; unsigned int, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>weights_t</label>
        <link refid="structweights__t"/>
        <childnode refid="29" relation="usage">
          <edgelabel>hist_data</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>generator</edgelabel>
          <edgelabel>ami_tag</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::vector&lt; double &gt;</label>
        <childnode refid="33" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>cproperty&lt; long, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; long, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>cproperty&lt; std::string, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::string, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>std::map&lt; std::string, weights_t &gt;</label>
        <childnode refid="28" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; std::string, weights_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="25" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>cproperty&lt; double, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; double, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::map&lt; int, std::string &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; int, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>cproperty&lt; std::vector&lt; double &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; double &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>cproperty&lt; std::map&lt; int, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>std::map&lt; int, int &gt;</label>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; int, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>selection_template</label>
        <link refid="classselection__template"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>meta_data</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>filename</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>matched_meta</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>passed_weights</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>index</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>weight</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>cproperty&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>cproperty&lt; T, G &gt;</label>
        <link refid="classcproperty"/>
      </node>
      <node id="39">
        <label>cproperty&lt; std::string, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::string, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>cproperty&lt; std::vector&lt; std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::vector&lt; std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>cproperty&lt; std::map&lt; int, std::string &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::map&lt; int, std::string &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="22">
        <label>meta_t</label>
        <link refid="structmeta__t"/>
        <childnode refid="23" relation="usage">
          <edgelabel>LFN</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>inputrange</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>principalPhysicsGroup</edgelabel>
          <edgelabel>DatasetName</edgelabel>
          <edgelabel>generatorName</edgelabel>
          <edgelabel>productionStep</edgelabel>
          <edgelabel>campaign</edgelabel>
          <edgelabel>projectName</edgelabel>
          <edgelabel>physicsShort</edgelabel>
          <edgelabel>logicalDatasetName</edgelabel>
          <edgelabel>conditionsTag</edgelabel>
          <edgelabel>derivationFormat</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>run_number</edgelabel>
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>inputfiles</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>keyword</edgelabel>
          <edgelabel>weights</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>fileGUID</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>fileSize</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>std::map&lt; std::string, std::string &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; std::string, std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="33" relation="template-instance">
          <edgelabel>&lt; std::string &gt;</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::map&lt; std::string, std::map&lt; std::string, float &gt; &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; std::string, std::map&lt; std::string, float &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::map&lt; std::string, float &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; std::string, float &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>cproperty&lt; bool, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; bool, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>event_t</label>
        <link refid="structevent__t"/>
        <childnode refid="4" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>tree</edgelabel>
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>cproperty&lt; std::map&lt; std::string, int &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, int &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>cproperty&lt; double, selection_template &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; double, selection_template &gt;</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::map&lt; std::string, int &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; std::string, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>notification</label>
        <link refid="classnotification"/>
        <childnode refid="4" relation="usage">
          <edgelabel>prefix</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::vector&lt; int &gt;</label>
        <childnode refid="33" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>tools</label>
        <link refid="classtools"/>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>cproperty&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</label>
        <link refid="classcproperty"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::map&lt; std::string, weights_t &gt;, meta &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/selection/include/templates/selection_template.h" line="19" column="1" bodyfile="modules/selection/include/templates/selection_template.h" bodystart="18" bodyend="187"/>
    <listofallmembers>
      <member refid="classtools_1a408b66ad73b7b4bb962634c14a55b619" prot="public" virt="non-virtual"><scope>selection_template</scope><name>absolute_path</name></member>
      <member refid="classselection__template_1ae24cee9f302d7509a7009daea0bf0616" prot="public" virt="non-virtual"><scope>selection_template</scope><name>build</name></member>
      <member refid="classselection__template_1a6a9f6df015c9f8e48c65cacc249c4fdf" prot="public" virt="virtual"><scope>selection_template</scope><name>bulk_write</name></member>
      <member refid="classselection__template_1a986209469d4d5b29bb958488e619c7b2" prot="private" virt="non-virtual"><scope>selection_template</scope><name>bulk_write_out</name></member>
      <member refid="classselection__template_1a094ce1eb2b6463f88a8ad5f7dfd8e4b6" prot="public" virt="virtual"><scope>selection_template</scope><name>clone</name></member>
      <member refid="classselection__template_1a9deff703f50fdff72bd1edf3664a9d75" prot="public" virt="non-virtual"><scope>selection_template</scope><name>CompileEvent</name></member>
      <member refid="classselection__template_1afbc4bd79c4bb0204ff2ad0b00cbfeac2" prot="private" virt="non-virtual"><scope>selection_template</scope><name>container</name></member>
      <member refid="classselection__template_1a3009dc4bb45c47d96a5bdc4096bd6870" prot="public" virt="non-virtual"><scope>selection_template</scope><name>contains</name></member>
      <member refid="classtools_1aed9f3247b474a8fb1840860d51cde7ca" prot="public" virt="non-virtual"><scope>selection_template</scope><name>create_path</name></member>
      <member refid="classselection__template_1ae25df218deb859171db9ba802c17eb0b" prot="public" virt="non-virtual"><scope>selection_template</scope><name>data</name></member>
      <member refid="classtools_1a1f8f5e775e758e3d2442a9dd46daf78c" prot="public" virt="non-virtual"><scope>selection_template</scope><name>delete_path</name></member>
      <member refid="classselection__template_1ab32b926ee893cf56dc27913271658d1e" prot="public" virt="non-virtual"><scope>selection_template</scope><name>downcast</name></member>
      <member refid="classtools_1a3d538da5310467c9321b27cd6a75b9af" prot="public" virt="non-virtual"><scope>selection_template</scope><name>ends_with</name></member>
      <member refid="classtools_1a86175bf887f3e82780cb72910181961d" prot="public" virt="non-virtual"><scope>selection_template</scope><name>extract</name></member>
      <member refid="classselection__template_1ad220a2da4b57303d8a5b162b6733024f" prot="public" virt="non-virtual"><scope>selection_template</scope><name>filename</name></member>
      <member refid="classtools_1abce97603aeadeaa04fa6c6ff6c721eda" prot="public" virt="non-virtual"><scope>selection_template</scope><name>flush</name></member>
      <member refid="classselection__template_1a62efc3d0e21f6af95ebbb3f4d54a5b80" prot="private" virt="non-virtual"><scope>selection_template</scope><name>garbage</name></member>
      <member refid="classselection__template_1a2f6cd45079e1fab94a163a38fbe005cd" prot="public" virt="non-virtual"><scope>selection_template</scope><name>get_hash</name></member>
      <member refid="classselection__template_1ad27d2cd85c19147b85b1e96ce73bdade" prot="public" virt="non-virtual"><scope>selection_template</scope><name>get_leptonics</name></member>
      <member refid="classselection__template_1ad0d6fa60bf0da8796a718532c0288d04" prot="public" virt="non-virtual"><scope>selection_template</scope><name>get_name</name></member>
      <member refid="classselection__template_1a4e61c1d63afdff7a6428fbf4c6297166" prot="public" virt="non-virtual"><scope>selection_template</scope><name>get_tree</name></member>
      <member refid="classselection__template_1ae04fb8767d15273f80c5343e2f73384b" prot="public" virt="non-virtual"><scope>selection_template</scope><name>get_weight</name></member>
      <member refid="classselection__template_1a8ee969d3df52b2d8a41e3d0e538341e1" prot="private" virt="non-virtual"><scope>selection_template</scope><name>handle</name></member>
      <member refid="classtools_1ad7229c72cee65da3605c4be82f9b42d4" prot="public" virt="non-virtual"><scope>selection_template</scope><name>has_string</name></member>
      <member refid="classtools_1a13633d4d63c55bcf537ff141e7605f13" prot="public" virt="non-virtual"><scope>selection_template</scope><name>has_value</name></member>
      <member refid="classselection__template_1a67a39632bebd074e7feb638aaedee872" prot="public" virt="non-virtual"><scope>selection_template</scope><name>hash</name></member>
      <member refid="classselection__template_1a2e1c4a9239afbfea9cd510b774c9c1fe" prot="public" virt="non-virtual"><scope>selection_template</scope><name>index</name></member>
      <member refid="classtools_1a47d3d261edcb898daab56721e18d1e67" prot="public" virt="non-virtual"><scope>selection_template</scope><name>is_file</name></member>
      <member refid="classtools_1a5ab0f2cc351dd97951358ebe19e9c18d" prot="public" virt="non-virtual"><scope>selection_template</scope><name>ls</name></member>
      <member refid="classselection__template_1a47eb871f4f8ce341cfaef7e3aae36484" prot="private" virt="non-virtual"><scope>selection_template</scope><name>m_event</name></member>
      <member refid="classselection__template_1ab760e9d895d74e62a9d4bfe436568a86" prot="public" virt="non-virtual"><scope>selection_template</scope><name>make_unique</name></member>
      <member refid="classselection__template_1a50e7d1939618dcb8b6386f5e7a247e12" prot="public" virt="non-virtual"><scope>selection_template</scope><name>matched_meta</name></member>
      <member refid="classselection__template_1ad04ca3679a943defbd47c05a88448aba" prot="public" virt="virtual"><scope>selection_template</scope><name>merge</name></member>
      <member refid="classselection__template_1af94793a9ffbd0996209894b6b8789372" prot="private" virt="non-virtual"><scope>selection_template</scope><name>merger</name></member>
      <member refid="classselection__template_1a15113e43e1451e9e65b9f327fcfc7e15" prot="public" virt="non-virtual"><scope>selection_template</scope><name>meta_data</name></member>
      <member refid="classselection__template_1a57db7d2460788ed52623482bef7a50e5" prot="public" virt="non-virtual"><scope>selection_template</scope><name>name</name></member>
      <member refid="classselection__template_1a0e423716b1439b853d39904998074ecd" prot="public" virt="non-virtual"><scope>selection_template</scope><name>operator==</name></member>
      <member refid="classselection__template_1a8855af385e9a13c33de3c928ae20c7bf" prot="private" virt="non-virtual"><scope>selection_template</scope><name>p_bulk_write</name></member>
      <member refid="classselection__template_1ad472a18c63b8b1d6e41fbe626b13fc40" prot="public" virt="non-virtual"><scope>selection_template</scope><name>passed_weights</name></member>
      <member refid="classtools_1a4450b1e48193bef904b44f7a90aaee98" prot="public" virt="non-virtual"><scope>selection_template</scope><name>put</name></member>
      <member refid="classtools_1a9265b9f87bde50d0352c6cd1959ae5fc" prot="public" virt="non-virtual"><scope>selection_template</scope><name>rename</name></member>
      <member refid="classtools_1aeae88ebd7116d59008600f0723716dba" prot="public" virt="non-virtual"><scope>selection_template</scope><name>replace</name></member>
      <member refid="classselection__template_1a2c99ad97301a85fc7c7257930d990cfd" prot="public" virt="non-virtual"><scope>selection_template</scope><name>reverse_hash</name></member>
      <member refid="classselection__template_1a4faf71140920bc4cf0fc06072cecad07" prot="public" virt="non-virtual"><scope>selection_template</scope><name>safe_delete</name></member>
      <member refid="classselection__template_1a906e3f695a675e5a545fa4eab867cfd7" prot="public" virt="virtual"><scope>selection_template</scope><name>selection</name></member>
      <member refid="classselection__template_1a4562a7ab32d93b5f2ca8a232a244041c" prot="public" virt="non-virtual"><scope>selection_template</scope><name>selection_template</name></member>
      <member refid="classselection__template_1a77788fc010c0b5fa94ddcb487b03fe40" prot="private" virt="non-virtual"><scope>selection_template</scope><name>sequence</name></member>
      <member refid="classselection__template_1acd31f17488bcf97dd8a5f1b3a7da1cdd" prot="public" virt="non-virtual"><scope>selection_template</scope><name>set_hash</name></member>
      <member refid="classselection__template_1a8951c34758d3410f9d931b6011c3cca2" prot="public" virt="non-virtual"><scope>selection_template</scope><name>set_index</name></member>
      <member refid="classselection__template_1a19244d585754db14326c126a98000899" prot="public" virt="non-virtual"><scope>selection_template</scope><name>set_name</name></member>
      <member refid="classselection__template_1aa95e812106c1a933f1b65e82557939d3" prot="public" virt="non-virtual"><scope>selection_template</scope><name>set_weight</name></member>
      <member refid="classtools_1a352a6965f2f3c768f0f4ecd1f978fcc0" prot="public" virt="non-virtual"><scope>selection_template</scope><name>split</name></member>
      <member refid="classselection__template_1a01a81c84699bb054a8c320fc5575e17b" prot="public" virt="virtual"><scope>selection_template</scope><name>strategy</name></member>
      <member refid="classselection__template_1a84df199f6022f2a5d27979d43de51547" prot="public" virt="non-virtual"><scope>selection_template</scope><name>sum</name></member>
      <member refid="classselection__template_1af639e8d3a86f1fa5cdfd2fe58e2e5dfb" prot="public" virt="non-virtual"><scope>selection_template</scope><name>sum</name></member>
      <member refid="classselection__template_1aefb54851b728057af466bf7a78caeda8" prot="public" virt="non-virtual"><scope>selection_template</scope><name>sum</name></member>
      <member refid="classtools_1a7b784121d8b368a64995feddc7083469" prot="public" virt="non-virtual" ambiguityscope="tools::"><scope>selection_template</scope><name>sum</name></member>
      <member refid="classselection__template_1a41a437aca3bb2a7f854a66ff92942d46" prot="public" virt="non-virtual"><scope>selection_template</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a74558331b11dd6822a975a32203286ac" prot="public" virt="non-virtual"><scope>selection_template</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a3bde46eb8ab3699d6f3eab6077d9716c" prot="public" virt="non-virtual"><scope>selection_template</scope><name>switch_board</name></member>
      <member refid="classselection__template_1a572f52e2758979cda89605e207e57c87" prot="public" virt="non-virtual"><scope>selection_template</scope><name>switch_board</name></member>
      <member refid="classselection__template_1ac565e3beb94b557fc947a6f8afebfc4d" prot="public" virt="non-virtual"><scope>selection_template</scope><name>threadIdx</name></member>
      <member refid="classtools_1afd037c109d75a9f119ec042e1ba922d9" prot="public" virt="non-virtual"><scope>selection_template</scope><name>to_string</name></member>
      <member refid="classtools_1a882f089d855dc4b3e0b60c591e11b092" prot="public" virt="non-virtual"><scope>selection_template</scope><name>to_string</name></member>
      <member refid="classtools_1af0028ec6242448428f7c548b6e7cb714" prot="public" virt="non-virtual"><scope>selection_template</scope><name>tools</name></member>
      <member refid="classselection__template_1a57ff66ff6c5ff5af5e81298faf6bf521" prot="public" virt="non-virtual"><scope>selection_template</scope><name>tree</name></member>
      <member refid="classtools_1a69be8c55f9fd7036080317a2ce98d4de" prot="public" virt="non-virtual"><scope>selection_template</scope><name>trim</name></member>
      <member refid="classtools_1ab46f1f3892604cb366b861cb54ce30e0" prot="public" virt="non-virtual"><scope>selection_template</scope><name>type_name</name></member>
      <member refid="classselection__template_1a82f14833e404fbe0399a2a539eef75b1" prot="public" virt="non-virtual"><scope>selection_template</scope><name>upcast</name></member>
      <member refid="classselection__template_1ae5ce6c75d19fdbb2ab18ba05b3ea4c58" prot="public" virt="non-virtual"><scope>selection_template</scope><name>upcast</name></member>
      <member refid="classselection__template_1a7e1560964237cf7b4846e24b300d7b9e" prot="public" virt="non-virtual"><scope>selection_template</scope><name>vectorize</name></member>
      <member refid="classselection__template_1a03816f18e6ce9351cd099525862c7c64" prot="public" virt="non-virtual"><scope>selection_template</scope><name>weight</name></member>
      <member refid="classselection__template_1ae5606e994231fae57abe42e4f0ec6202" prot="public" virt="virtual"><scope>selection_template</scope><name>write</name></member>
      <member refid="classselection__template_1a67768227c6c6a8e69edd0dc618a70eb9" prot="public" virt="non-virtual"><scope>selection_template</scope><name>write</name></member>
      <member refid="classselection__template_1a0983bf7c4582968c8c3b1a970fb3689e" prot="public" virt="non-virtual"><scope>selection_template</scope><name>write</name></member>
      <member refid="classselection__template_1af0b32265d850bfcd861a7f4744426856" prot="public" virt="virtual"><scope>selection_template</scope><name>~selection_template</name></member>
      <member refid="classtools_1a04762ddd5cc588520c89a387341f77f4" prot="public" virt="non-virtual"><scope>selection_template</scope><name>~tools</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
