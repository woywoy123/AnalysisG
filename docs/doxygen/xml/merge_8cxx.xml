<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="merge_8cxx" kind="file" language="C++">
    <compoundname>merge.cxx</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">TTree.h</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">TBranch.h</includes>
    <includes local="no">TTreeReader.h</includes>
    <includes local="no">TTreeReaderValue.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">TInterpreter.h</includes>
    <incdepgraph>
      <node id="10">
        <label>TInterpreter.h</label>
      </node>
      <node id="6">
        <label>TTreeReader.h</label>
      </node>
      <node id="7">
        <label>TTreeReaderValue.h</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
      <node id="4">
        <label>TFile.h</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>TBranch.h</label>
      </node>
      <node id="3">
        <label>TTree.h</label>
      </node>
      <node id="1">
        <label>merge.cxx</label>
        <link refid="merge_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_to_dict</definition>
        <argsstring>(std::vector&lt; std::vector&lt; int &gt;&gt; *dummy)</argsstring>
        <name>add_to_dict</name>
        <param>
          <type>std::vector&lt; std::vector&lt; int &gt;&gt; *</type>
          <declname>dummy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="11" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="11" bodyend="11"/>
        <referencedby refid="merge_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="merge_8cxx" startline="43" endline="137">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1ac80c7583f80df25d0ec694fd1ada1bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_to_dict</definition>
        <argsstring>(std::vector&lt; std::vector&lt; float &gt;&gt; *dummy)</argsstring>
        <name>add_to_dict</name>
        <param>
          <type>std::vector&lt; std::vector&lt; float &gt;&gt; *</type>
          <declname>dummy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="12" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1ac94e76edb517845bd2acd86546e645a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_to_dict</definition>
        <argsstring>(std::vector&lt; std::vector&lt; double &gt;&gt; *dummy)</argsstring>
        <name>add_to_dict</name>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>dummy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="13" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1a25454731599661849cc9d17ab24a432c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_to_dict</definition>
        <argsstring>(std::vector&lt; float &gt; *dummy)</argsstring>
        <name>add_to_dict</name>
        <param>
          <type>std::vector&lt; float &gt; *</type>
          <declname>dummy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="14" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1aed26043a2913492c6765273fe965efa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_to_dict</definition>
        <argsstring>(std::vector&lt; double &gt; *dummy)</argsstring>
        <name>add_to_dict</name>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>dummy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="15" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fetch_buffer</definition>
        <argsstring>(std::vector&lt; T &gt; **data, TFile *tf, std::string br)</argsstring>
        <name>fetch_buffer</name>
        <param>
          <type>std::vector&lt; T &gt; **</type>
          <declname>data</declname>
        </param>
        <param>
          <type>TFile *</type>
          <declname>tf</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>br</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="18" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="18" bodyend="24"/>
        <referencedby refid="merge_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="merge_8cxx" startline="43" endline="137">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_buffer</definition>
        <argsstring>(std::vector&lt; std::vector&lt; int &gt;&gt; *out, std::vector&lt; std::vector&lt; std::vector&lt; int &gt;&gt;&gt; *inpt, int index)</argsstring>
        <name>fill_buffer</name>
        <param>
          <type>std::vector&lt; std::vector&lt; int &gt;&gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::vector&lt; int &gt;&gt;&gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="26" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="26" bodyend="28"/>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
        <referencedby refid="merge_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="merge_8cxx" startline="43" endline="137">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1a799f679f3a46370b1cade9e3eb3255ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_buffer</definition>
        <argsstring>(std::vector&lt; std::vector&lt; float &gt;&gt; *out, std::vector&lt; std::vector&lt; std::vector&lt; float &gt;&gt;&gt; *inpt, int index)</argsstring>
        <name>fill_buffer</name>
        <param>
          <type>std::vector&lt; std::vector&lt; float &gt;&gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::vector&lt; float &gt;&gt;&gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="30" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="30" bodyend="32"/>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1a9a5711b42a4d2c92f762ec9c377ea608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_buffer</definition>
        <argsstring>(std::vector&lt; std::vector&lt; double &gt;&gt; *out, std::vector&lt; std::vector&lt; std::vector&lt; double &gt;&gt;&gt; *inpt, int index)</argsstring>
        <name>fill_buffer</name>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::vector&lt; double &gt;&gt;&gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="34" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="34" bodyend="36"/>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1a66f521068fb14b980b556a96bf329a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_buffer</definition>
        <argsstring>(std::vector&lt; double &gt; *out, std::vector&lt; std::vector&lt; double &gt;&gt; *inpt, int index)</argsstring>
        <name>fill_buffer</name>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; *</type>
          <declname>inpt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="38" column="6" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="38" bodyend="40"/>
        <references refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" compoundref="performance_2main_8py" startline="69">main.out</references>
      </memberdef>
      <memberdef kind="function" id="merge_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/AnalysisG/test/contraction/merge.cxx" line="43" column="5" bodyfile="/workspaces/AnalysisG/test/contraction/merge.cxx" bodystart="43" bodyend="137"/>
        <references refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" compoundref="merge_8cxx" startline="11" endline="11">add_to_dict</references>
        <references refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7">edge_index</references>
        <references refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" compoundref="merge_8cxx" startline="18" endline="24">fetch_buffer</references>
        <references refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" compoundref="merge_8cxx" startline="26" endline="28">fill_buffer</references>
        <references refid="namespacemain_1addad44088d98a1b128614b9004968ae0" compoundref="performance_2main_8py" startline="92">main.x</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TBranch.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTreeReader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTreeReaderValue.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TInterpreter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(<ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;int&gt;&gt;*<sp/>dummy){gInterpreter<sp/>-&gt;<sp/>GenerateDictionary(</highlight><highlight class="stringliteral">&quot;vector&lt;vector&lt;int&gt;&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="12" refid="merge_8cxx_1ac80c7583f80df25d0ec694fd1ada1bc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(<ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;float&gt;&gt;*<sp/>dummy){gInterpreter<sp/>-&gt;<sp/>GenerateDictionary(</highlight><highlight class="stringliteral">&quot;vector&lt;vector&lt;float&gt;&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="13" refid="merge_8cxx_1ac94e76edb517845bd2acd86546e645a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(<ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;double&gt;&gt;*<sp/>dummy){gInterpreter<sp/>-&gt;<sp/>GenerateDictionary(</highlight><highlight class="stringliteral">&quot;vector&lt;vector&lt;double&gt;&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="14" refid="merge_8cxx_1a25454731599661849cc9d17ab24a432c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(std::vector&lt;float&gt;*<sp/>dummy){gInterpreter<sp/>-&gt;<sp/>GenerateDictionary(</highlight><highlight class="stringliteral">&quot;vector&lt;float&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="15" refid="merge_8cxx_1aed26043a2913492c6765273fe965efa3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(std::vector&lt;double&gt;*<sp/>dummy){gInterpreter<sp/>-&gt;<sp/>GenerateDictionary(</highlight><highlight class="stringliteral">&quot;vector&lt;double&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="18" refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" kindref="member">fetch_buffer</ref>(std::vector&lt;T&gt;**<sp/><ref refid="namespacesimply__plot_1a73c4671efaa427b5621fe9d0d563decd" kindref="member">data</ref>,<sp/>TFile*<sp/>tf,<sp/>std::string<sp/>br){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>TTree*<sp/>tr<sp/><sp/><sp/><sp/>=<sp/>(TTree*)tf<sp/>-&gt;<sp/>Get(</highlight><highlight class="stringliteral">&quot;nominal&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>TTreeReader<sp/>r<sp/>=<sp/>TTreeReader(tr);<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>TTreeReaderValue&lt;T&gt;<sp/>dr(r,<sp/>br.c_str());<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>(*data)<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;();<sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(r.Next()){(*data)<sp/>-&gt;<sp/>push_back(*dr);}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(<ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;int&gt;&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;<ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;int&gt;&gt;&gt;*<sp/>inpt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>(*inpt)[index].size();<sp/>++i){<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/>push_back((*inpt)[index][i]);}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="merge_8cxx_1a799f679f3a46370b1cade9e3eb3255ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(<ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;float&gt;&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;<ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;float&gt;&gt;&gt;*<sp/>inpt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>(*inpt)[index].size();<sp/>++i){<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/>push_back((*inpt)[index][i]);}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="merge_8cxx_1a9a5711b42a4d2c92f762ec9c377ea608" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(<ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;double&gt;&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;<ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;double&gt;&gt;&gt;*<sp/>inpt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>(*inpt)[index].size();<sp/>++i){<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/>push_back((*inpt)[index][i]);}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="merge_8cxx_1a66f521068fb14b980b556a96bf329a2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(std::vector&lt;double&gt;*<sp/><ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref>,<sp/><ref refid="namespacehelper_1a6a86af0e435c054cabd85eebb8a45782" kindref="member">std::vector</ref>&lt;std::vector&lt;double&gt;&gt;*<sp/>inpt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>(*inpt)[index].size();<sp/>++i){<ref refid="namespacemain_1a0cfc6c3cbcca8f2703f7ceb7991f196c" kindref="member">out</ref><sp/>-&gt;<sp/>push_back((*inpt)[index][i]);}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="merge_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="merge_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>gErrorIgnoreLevel<sp/>=<sp/>6001;<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::vector&lt;int&gt;&gt;&gt;*<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::vector&lt;float&gt;&gt;&gt;*<sp/>edge_top<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::vector&lt;double&gt;&gt;&gt;*<sp/>top_kine<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::vector&lt;float&gt;&gt;&gt;*<sp/>graph_ntops<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::vector&lt;float&gt;&gt;&gt;*<sp/>graph_signal<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;*<sp/>res_mass<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;*<sp/>top_mass<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile*<sp/>tf2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFile(</highlight><highlight class="stringliteral">&quot;gnn.root&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" kindref="member">fetch_buffer</ref>(&amp;<ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/><sp/>,<sp/>tf2,<sp/></highlight><highlight class="stringliteral">&quot;edge_index&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" kindref="member">fetch_buffer</ref>(&amp;edge_top<sp/><sp/><sp/><sp/>,<sp/>tf2,<sp/></highlight><highlight class="stringliteral">&quot;extra_top_edge_score&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" kindref="member">fetch_buffer</ref>(&amp;top_kine<sp/><sp/><sp/><sp/>,<sp/>tf2,<sp/></highlight><highlight class="stringliteral">&quot;extra_top_kinematic&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" kindref="member">fetch_buffer</ref>(&amp;graph_ntops<sp/>,<sp/>tf2,<sp/></highlight><highlight class="stringliteral">&quot;extra_ntops_score&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" kindref="member">fetch_buffer</ref>(&amp;graph_signal,<sp/>tf2,<sp/></highlight><highlight class="stringliteral">&quot;extra_is_res_score&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" kindref="member">fetch_buffer</ref>(&amp;res_mass<sp/><sp/><sp/><sp/>,<sp/>tf2,<sp/></highlight><highlight class="stringliteral">&quot;extra_res_mass&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ad7425bc535a6afdfb68bf7b0bb01fea5" kindref="member">fetch_buffer</ref>(&amp;top_mass<sp/><sp/><sp/><sp/>,<sp/>tf2,<sp/></highlight><highlight class="stringliteral">&quot;extra_top_mass&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>tf2<sp/>-&gt;<sp/>Close();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tf2;<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>-&gt;<sp/>size()<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>edge_top<sp/>-&gt;<sp/>size()<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>top_kine<sp/>-&gt;<sp/>size()<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>graph_ntops<sp/>-&gt;<sp/>size()<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>graph_signal<sp/>-&gt;<sp/>size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>res_mass<sp/>-&gt;<sp/>size()<sp/>&lt;&lt;<sp/>std::endl;<sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>top_mass<sp/>-&gt;<sp/>size()<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;&gt;<sp/>edge_index_out<sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;float&gt;&gt;<sp/>edge_top_out<sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;<sp/>top_kine_out<sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;float&gt;&gt;<sp/>graph_signal_out<sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;float&gt;&gt;<sp/>graph_ntops_out<sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>res_mass_out;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>top_mass_out;<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(&amp;edge_index_out);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(&amp;edge_top_out);<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(&amp;graph_signal_out);<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(&amp;graph_ntops_out);<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(&amp;res_mass_out);<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1a7eff65f73039fb473d0008ddd9ff3b49" kindref="member">add_to_dict</ref>(&amp;top_mass_out);<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile*<sp/>tf1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFile(</highlight><highlight class="stringliteral">&quot;dst.root&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UPDATE&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>TTree*<sp/>tr1<sp/>=<sp/>(TTree*)tf1<sp/>-&gt;<sp/>Get(</highlight><highlight class="stringliteral">&quot;reco;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>Branch(</highlight><highlight class="stringliteral">&quot;edge_index&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;edge_index_out);<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>Branch(</highlight><highlight class="stringliteral">&quot;edge_top&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;edge_top_out);<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>Branch(</highlight><highlight class="stringliteral">&quot;top_pxpypze&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>&amp;top_kine_out);<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>Branch(</highlight><highlight class="stringliteral">&quot;graph_signal&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>&amp;graph_signal_out);<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>Branch(</highlight><highlight class="stringliteral">&quot;graph_ntops&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>&amp;graph_ntops_out);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>Branch(</highlight><highlight class="stringliteral">&quot;resonance_mass&quot;</highlight><highlight class="normal"><sp/>,<sp/>&amp;res_mass_out);<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>Branch(</highlight><highlight class="stringliteral">&quot;top_mass&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>&amp;top_mass_out);<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lx<sp/>=<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>-&gt;<sp/>size();<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>(0);<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>&lt;<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/>-&gt;<sp/>size();<sp/>++<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(&amp;edge_index_out<sp/><sp/>,<sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref><sp/><sp/>,<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>);<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(&amp;edge_top_out<sp/><sp/><sp/><sp/>,<sp/>edge_top<sp/><sp/><sp/><sp/>,<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>);<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(&amp;top_kine_out<sp/><sp/><sp/><sp/>,<sp/>top_kine<sp/><sp/><sp/><sp/>,<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>);<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(&amp;graph_signal_out,<sp/>graph_signal,<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>);<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(&amp;graph_ntops_out<sp/>,<sp/>graph_ntops<sp/>,<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(&amp;res_mass_out<sp/><sp/><sp/><sp/>,<sp/>res_mass<sp/><sp/><sp/><sp/>,<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="merge_8cxx_1ab9a80f1ec45f6ec7cb0284bcea0efa2b" kindref="member">fill_buffer</ref>(&amp;top_mass_out<sp/><sp/><sp/><sp/>,<sp/>top_mass<sp/><sp/><sp/><sp/>,<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref>);<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>Fill();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_index_out.clear();<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_top_out.clear();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_kine_out.clear();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_signal_out.clear();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph_ntops_out.clear();<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_mass_out.clear();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_mass_out.clear();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>%<sp/>lx){</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacemain_1addad44088d98a1b128614b9004968ae0" kindref="member">x</ref><sp/>/<sp/>lx<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>ResetBranchAddresses();<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>tr1<sp/>-&gt;<sp/>Write(0,<sp/>TObject::kOverwrite);<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>tf1<sp/>-&gt;<sp/>Close();<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tf1;<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="enums_8h_1a71db5b98a8935886920bcc7eaaf49fb9aeaef5a1a889ab3d077c4cbb1bf789bf7" kindref="member">edge_index</ref>;<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>edge_top;<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>top_kine;<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>graph_ntops;<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>graph_signal;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>res_mass;<sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>top_mass;<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/workspaces/AnalysisG/test/contraction/merge.cxx"/>
  </compounddef>
</doxygen>
