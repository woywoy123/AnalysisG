Bootstrap: docker
From: nvidia/cuda:12.4.0-devel-ubuntu22.04

%files
    ./CMakeLists.txt AnalysisG/
    ./pyproject.toml AnalysisG/
    ./LICENSE AnalysisG/
    ./src AnalysisG/
    ./test AnalysisG/
    ./studies AnalsisG/
    ./local AnalysisG/

%post
    mkdir /input
    mkdir /output
    mkdir /analysisg
    export HOME=$PWD

    TZ=Etc/UTC && \
        ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
        echo $TZ > /etc/timezone

    apt-get update -y
    apt-get install -y git wget
    apt-get install -y build-essential
    apt-get install -y zlib1g-dev
    apt-get install -y libbz2-dev 
    apt-get install -y libreadline-dev 
    apt-get install -y libsqlite3-dev 
    apt-get install -y curl 
    apt-get install -y llvm 
    apt-get install -y tk-dev 
    apt-get install -y libxmlsec1-dev 
    apt-get install -y liblzma-dev 
    apt-get install -y liblapack-dev 
    apt-get install -y libopenblas-dev 
    apt-get install -y libhdf5-dev 
    apt-get install -y rapidjson-dev 
    apt-get install -y cmake  
    apt-get install -y libxpm-dev 
    apt-get install -y libtbb-dev
    apt-get install -y gfortran  
    apt-get install -y libpcre3-dev  
    apt-get install -y libglu1-mesa-dev   
    apt-get install -y libglew-dev  
    apt-get install -y libftgl-dev  
    apt-get install -y libfftw3-dev  
    apt-get install -y libcfitsio-dev  
    apt-get install -y libgraphviz-dev  
    apt-get install -y libavahi-compat-libdnssd-dev 
    apt-get install -y libldap2-dev 
    apt-get install -y libkrb5-dev 
    apt-get install -y libgsl-dev 
    apt-get install -y qtwebengine5-dev 
    apt-get install -y nlohmann-json3-dev 
    apt-get install -y libmysqlclient-dev

    export PYENV_ROOT=/opt/pyenv
    export PATH="/opt/pyenv/bin:$PATH"
    curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
    pyenv install 3.12.4
    echo 'export PATH=/opt/pyenv/versions/3.12.4/bin/:$PATH' >> $SINGULARITY_ENVIRONMENT
    export PATH=/opt/pyenv/versions/3.12.4/bin/:$PATH

    git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git /opt/root_src
    mkdir /opt/build /opt/ROOT
    cd /opt/build 

    cmake -DCMAKE_INSTALL_PREFIX=/opt/ROOT /opt/root_src -Dminimal=ON
    cmake --build . --target install -j48
    cd -

    export ROOTSYS=/opt/ROOT
    export PATH=$ROOTSYS/bin:$PATH
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib
    export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$ROOTSYS/cmake
    rm -rf /opt/build /opt/root_src

    export TORCH_CUDA_ARCH_LIST="8.0 8.6 8.9 9.0+PTX"
    cd $HOME/AnalysisG
    pip install -v .
    apt-get clean && apt-get autoclean
    cd $HOME

%environment
    export ROOTSYS=/opt/ROOT
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib
    export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$ROOTSYS/cmake
    export TORCH_CUDA_ARCH_LIST="8.0 8.6 8.9 9.0+PTX"
    export PATH=$ROOTSYS/bin:$PATH
    export OUTPUT=/output
    export INPUT=/input
    export ANALYSISG=$HOME/AnalysisG

%runscript studies
    echo "Argument: $*"
    cd $HOME/AnalysisG/studies/

%runscript model
    echo "Argument: $*"

